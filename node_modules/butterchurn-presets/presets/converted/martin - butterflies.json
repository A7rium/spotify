{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.5274,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":282,"sep":20,"additive":1,"scaling":7.858,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.25},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.2+div(a.sample,2);a.y=.5;a.r=.5+.2*Math.sin(div(a.time,17));a.g=.5+.2*Math.sin(div(a.time,23));a.b=.5+.2*Math.sin(div(a.time,11));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.dec_xlow=0;a.index2=0;a.index=0;a.q18=0;a.q22=0;a.q21=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.trel=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.puls=0;a.q19=0;a.beat=0;a.q17=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q7=0;a.q20=0;a.q8=0;a.xk=0;","frame_eqs_str":"a.dec_med=pow(.8,div(30,a.fps));a.dec_slow=pow(.95,div(30,a.fps));a.dec_xlow=pow(.995,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=\na.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att;a.q27=a.index+1;a.k1=a.is_beat*equal(mod(a.index,3),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.trel=div(a.time,3);a.q5=Math.cos(a.trel);a.q6=Math.sin(a.trel);a.q7=-a.q6;a.q8=a.q5;a.puls=a.puls*a.dec_slow+a.q22*(1-a.dec_slow);a.q17=31*Math.min(8,a.puls+4);a.q18=.006+div(.04*(Math.sin(div(a.time,14))+1),2);a.q19=.05*Math.sin(1*a.time);\na.q20=.05*Math.cos(1.6*a.time);a.monitor=a.q18;","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutablec;\nvec2 xlat_mutabletmp;\nvec2 xlat_mutablezz;\n shader_body { \n  vec3 ret_1;\n  xlat_mutablec = (((uv_orig - 0.5) * 4.0) + vec2(-0.5, 0.0));\n  xlat_mutablezz.x = ((xlat_mutablec.x * xlat_mutablec.x) - (xlat_mutablec.y * xlat_mutablec.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutablec.x) * xlat_mutablec.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  ret_1 = (((texture (sampler_noise_lq, \n    (abs(xlat_mutablezz) / 12.0)\n  ) * 0.15) / (\n    dot (xlat_mutablezz, xlat_mutablezz)\n   + 2.0)).xyz + texture (sampler_fc_main, (uv + (xlat_mutablezz * q18))).xyz);\n  ret_1 = ((ret_1 * 0.99) - 0.01);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":"vec3 xlat_mutablebfly;\nvec3 xlat_mutablebush;\nfloat xlat_mutablehinten;\nfloat xlat_mutablek;\nvec3 xlat_mutableneu;\nvec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\nfloat xlat_mutablez;\n shader_body { \n  vec3 clouds_1;\n  xlat_mutableuv1 = (uv - vec2(0.5, 1.0));\n  xlat_mutableuv1 = (xlat_mutableuv1 * aspect.xy);\n  xlat_mutablehinten = (1.0/((xlat_mutableuv1.y - 0.1)));\n  xlat_mutablehinten = clamp (xlat_mutablehinten, -6.0, 0.0);\n  xlat_mutablers.x = ((xlat_mutableuv1.x * 1.5) * xlat_mutablehinten);\n  xlat_mutablers.y = ((1.5 * xlat_mutablehinten) - time);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_pw_noise_lq, (xlat_mutablers / 256.0));\n  float tmpvar_3;\n  tmpvar_3 = (time * 16.0);\n  xlat_mutablek = (0.4 * sin((tmpvar_3 * \n    (0.5 + tmpvar_2.x)\n  )));\n  xlat_mutablez = ((xlat_mutablek * abs(\n    (fract(xlat_mutablers.x) - 0.5)\n  )) + 1.5);\n  xlat_mutablez = (xlat_mutablez - (0.04 * xlat_mutablek));\n  xlat_mutablers.y = ((xlat_mutablez * xlat_mutablehinten) - time);\n  vec2 tmpvar_4;\n  tmpvar_4 = fract(xlat_mutablers.yx);\n  float tmpvar_5;\n  tmpvar_5 = (q18 * 16.0);\n  xlat_mutableneu = (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1) - ((1.0 - tmpvar_5) * (\n    (texture (sampler_blur2, tmpvar_4).xyz * scale2)\n   + bias2)));\n  xlat_mutableneu = (xlat_mutableneu * ((\n    (normalize(tmpvar_2.xyz) * 8.0)\n   * \n    clamp ((6.0 + xlat_mutablehinten), 0.0, 1.0)\n  ) / xlat_mutablehinten));\n  xlat_mutablebfly = ((abs(xlat_mutableneu) * float(\n    (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) >= 0.86)\n  )) * float((xlat_mutablehinten <= 0.0)));\n  xlat_mutablers.x = ((xlat_mutableuv1.x * 3.0) * xlat_mutablehinten);\n  xlat_mutablers.y = ((3.0 * xlat_mutablehinten) - time);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pw_noise_lq, (xlat_mutablers / 256.0));\n  xlat_mutablek = (0.4 * sin((tmpvar_3 * \n    (0.5 + tmpvar_6.x)\n  )));\n  xlat_mutablez = ((xlat_mutablek * abs(\n    (fract(xlat_mutablers.x) - 0.5)\n  )) + 3.0);\n  xlat_mutablez = (xlat_mutablez - (0.04 * xlat_mutablek));\n  xlat_mutablers.y = ((xlat_mutablez * xlat_mutablehinten) - time);\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(xlat_mutablers.yx);\n  xlat_mutableneu = (((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1) - ((1.0 - tmpvar_5) * (\n    (texture (sampler_blur2, tmpvar_7).xyz * scale2)\n   + bias2)));\n  xlat_mutableneu = (xlat_mutableneu * ((\n    (normalize(tmpvar_6.xyz) * 8.0)\n   * \n    clamp ((6.0 + xlat_mutablehinten), 0.0, 1.0)\n  ) / xlat_mutablehinten));\n  xlat_mutablebfly = (xlat_mutablebfly + ((\n    abs(xlat_mutableneu)\n   * \n    float((dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29)) >= 0.86))\n  ) * float(\n    (xlat_mutablehinten <= 0.0)\n  )));\n  float tmpvar_8;\n  tmpvar_8 = clamp ((1.0/(abs(\n    (xlat_mutableuv1.y - 0.1)\n  ))), 0.0, 18.0);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (xlat_mutableuv1.x * tmpvar_8);\n  tmpvar_9.y = ((tmpvar_8 * 2.0) + time);\n  xlat_mutablers = (tmpvar_9 / 12.0);\n  clouds_1 = (vec3(dot (texture (sampler_noise_hq, xlat_mutablers), vec4(0.32, 0.49, 0.29, 0.0))) * clamp ((1.0 - uv.y), 0.0, 1.0));\n  vec3 tmpvar_10;\n  tmpvar_10.xy = vec2(0.4, 0.7);\n  tmpvar_10.z = (1.0 - xlat_mutableuv1.y);\n  clouds_1 = (clouds_1 * (tmpvar_10 * 0.5));\n  vec2 uv5_11;\n  uv5_11.y = xlat_mutableuv1.y;\n  float tmpvar_12;\n  tmpvar_12 = (uv.y * 1.05);\n  uv5_11.x = (xlat_mutableuv1.x + (tmpvar_12 * q20));\n  vec2 tmpvar_13;\n  tmpvar_13.x = (uv5_11.x * 2.0);\n  tmpvar_13.y = (xlat_mutableuv1.y * 4.0);\n  xlat_mutableneu = (clamp ((\n    (0.2 * vec3(((abs(xlat_mutableuv1.y) * (1.0 + texture (sampler_noise_lq, tmpvar_13).y)) * (3.0 + (2.0 * texture (sampler_noise_hq, vec2(\n      (uv5_11.x / 2.0)\n    )).y)))))\n   - 0.4), 0.0, 1.0) * clamp ((-8.0 * xlat_mutableuv1.y), 0.0, 1.0));\n  vec3 tmpvar_14;\n  tmpvar_14.yz = vec2(1.0, 0.2);\n  tmpvar_14.x = (2.0 * (0.5 + (0.5 * texture (sampler_noise_hq, \n    (uv5_11 * 2.0)\n  ))).x);\n  xlat_mutableneu = (xlat_mutableneu * (tmpvar_14 * clamp (\n    ((4.0 * texture (sampler_noise_hq, (uv5_11 * 8.0))) * texture (sampler_noise_hq, (uv5_11 * 24.0)))\n  , 0.0, 1.0).x));\n  xlat_mutablebush = max (vec3(0.0, 0.0, 0.0), xlat_mutableneu);\n  vec2 uv5_15;\n  vec2 tmpvar_16;\n  tmpvar_16 = (xlat_mutableuv1 + vec2(0.0, -0.04));\n  uv5_15.y = tmpvar_16.y;\n  uv5_15.x = (tmpvar_16.x + (tmpvar_12 * q19));\n  vec2 tmpvar_17;\n  tmpvar_17.x = (uv5_15.x * 2.0);\n  tmpvar_17.y = (tmpvar_16.y * 4.0);\n  xlat_mutableneu = (clamp ((\n    (0.2 * vec3(((abs(tmpvar_16.y) * (1.0 + texture (sampler_noise_lq, tmpvar_17).y)) * (3.0 + (2.0 * texture (sampler_noise_hq, vec2(\n      ((uv5_15.x / 2.0) * 2.0)\n    )).y)))))\n   - 0.4), 0.0, 1.0) * clamp ((-8.0 * tmpvar_16.y), 0.0, 1.0));\n  vec3 tmpvar_18;\n  tmpvar_18.yz = vec2(1.0, 0.2);\n  tmpvar_18.x = (2.0 * (0.5 + (0.5 * texture (sampler_noise_hq, \n    (uv5_15 * 2.0)\n  ))).x);\n  xlat_mutableneu = (xlat_mutableneu * (tmpvar_18 * clamp (\n    ((4.0 * texture (sampler_noise_hq, (uv5_15 * 8.0))) * texture (sampler_noise_hq, (uv5_15 * 24.0)))\n  , 0.0, 1.0).x));\n  xlat_mutablebush = max (xlat_mutablebush, xlat_mutableneu);\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = (((\n    clamp ((clouds_1 * (1.0 - (32.0 * xlat_mutablebush))), 0.0, 1.0)\n   + xlat_mutablebush) * clamp (\n    (1.0 - (8.0 * xlat_mutablebfly))\n  , 0.0, 1.0)) + xlat_mutablebfly);\n  ret = tmpvar_19.xyz;\n }"}