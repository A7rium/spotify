{"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":13.694,"echo_alpha":0.3,"wave_thick":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":0.972,"wave_smoothing":0.9,"wave_mystery":0.094,"modwavealphastart":1,"modwavealphaend":1.3,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"fshader":0.33,"wave_x":1,"ob_size":0,"ob_r":1,"ob_g":0.1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.59957,"tex_zoom":1.3345,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.vol=0;a.bob=0;a.bob=0;a.bob=0;a.bob=0;a.bob=0;a.bob=0;a.bob=0;a.vol=0;a.bob=0;a.border_1=0;a.ro=0;a.ro=0;a.ro=0;a.sp=0;a.red=0;a.spi=0;a.sp=0;a.tm=0;a.sp=0;a.tm=0;a.spi=0;a.tm=0;a.sp=0;a.tm=0;a.spi=0;a.tm=0;a.sp=0;a.tm=0;a.spi=0;a.tm=0;a.bob=1.5;a.ro=0;a.red=Math.floor(randint(20));","frame_eqs_str":"a.vol=1+.2*div(a.bass_att+a.treb_att+a.mid_att,3);a.bob=a.bob*above(a.bob,.01)-.01+(1-above(a.bob,.01));a.bob=.4+.4*Math.sin(.8*a.time);a.bob*=a.vol;a.rad=a.bob;a.border_1=.4;a.sides=30;a.ro+=.02;a.ang=a.ro;a.rad=.6;a.sp=.025*a.red;a.spi=.5-a.sp;a.tm=.1*a.time;a.border_r=.5+a.sp*Math.sin(.6*a.tm)+a.spi*Math.cos(1.46*a.tm);a.border_g=.5+a.sp*Math.sin(1.294*a.tm)+a.spi*Math.cos(.87*a.tm);a.border_b=.5+a.sp*Math.sin(1.418*a.tm)+a.spi*Math.cos(.76*a.tm);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time);a.y=.5+.3*Math.cos(a.time);a.rad*=a.mid_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time+2.09);a.y=.5+.3*Math.cos(a.time+2.09);a.rad*=a.bass_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time+4.19);a.y=.5+.3*Math.cos(a.time+4.19);a.rad*=a.treb_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.xpos=0;a.yamptarg=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.y_pos=0;a.ydir=0;a.q13=0;a.meanbass_att=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.myx=0;a.q5=0;a.mq21=0;a.mq24=0;a.myy=0;a.chng=0;a.mq28=0;a.lastbeat=0;a.mq23=0;a.beatrate=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.peakbass_att=0;a.xamptarg=0;a.atime=0;a.xamp=0;a.xspeed=0;a.q4=0;a.ypos=0;a.movement=0;a.q26=0;a.att=0;a.mq27=0;a.mq25=0;a.volume=0;a.mq22=0;a.beat=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.yamp=0;a.q3=\n0;a.xdir=0;a.q28=0;a.q8=0;a.yspeed=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?randint(1):a.mq27;\na.mq28=.00001<Math.abs(above(a.chng,a.cthr))?randint(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*randint(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*randint(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*\na.atime);a.monitor=a.q13;a.q4=Math.sin(.03*a.atime);a.q5=Math.cos(.030383824*a.atime);a.q6=Math.tan(.029384834*a.atime);a.warp=0;a.volume=.3*(a.bass+a.mid+a.att);a.xamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.25*a.volume*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),\na.xamp);a.xpos+=.001*a.xspeed;a.yamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.15*a.volume*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yspeed=a.yspeed+a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*a.yspeed;a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,\n.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*\n(.95*above(a.time-a.lastbeat,2*a.beatrate)+.995*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.wave_x=a.xpos+.5;a.wave_y=1-(a.ypos+.5);a.wave_r=.5+.499*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.wave_g=.5+.499*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b=.5+.499*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.wave_mystery=-.17+.03*(.6*Math.sin(.637*a.time)+.4*\nMath.sin(.949*a.time));a.mv_r=.00001<Math.abs(a.beat)?1:a.ib_r;a.mv_b=.00001<Math.abs(a.beat)?a.wave_b:a.ib_b;a.q3=a.wave_mystery;a.q1=a.wave_x;a.q2=1-a.wave_y;a.q2=a.ypos+.5;a.warp=0;a.ob_r=1-a.wave_g;a.ob_b=1-a.wave_r;a.ob_g=1-a.wave_b;a.monitor=a.wave_y;a.movement+=.4*div(a.bass+a.bass_att+.1*pow(a.bass+.6*a.bass_att+.2*a.treb_att,3),a.fps);a.movement=.00001<Math.abs(above(a.movement,1E4))?0:a.movement;a.rot=Math.sin(a.movement);a.cx=a.wave_x;a.cy=a.y_pos+.5;a.q8=a.movement;","pixel_eqs_str":"a.myy=a.x-a.q1;a.myx=a.y-a.q2+.1;a.dx=6*Math.sin(.675*a.q8)*a.myx*a.myy;a.dy=3*Math.sin(.675*a.q8)*(a.myx*a.myx-a.myy*a.myy);","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec3 tmpvar_3;\n  tmpvar_3 = (texture (sampler_noise_lq, (uv + q3)) - 0.5).xyz;\n  uv_1 = (uv + (tmpvar_3 * 0.01).xy);\n  ret_2 = (texture (sampler_main, ((uv_1 * 0.98) + (\n    ((texture (sampler_blur3, ((\n      (uv_1 - 0.5)\n     * 0.9) + 0.5)).xyz * scale3) + bias3)\n   * 0.1).xy)).xyz + (tmpvar_3 * 0.01));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y - (tmpvar_4.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x - (tmpvar_4.z * 0.5));\n  };\n  ret_2 = (ret_2 - 0.01);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret1_1;\n  vec2 uv1_2;\n  vec3 ret_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, uv);\n  ret_3 = tmpvar_4.xyz;\n  vec3 tmpvar_5;\n  tmpvar_5 = ((texture (sampler_blur2, uv).xyz * scale2) + bias2);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_4.x > (q26 * q13)) && (tmpvar_4.x <= (q23 * q11)))) {\n    ret_3.z = (tmpvar_4.z - (tmpvar_6.x * 0.5));\n  };\n  if (((tmpvar_4.y > (q25 * q11)) && (tmpvar_4.y <= (q22 * q12)))) {\n    ret_3.x = (tmpvar_4.x - (tmpvar_6.y * 0.5));\n  };\n  if (((ret_3.z > (q24 * q12)) && (ret_3.z <= (q21 * q13)))) {\n    ret_3.y = (tmpvar_4.y - (tmpvar_6.z * 0.5));\n  };\n  ret_3 = (ret_3 * (0.6 + (0.3 * \n    sin(((uv.x * 10.0) + time))\n  )));\n  vec2 tmpvar_7;\n  tmpvar_7.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\n  tmpvar_7.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\n  uv1_2 = ((0.5 * cos(\n    (((uv - 0.5) * 1.5) + 1.6)\n  )) - (3.0 * tmpvar_7));\n  ret1_1 = ((0.3 * dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29))) + ((\n    clamp ((0.01 / sqrt(dot (uv1_2, uv1_2))), 0.0, 1.0)\n   * \n    mix (vec3(dot (tmpvar_5, vec3(0.32, 0.49, 0.29))), ret_3, pow (ret_3, vec3((0.05 + (mid_att * 0.03)))))\n  ) * (\n    (4.0 + bass)\n   + \n    (mid + treb_att)\n  )));\n  ret_3 = ret1_1;\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret1_1;\n  ret = tmpvar_8.xyz;\n }"}