{"baseVals":{"rating":0,"gammaadj":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.037,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.803,"warpscale":1.22,"zoomexp":1.50374,"warp":0.31218,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0.75,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"rad":0.0578,"ang":3.20442,"tex_zoom":6.23873,"r2":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":64,"additive":1,"thickoutline":1,"rad":0.16283,"ang":0.75398,"tex_zoom":0.73458,"r":0,"g":1,"border_a":0},"init_eqs_str":"a.vx=0;","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.d=0;a.y1=0;a.w=0;a.ww=0;a.q12=0;a.q18=0;a.q13=0;a.q15=0;a.q6=0;a.q1=0;a.q5=0;a.q9=0;a.x=0;a.v=0;a.ww1=0;a.tt=0;a.vx=0;a.q11=0;a.q10=0;a.vy=0;a.q4=0;a.a=0;a.q16=0;a.w1=0;a.y=0;a.q19=0;a.q17=0;a.y2=0;a.bb=0;a.q2=0;a.q14=0;a.v1=0;a.q3=0;a.q7=0;a.v2=0;a.q20=0;a.q8=0;","frame_eqs_str":"a.warp=.1;a.zoom=1;a.wave_a=0;a.w=a.w1;a.ww=-(a.y1-a.y2)*(1+2*(div(70,a.fps)-1))-.8*a.y1;a.w-=5*a.ww;a.q1=Math.cos(a.ww);a.q2=Math.sin(a.ww);a.q3=1.12;a.q4=.042*Math.sin(a.w);a.q5=.042*Math.cos(a.w);a.a=.5*Math.asin(1);a.d=.08;a.q6=Math.cos(a.a+0*a.ww);a.q7=Math.sin(a.a+0*a.ww);a.q8=3.3;a.q9=Math.cos(-a.w+Math.asin(1))*a.d*a.aspectx;a.q10=Math.sin(-a.w+Math.asin(1))*a.d*a.aspecty;a.q11=Math.cos(-a.a+0*a.ww);a.q12=Math.sin(-a.a+0*a.ww);a.q13=a.q8;a.q14=Math.cos(-a.w+Math.asin(1))*\na.d*a.aspectx;a.q15=Math.sin(-a.w+Math.asin(1))*a.d*a.aspecty;a.bb=.97*a.bb+.04*a.bass;a.tt=.97*a.tt+.04*a.treb;a.w1+=a.ww1*sqrt(a.vx*a.vx+a.vy*a.vy)*a.a*2;a.ww1=.94*a.ww1+.1*a.y1;a.q16=.2*(a.bb-a.tt);a.y1+=.1*a.v1;a.y2+=.2*a.v2;a.v1=.95*a.v1-.1*(a.y1-a.q16);a.v2=.99*a.v2-.2*(a.y2-a.y1);a.a=div(2.2*Math.abs(a.y2-a.y1),a.fps);a.q17=Math.sin(a.w)*a.a;a.q18=-Math.cos(a.w)*a.a;a.v=.25;a.x+=a.vx*a.v;a.x=Math.min(1,Math.max(-1,a.x));a.y+=a.vy*a.v;a.y=Math.min(1,Math.max(-1,a.y));a.vx=.97*a.vx+Math.sin(a.w)*\na.a+.2*(equal(a.x,-1)-equal(a.x,1));a.vy=.97*a.vy-Math.cos(a.w)*a.a+.2*(equal(a.y,-1)-equal(a.y,1));a.q19=.5*a.x;a.q20=.5*a.y;","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutablefactorA;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv_orig - 0.5);\n  xlat_mutablefactorA = (tmpvar_2 * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((xlat_mutablefactorA.x * q1) - (xlat_mutablefactorA.y * q2));\n  tmpvar_3.y = ((xlat_mutablefactorA.x * q2) + (xlat_mutablefactorA.y * q1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = q4;\n  tmpvar_4.y = q5;\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((xlat_mutablefactorA.x * q6) - (xlat_mutablefactorA.y * q7));\n  tmpvar_5.y = ((xlat_mutablefactorA.x * q7) + (xlat_mutablefactorA.y * q6));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q9;\n  tmpvar_6.y = q10;\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((xlat_mutablefactorA.x * q11) - (xlat_mutablefactorA.y * q12));\n  tmpvar_7.y = ((xlat_mutablefactorA.x * q12) + (xlat_mutablefactorA.y * q11));\n  vec2 tmpvar_8;\n  tmpvar_8.x = q14;\n  tmpvar_8.y = q15;\n  ret_1.x = (max (texture (sampler_main, clamp (\n    ((0.5 + ((tmpvar_3 * aspect.zw) * q3)) + (tmpvar_4 * aspect.zw))\n  , 0.0, 1.0)).x, max (texture (sampler_main, \n    clamp (((0.5 + (\n      (tmpvar_5 * aspect.zw)\n     * q8)) + tmpvar_6), 0.0, 1.0)\n  ).x, texture (sampler_main, \n    clamp (((0.5 + (\n      (tmpvar_7 * aspect.zw)\n     * q13)) + tmpvar_8), 0.0, 1.0)\n  ).x)) - 0.015);\n  vec2 tmpvar_9;\n  tmpvar_9 = (tmpvar_2 * vec2(1.8, 1.8));\n  vec2 tmpvar_10;\n  tmpvar_10.x = ((tmpvar_9.x * tmpvar_9.x) - (tmpvar_9.y * tmpvar_9.y));\n  tmpvar_10.y = ((2.0 * tmpvar_9.x) * tmpvar_9.y);\n  ret_1.y = texture (sampler_fc_main, (tmpvar_10 + vec2(0.5, 0.71))).y;\n  ret_1.z = max (texture (sampler_main, (uv + vec2(-0.1, -0.1))).y, (texture (sampler_main, (uv + \n    (vec2(2.0, 1.0) * texsize.zw)\n  )).z - 0.0038));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  xlat_mutabled = (texsize.zw * 4.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv + (vec2(-1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv + (vec2(0.0, -1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_1;\n  tmpvar_1.x = xlat_mutabledx.z;\n  tmpvar_1.y = xlat_mutabledy.z;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q19;\n  tmpvar_2.y = q20;\n  vec2 tmpvar_3;\n  tmpvar_3 = clamp (((0.5 + \n    (uv - 0.5)\n  ) + (tmpvar_2 * vec2(-1.0, 1.0))), 0.0, 1.0);\n  xlat_mutabled = (texsize.zw * 3.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (tmpvar_3 + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_3 + (vec2(-1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (tmpvar_3 + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_3 + (vec2(0.0, -1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.x;\n  tmpvar_4.y = xlat_mutabledy.x;\n  vec2 tmpvar_5;\n  tmpvar_5.x = xlat_mutabledx.x;\n  tmpvar_5.y = xlat_mutabledy.x;\n  vec2 tmpvar_6;\n  tmpvar_6.x = xlat_mutabledx.x;\n  tmpvar_6.y = xlat_mutabledy.x;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = mix (mix (mix (vec3(\n    (((texture (sampler_blur2, (\n      fract((uv + (tmpvar_1 * 1.6)))\n     - tmpvar_5)).xyz * scale2) + bias2).z * 0.6)\n  ), \n    ((vec3(1.0, -0.2, 0.3) * uv.y) + (vec3(1.0, 1.0, -0.2) * (1.0 - uv.y)))\n  , texture (sampler_main, \n    (uv - (tmpvar_6 * 0.4))\n  ).zzz), vec3(1.0, 1.0, 1.0), (\n    (texture (sampler_blur1, (tmpvar_3 - (tmpvar_4 * 0.4))).xyz * scale1)\n   + bias1).xxx), ((vec3(0.5, 0.0, 0.5) * uv.x) + (vec3(0.0, 1.0, 1.0) * \n    (1.0 - uv.x)\n  )), texture (sampler_main, tmpvar_3).xxx);\n  ret = tmpvar_7.xyz;\n }"}