{"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.46,"y":0.38,"rad":0.267799,"tex_zoom":1.051004,"r":0.8,"g":1,"b":0.5,"r2":0.9,"g2":0.9,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q9=0;a.q10=0;","frame_eqs_str":"a.x=.5+.1*a.q1;a.y=.5+.1*a.q2;a.x=.5-div(a.q9,5);a.y=.6+div(a.q10,5);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.2,"b":0.2,"g2":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.05+div(randint(900),1E3);a.y=.05+div(randint(900),1E3);a.ang=div(randint(320),100);a.a=.4;"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.index2=0;a.xk=0;a.kiss=0;a.sw=0;a.yk=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q6=0;a.dt=0;a.y0=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.q9=0;a.x0=0;a.ax=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.vx=0;a.dec_slow=0;a.q10=0;a.vy=0;a.q4=0;a.k2=0;a.q26=0;a.ay=0;a.p2=0;a.avg=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.m=0;a.q7=0;a.q28=0;a.v2=0;a.q20=0;a.q8=0;a.vol=0;a.p1=0;a.vx=.2;a.vy=-.1;a.kx=0;a.ky=0;","frame_eqs_str":"a.dec_med=pow(.96,div(30,a.fps));a.dec_slow=pow(.998,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),2);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.vol=a.bass_att+a.treb_att;a.v2=a.v2*a.dec_med+a.vol*(1-a.dec_med);a.q26=Math.max(Math.atan(a.vol-a.v2),0);a.q27=a.index+1;a.sw=a.sw*a.dec_med+(1-a.dec_med)*mod(a.index2,2);a.q28=a.sw;a.kiss=a.kiss*a.dec_med+(1-a.dec_med)*bnot(a.index2)*below(a.index,4);a.q29=a.kiss;a.k1=a.is_beat*bnot(a.index);a.k2=a.is_beat*bnot(a.index);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,2);a.monitor=a.k1;a.q1=Math.cos(a.rott);\na.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q5=Math.cos(div(a.time,4));a.q6=-Math.sin(div(a.time,4));a.q7=-a.q6;a.q8=a.q5;a.zoom=1;a.rot=-0;a.dt=div(3,a.fps);a.m=1;a.x0=0;a.y0=0;a.x0=div(a.q1,4);a.y0=div(a.q2,4);a.ax=-(a.xk-a.x0);a.ay=-(a.yk-a.y0);a.monitor=a.index3;a.vx=a.vx*a.dec_slow+a.ax*a.dt;a.vy=a.vy*a.dec_slow+a.ay*a.dt;a.xk+=a.vx*a.dt;a.yk+=a.vy*a.dt;a.q9=a.xk;a.q10=a.yk;","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutableball;\nvec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec2 uv_1;\n  vec2 uv2_2;\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = ((18.0 * sqrt(\n    dot (xlat_mutableuv1, xlat_mutableuv1)\n  )) + time);\n  xlat_mutablers = (clamp ((\n    (sin(tmpvar_3) / cos(tmpvar_3))\n   * \n    normalize(xlat_mutableuv1)\n  ), vec2(-5.0, -5.0), vec2(5.0, 5.0)) / 2.0);\n  float tmpvar_4;\n  tmpvar_4 = ((q29 * 16.0) + 1.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q9;\n  tmpvar_5.y = q10;\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * sqrt(tmpvar_4));\n  xlat_mutableball = (sin((xlat_mutableuv1 * tmpvar_4)) - tmpvar_6);\n  float tmpvar_7;\n  tmpvar_7 = (sqrt(dot (xlat_mutableball, xlat_mutableball)) / ((0.035 * \n    pow (tmpvar_4, 0.9)\n  ) * (1.0 + \n    sqrt(dot (tmpvar_6, tmpvar_6))\n  )));\n  float tmpvar_8;\n  tmpvar_8 = clamp ((sign(\n    (1.0 - tmpvar_7)\n  ) * sqrt(\n    (1.0 - tmpvar_7)\n  )), 0.0, 1.0);\n  float tmpvar_9;\n  tmpvar_9 = float((tmpvar_8 >= 0.001));\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\n  uv_1 = (uv_orig + ((\n    ((1.0 - tmpvar_9) * 0.03)\n   * xlat_mutablers.yx) + (\n    ((0.6 * tmpvar_9) * tmpvar_8)\n   * \n    normalize(xlat_mutableball)\n  )));\n  mat2 tmpvar_10;\n  tmpvar_10[uint(0)] = _qb.xy;\n  tmpvar_10[1u] = _qb.zw;\n  vec2 tmpvar_11;\n  tmpvar_11.x = sin((xlat_mutableuv1.y * 16.0));\n  tmpvar_11.y = sin((xlat_mutableuv1.x * 16.0));\n  uv2_2 = (((0.7 * xlat_mutableuv1) + (0.3 * tmpvar_11)) * 0.2);\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = (((\n    ((texture (sampler_main, uv_1).xyz - ((\n      (texture (sampler_blur1, fract(uv_1)).xyz * scale1)\n     + bias1) * 0.03)) + (vec3(1.0, 0.84, 0.6) * ((0.08 * \n      abs(vec3(((0.16 / (\n        sqrt((xlat_mutableuv1 * tmpvar_10).x)\n       + 0.002)) * rad)))\n    ) - (tmpvar_8 * \n      (0.2 + (0.3 * slow_roam_cos.xyz))\n    ))))\n   + vec3(\n    (q26 * clamp ((0.0015 / sqrt(\n      dot (uv2_2, uv2_2)\n    )), 0.0, 1.0))\n  )) * 0.99) - 0.018);\n  ret = tmpvar_12.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (0.8 * (texture (sampler_main, uv).xyz + (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret = tmpvar_1.xyz;\n }"}