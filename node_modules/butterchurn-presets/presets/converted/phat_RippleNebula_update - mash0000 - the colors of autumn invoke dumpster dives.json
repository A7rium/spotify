{"baseVals":{"rating":0,"gammaadj":1.77,"decay":1,"echo_zoom":1.222,"wave_mode":7,"additivewave":1,"wave_thick":1,"brighten":1,"wave_a":0.001,"wave_scale":100,"wave_smoothing":0.9,"modwavealphastart":0.88,"modwavealphaend":1.98,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"warp":0.01,"sy":1.00183,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.8,"ob_b":0.7,"ib_size":0.035,"ib_r":1,"ib_g":0,"ib_b":0.3,"ib_a":0.1,"mv_x":0,"mv_y":0,"mv_l":5,"mv_r":0.36,"mv_g":0.39,"mv_b":0.9,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"additive":1,"rad":100,"ang":2.51327,"tex_ang":4.08407,"tex_zoom":0.15528,"r":0.7,"b":0.4,"a":0.05,"g2":0.1,"b2":1,"a2":1,"border_r":0,"border_a":0},"init_eqs_str":"a[\"var\"]=0;a[\"var\"]=0;a[\"var\"]=0;","frame_eqs_str":"a.ang=6*Math.sin(a.time);a[\"var\"]=.12-.2*above(a.bass,.8);a.x=Math.sin(a.time)*a[\"var\"]+.5;a.y=Math.cos(a.time)*a[\"var\"]+.5;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":20,"textured":1,"rad":0.96666,"ang":0.6283,"tex_ang":0.62832,"tex_zoom":0.7273,"border_a":0},"init_eqs_str":"","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.tmmod=0;a.tm=0;a.stm=0;a.mir=0;a.q1=0;a.nx=0;a.tmm=0;a.flip=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=.999;a.ib_b=Math.sin(div(a.time,20))+.5;a.ib_g=.3*Math.cos(div(a.time,15))+.25;a.ib_r=.3*Math.sin(div(a.time,17))+.25;a.flip+=.1*below(a.flip,1.1);a.q1=a.flip;","pixel_eqs_str":"a.tmmod=Math.sin(div(a.time,1));a.tm=.24;a.stm=Math.sin(a.tm);a.mir=.45+a.q1;a.nx=.00001<Math.abs(above(a.x,a.mir))?-(a.x-a.mir)+a.mir:a.x;a.warp=1+div(a.bass+a.mid+a.treb,3)+(.00001<Math.abs(above(a.rad,.56+.05*Math.sin(a.tmm)))?.5*Math.sin(a.rad):0);a.zoom=-a.stm*(a.rad+.01);a.sx=.00001<Math.abs(above(a.x,a.mir))?-Math.sin(div(a.tm,5))+3*a.rad:Math.sin(div(a.tm,5))+3*a.rad;a.sy=Math.cos(div(a.tm,5))+3*(a.rad+.1);a.rot=Math.sin(div(a.time,3));","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((\n    (ret_1 - mix (((texture (sampler_blur2, uv).xyz * scale2) + bias2), ((texture (sampler_blur1, uv).xyz * scale1) + bias1), uv_orig.xxx))\n   * 0.3) - (0.00666 * \n    (((bass + treb) + mid) - 0.5)\n  )));\n  ret_1 = (ret_1 * 0.95);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":""}