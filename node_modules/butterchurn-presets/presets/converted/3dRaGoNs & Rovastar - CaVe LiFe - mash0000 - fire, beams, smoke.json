{"baseVals":{"rating":0,"gammaadj":0.2,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":1,"brighten":1,"darken":1,"solarize":1,"invert":1,"wave_a":6.743,"wave_scale":0.001,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.449,"warpscale":67.165,"fshader":1,"zoom":1.01,"rot":-0.002,"dx":-0.06,"warp":0.02988,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_g":1,"ib_a":0.5,"mv_x":8,"mv_y":9.6,"mv_l":5},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.oldq4=0;a.counter=0;a.meanbass_att=0;a.counter2=0;a.lastbeat=0;a.beatrate=0;a.peakbass_att=0;a.countertime=0;a.q4=0;a.oldq3=0;a.volume=0;a.beat=0;a.q3=0;a.q3=0;a.oldq3=0;a.q4=0;a.oldq4=0;","frame_eqs_str":"a.dy-=.0035;a.dx=-.0005;a.mv_l=3E3;a.mv_r=.5+.499*Math.sin(1.12*a.time);a.mv_b=.2+.19*Math.cos(.45*a.time);a.mv_g=.7+.23*Math.cos(.367*a.time);a.wave_g=.6+.4*Math.sin(.897*a.time);a.wave_r=.6+.4*Math.sin(.971*a.time);a.wave_b=.6+.4*Math.sin(.797*a.time);a.mv_x=8.34;a.warp=0;a.wave_a=2;a.volume=.15*(a.bass_att+a.bass+a.mid+a.mid_att);a.beatrate=.00001<Math.abs(equal(a.beatrate,0))?1:.00001<Math.abs(below(a.volume,.01))?1:a.beatrate;a.lastbeat=.00001<Math.abs(equal(a.lastbeat,\n0))?a.time:a.lastbeat;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=.00001<Math.abs(above(a.bass_att,a.peakbass_att))?a.bass_att:a.peakbass_att;a.beat=.00001<Math.abs(above(a.volume,.8))?.00001<Math.abs(below(a.peakbass_att-a.bass_att,.05*a.peakbass_att))?.00001<Math.abs(above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1)))?1:0:0:0;a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,\n.1);a.peakbass_att=.00001<Math.abs(equal(a.beat,0))?.00001<Math.abs(above(a.time-a.lastbeat,2*a.beatrate))?.95*a.peakbass_att:.995*a.peakbass_att:a.bass_att;a.lastbeat=.00001<Math.abs(a.beat)?a.time:a.lastbeat;a.countertime=.00001<Math.abs(a.beat)?a.time:a.countertime;a.counter=-1*pow(Math.min(a.time-a.countertime-3,0),3);a.counter2=-1*pow(Math.min(a.time-a.countertime-2.7,0),5);a.q4=a.oldq4+.00045*a.counter2;a.oldq4=a.q4;a.q3=a.oldq3+.001*a.counter;a.oldq3=a.q3;a.mv_dx-=.03*Math.sin(a.q3);a.dx+=\n.0005*Math.sin(a.q4);a.mv_r=.5+.5*Math.sin(.924*a.time);a.mv_b=.5+.5*Math.sin(1.215*a.time);a.mv_g=.5+.5*Math.sin(1.41*a.time);a.monitor=a.q4;a.ib_r=.5+.5*Math.cos(a.q4);a.ob_b=.5+.5*Math.sin(a.q3);a.ib_g=.5+.5*Math.sin(a.q4-a.q3);","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.007))) - texture (sampler_main, (uv - vec2(0.005, 0.007)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(-0.007, 0.005))) - texture (sampler_main, (uv - vec2(-0.007, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (((\n    -(tmpvar_3)\n   * 0.1) + (\n    (texture (sampler_main, (uv - ((tmpvar_2 * \n      (1.0 - tmpvar_3)\n    .xy) * 0.02))).xyz + ((vec3(dot (texture (sampler_noise_lq, \n      ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.5) + (0.1 * rand_frame).xy)\n    ), vec4(0.32, 0.49, 0.29, 0.0))) * 0.12) - (0.01 * pow (\n      (1.0 - rad)\n    , 4.0))))\n   * 1.1)) * 0.97);\n  ret_1 = (ret_1 - 0.05);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":""}