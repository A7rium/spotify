{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":0.999609,"wave_mode":1,"wave_a":3.3,"wave_scale":25.574953,"wave_smoothing":0,"wave_mystery":-0.66,"warpscale":2.853,"zoom":1.002336,"warp":0,"wave_r":0.8,"wave_g":0.5,"wave_b":0.3,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.330038,"border_a":0},"init_eqs_str":"a.q7=0;a.q8=0;","frame_eqs_str":"a.x=a.q7;a.y=1-a.q8;a.r=.5+.4*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.g=.5+.4*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.b=.5+.4*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.r2=.5+.4*(.6*Math.sin(.873*a.time)+.4*Math.sin(1.124*a.time));a.g2=.5+.4*(.6*Math.sin(.947*a.time)+.4*Math.sin(.978*a.time));a.b2=.5+.4*(.6*Math.sin(.889*a.time)+.4*Math.sin(.868*a.time));"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.081954,"ang":5.026548,"tex_zoom":0.463937,"border_a":0},"init_eqs_str":"a.q7=0;a.q8=0;","frame_eqs_str":"a.x=a.q7;a.y=1-a.q8;a.r=.5+.4*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.g=.5+.4*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.b=.5+.4*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.r2=.5+.4*(.6*Math.sin(.873*a.time)+.4*Math.sin(1.124*a.time));a.g2=.5+.4*(.6*Math.sin(.947*a.time)+.4*Math.sin(.978*a.time));a.b2=.5+.4*(.6*Math.sin(.889*a.time)+.4*Math.sin(.868*a.time));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.5*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.5*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.5*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.04*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.decay-=.01*equal(mod(a.frame,50),0);a.zoom+=.1*(a.bass_att-1);","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.6));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 12.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  float ang2_1;\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\n  float tmpvar_2;\n  tmpvar_2 = (3.0 + floor((rand_preset.z * 5.95)));\n  ang2_1 = (fract((ang2_1 * tmpvar_2)) / tmpvar_2);\n  ang2_1 = (abs((ang2_1 - \n    (0.5 / tmpvar_2)\n  )) * 6.283185);\n  vec2 tmpvar_3;\n  tmpvar_3.x = cos(ang2_1);\n  tmpvar_3.y = sin(ang2_1);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_main, (0.5 + (\n    ((0.4 * (rad * sqrt(\n      dot (texsize.xy, texsize.xy)\n    ))) * tmpvar_3)\n   * texsize.zw))).xyz * 1.333);\n  ret = tmpvar_4.xyz;\n }"}