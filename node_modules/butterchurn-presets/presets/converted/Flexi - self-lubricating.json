{"baseVals":{"rating":1,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.9,"wave_scale":2.997,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.274,"warpscale":7.98,"zoom":0.99951,"warp":0.20929,"wave_r":0.02,"wave_g":0.02,"wave_b":0,"ob_size":0.5,"ob_r":1,"ob_g":0.12,"ob_b":1,"ob_a":0.37,"ib_size":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.d=0;a.w=0;a.h3=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.startx=0;a.v=0;a.mm=0;a.h2=0;a.tt=0;a.bm=0;a.q4=0;a.a=0;a.q26=0;a.mt=0;a.b=0;a.mx=0;a.mn=0;a.bb=0;a.q2=0;a.q27=0;a.starty=0;a.h1=0;a.q3=0;a.q7=0;a.x1=0;a.y1=.001;a.z1=0;","frame_eqs_str":"a.zoom=1;a.wave_a=0;a.startx=.3;a.starty=.3;a.a=.55;a.b=.05;a.d=.09;a.q1=a.aspectx;a.q2=a.aspecty;a.q5=a.a;a.q6=a.b;a.q7=a.d;a.bb=.99*a.bb+.02*a.bass;a.mm=.99*a.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.h1=div(a.bb-a.mn,a.mx-a.mn);a.h2=div(a.mm-a.mn,a.mx-a.mn);a.h3=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.4,a.fps);a.bm+=(a.h1-a.h2)*a.v;a.mt+=(a.h2-a.h3)*a.v;a.bt+=(a.h1-a.h3)*a.v;a.w=.25*a.bm;a.q3=Math.sin(a.w);\na.q4=Math.cos(a.w);a.q26=2*a.mt;a.q27=2*a.bt;","pixel_eqs_str":"a.x=.5+(a.x-.51)*a.q1;a.y=.5-(a.y-.5)*a.q2;a.dx=a.x*(1-a.x)-div(a.q5*a.x*a.y,a.x+a.q6);a.dy=-a.q7*a.y*(1-div(a.y,a.x));a.dx=div(.02*-a.dx,a.q1);a.dy=div(.02*-a.dy,a.q2);","warp":" shader_body { \n  vec2 my_uv2_1;\n  vec2 dz_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_6;\n  tmpvar_6 = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_5.x;\n  tmpvar_7.y = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * texsize.zw);\n  ret_3.x = (texture (sampler_fw_main, (uv - tmpvar_8)).x - ((\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3).x - (\n    (texture (sampler_blur1, (uv + tmpvar_8)).xyz * scale1)\n   + bias1).x));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_5.y;\n  tmpvar_9.y = tmpvar_6.y;\n  dz_2 = (-(tmpvar_9) * texsize.zw);\n  ret_3.y = ((texture (sampler_fw_main, (uv - dz_2)).y - 0.06) - ((\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  .y - \n    ((texture (sampler_blur1, (uv + dz_2)).xyz * scale1) + bias1)\n  .y) * 1.3));\n  vec2 tmpvar_10;\n  tmpvar_10 = ((uv_orig - 0.5) * (1.8 - (\n    (bass_att - treb_att)\n   * 0.015)));\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((tmpvar_10.x * tmpvar_10.x) - (tmpvar_10.y * tmpvar_10.y));\n  tmpvar_11.y = ((2.0 * tmpvar_10.x) * tmpvar_10.y);\n  my_uv2_1 = (tmpvar_11 + vec2(0.28, 0.4));\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1))).z;\n  tmpvar_12.y = ((2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1))).z;\n  dz_2 = ((-(tmpvar_12) * texsize.zw) * 0.8);\n  ret_3.z = (texture (sampler_main, clamp ((my_uv2_1 + dz_2), 0.0, 1.0)).z - 0.014);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_3;\n  ret = tmpvar_13.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((q4 * tmpvar_2.x) - (q3 * tmpvar_2.y));\n  tmpvar_3.y = ((q3 * tmpvar_2.x) + (q4 * tmpvar_2.y));\n  uv_1 = (0.5 - (tmpvar_3 * 2.0));\n  vec2 tmpvar_4;\n  tmpvar_4.x = q26;\n  tmpvar_4.y = (0.1 * q27);\n  vec2 numerator_5;\n  numerator_5 = (uv_1 - vec2(0.0, 0.5));\n  vec2 denominator_6;\n  denominator_6 = (uv_1 - vec2(1.0, 0.5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((numerator_5.x * denominator_6.x) + (numerator_5.y * denominator_6.y));\n  tmpvar_7.y = ((numerator_5.y * denominator_6.x) - (numerator_5.x * denominator_6.y));\n  vec2 tmpvar_8;\n  tmpvar_8 = (((tmpvar_7 / \n    ((denominator_6.x * denominator_6.x) + (denominator_6.y * denominator_6.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_9;\n  tmpvar_9 = sqrt(dot (tmpvar_8, tmpvar_8));\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (tmpvar_8.x / tmpvar_8.y)\n  ), 1.0) / max (abs(\n    (tmpvar_8.x / tmpvar_8.y)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((tmpvar_8.x / tmpvar_8.y)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_8.x / tmpvar_8.y)));\n  if ((abs(tmpvar_8.y) > (1e-08 * abs(tmpvar_8.x)))) {\n    if ((tmpvar_8.y < 0.0)) {\n      if ((tmpvar_8.x >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(tmpvar_8.x) * 1.570796);\n  };\n  vec2 tmpvar_13;\n  tmpvar_13.x = ((tmpvar_10 * 4.0) + q26);\n  tmpvar_13.y = ((0.55 * log(tmpvar_9)) + tmpvar_4.y);\n  uv_1 = (0.5 + ((1.0 - \n    abs(((fract(\n      (vec2(0.07957745, 0.5) * tmpvar_13)\n    ) * 2.0) - 1.0))\n  ) - 0.5));\n  vec2 tmpvar_14;\n  vec2 tmpvar_15;\n  tmpvar_15 = (uv_1 - vec2(0.5, 0.5));\n  float tmpvar_16;\n  tmpvar_16 = sqrt(dot (tmpvar_15, tmpvar_15));\n  float tmpvar_17;\n  float tmpvar_18;\n  tmpvar_18 = (min (abs(\n    (tmpvar_15.x / tmpvar_15.y)\n  ), 1.0) / max (abs(\n    (tmpvar_15.x / tmpvar_15.y)\n  ), 1.0));\n  float tmpvar_19;\n  tmpvar_19 = (tmpvar_18 * tmpvar_18);\n  tmpvar_19 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_19) + 0.05368138) * tmpvar_19) - 0.1173503)\n     * tmpvar_19) + 0.1938925) * tmpvar_19) - 0.3326756)\n   * tmpvar_19) + 0.9999793) * tmpvar_18);\n  tmpvar_19 = (tmpvar_19 + (float(\n    (abs((tmpvar_15.x / tmpvar_15.y)) > 1.0)\n  ) * (\n    (tmpvar_19 * -2.0)\n   + 1.570796)));\n  tmpvar_17 = (tmpvar_19 * sign((tmpvar_15.x / tmpvar_15.y)));\n  if ((abs(tmpvar_15.y) > (1e-08 * abs(tmpvar_15.x)))) {\n    if ((tmpvar_15.y < 0.0)) {\n      if ((tmpvar_15.x >= 0.0)) {\n        tmpvar_17 += 3.141593;\n      } else {\n        tmpvar_17 = (tmpvar_17 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_17 = (sign(tmpvar_15.x) * 1.570796);\n  };\n  float tmpvar_20;\n  tmpvar_20 = clamp ((1.0 - (tmpvar_16 / 0.5)), 0.0, 1.0);\n  float tmpvar_21;\n  float tmpvar_22;\n  tmpvar_22 = (tmpvar_20 - 1.0);\n  tmpvar_21 = sqrt((1.0 - (tmpvar_22 * tmpvar_22)));\n  float vec_y_23;\n  vec_y_23 = (1.0 - tmpvar_20);\n  float tmpvar_24;\n  float tmpvar_25;\n  tmpvar_25 = (min (abs(\n    (vec_y_23 / tmpvar_21)\n  ), 1.0) / max (abs(\n    (vec_y_23 / tmpvar_21)\n  ), 1.0));\n  float tmpvar_26;\n  tmpvar_26 = (tmpvar_25 * tmpvar_25);\n  tmpvar_26 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_26) + 0.05368138) * tmpvar_26) - 0.1173503)\n     * tmpvar_26) + 0.1938925) * tmpvar_26) - 0.3326756)\n   * tmpvar_26) + 0.9999793) * tmpvar_25);\n  tmpvar_26 = (tmpvar_26 + (float(\n    (abs((vec_y_23 / tmpvar_21)) > 1.0)\n  ) * (\n    (tmpvar_26 * -2.0)\n   + 1.570796)));\n  tmpvar_24 = (tmpvar_26 * sign((vec_y_23 / tmpvar_21)));\n  if ((abs(tmpvar_21) > (1e-08 * abs(vec_y_23)))) {\n    if ((tmpvar_21 < 0.0)) {\n      if ((vec_y_23 >= 0.0)) {\n        tmpvar_24 += 3.141593;\n      } else {\n        tmpvar_24 = (tmpvar_24 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_24 = (sign(vec_y_23) * 1.570796);\n  };\n  float x_27;\n  x_27 = (sin(tmpvar_24) / 3.0);\n  float tmpvar_28;\n  tmpvar_28 = (tmpvar_24 - (sign(x_27) * (1.570796 - \n    (sqrt((1.0 - abs(x_27))) * (1.570796 + (abs(x_27) * (-0.2146018 + \n      (abs(x_27) * (0.08656672 + (abs(x_27) * -0.03102955)))\n    ))))\n  )));\n  vec2 tmpvar_29;\n  tmpvar_29.x = sin(tmpvar_17);\n  tmpvar_29.y = cos(tmpvar_17);\n  vec2 x_30;\n  x_30 = (uv_1 - vec2(0.5, 0.5));\n  bool tmpvar_31;\n  tmpvar_31 = (sqrt(dot (x_30, x_30)) < 0.5);\n  tmpvar_14 = ((float(\n    !(tmpvar_31)\n  ) * uv_1) + (float(tmpvar_31) * (vec2(0.5, 0.5) + \n    ((tmpvar_29 * ((1.0 - tmpvar_20) - (\n      (sin(tmpvar_28) * tmpvar_21)\n     / \n      cos(tmpvar_28)\n    ))) * 0.5)\n  )));\n  uv_1 = tmpvar_14;\n  vec2 tmpvar_32;\n  tmpvar_32.x = q26;\n  tmpvar_32.y = (0.1 * q27);\n  vec2 numerator_33;\n  numerator_33 = (tmpvar_14 - vec2(0.0, 0.5));\n  vec2 denominator_34;\n  denominator_34 = (tmpvar_14 - vec2(1.0, 0.5));\n  vec2 tmpvar_35;\n  tmpvar_35.x = ((numerator_33.x * denominator_34.x) + (numerator_33.y * denominator_34.y));\n  tmpvar_35.y = ((numerator_33.y * denominator_34.x) - (numerator_33.x * denominator_34.y));\n  vec2 tmpvar_36;\n  tmpvar_36 = (((tmpvar_35 / \n    ((denominator_34.x * denominator_34.x) + (denominator_34.y * denominator_34.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_37;\n  tmpvar_37 = sqrt(dot (tmpvar_36, tmpvar_36));\n  float tmpvar_38;\n  float tmpvar_39;\n  tmpvar_39 = (min (abs(\n    (tmpvar_36.x / tmpvar_36.y)\n  ), 1.0) / max (abs(\n    (tmpvar_36.x / tmpvar_36.y)\n  ), 1.0));\n  float tmpvar_40;\n  tmpvar_40 = (tmpvar_39 * tmpvar_39);\n  tmpvar_40 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_40) + 0.05368138) * tmpvar_40) - 0.1173503)\n     * tmpvar_40) + 0.1938925) * tmpvar_40) - 0.3326756)\n   * tmpvar_40) + 0.9999793) * tmpvar_39);\n  tmpvar_40 = (tmpvar_40 + (float(\n    (abs((tmpvar_36.x / tmpvar_36.y)) > 1.0)\n  ) * (\n    (tmpvar_40 * -2.0)\n   + 1.570796)));\n  tmpvar_38 = (tmpvar_40 * sign((tmpvar_36.x / tmpvar_36.y)));\n  if ((abs(tmpvar_36.y) > (1e-08 * abs(tmpvar_36.x)))) {\n    if ((tmpvar_36.y < 0.0)) {\n      if ((tmpvar_36.x >= 0.0)) {\n        tmpvar_38 += 3.141593;\n      } else {\n        tmpvar_38 = (tmpvar_38 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_38 = (sign(tmpvar_36.x) * 1.570796);\n  };\n  vec2 tmpvar_41;\n  tmpvar_41.x = ((tmpvar_38 * 4.0) + q26);\n  tmpvar_41.y = ((0.55 * log(tmpvar_37)) + tmpvar_32.y);\n  uv_1 = (0.5 + ((1.0 - \n    abs(((fract(\n      ((tmpvar_41 * vec2(0.1591549, 1.0)).yx * 0.5)\n    ) * 2.0) - 1.0))\n  ) - 0.5));\n  xlat_mutabled = (texsize.zw * 1.5);\n  xlat_mutabledx = (texture (sampler_main, (uv_1 + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_1 - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\n  xlat_mutabledy = (texture (sampler_main, (uv_1 + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_1 - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\n  vec2 x_42;\n  x_42 = ((uv_1 * vec2(1.0, -1.0)) + vec2(0.0, 1.0));\n  vec2 tmpvar_43;\n  tmpvar_43.x = xlat_mutabledx.z;\n  tmpvar_43.y = xlat_mutabledy.z;\n  vec2 tmpvar_44;\n  tmpvar_44.x = xlat_mutabledx.z;\n  tmpvar_44.y = xlat_mutabledy.z;\n  vec2 tmpvar_45;\n  tmpvar_45.x = xlat_mutabledx.y;\n  tmpvar_45.y = xlat_mutabledy.y;\n  vec2 tmpvar_46;\n  tmpvar_46.x = xlat_mutabledx.z;\n  tmpvar_46.y = xlat_mutabledy.z;\n  vec4 tmpvar_47;\n  tmpvar_47.w = 1.0;\n  tmpvar_47.xyz = (mix (mix (\n    mix (vec3(1.0, 0.6, 0.08), vec3(0.1, 0.1, 0.3), vec3(((sqrt(\n      dot (x_42, x_42)\n    ) - (\n      (-(xlat_mutabledx.x) + xlat_mutabledy.x)\n     * 8.0)) + ((1.0 - \n      ((texture (sampler_blur1, (uv_1 + (\n        (tmpvar_43 * texsize.zw)\n       * 128.0))).xyz * scale1) + bias1)\n    .x) * 2.0))))\n  , vec3(1.8, 1.8, 1.8), vec3(\n    ((1.0 - texture (sampler_main, uv_1).z) * (0.4 + (texture (sampler_main, (uv_1 - \n      ((tmpvar_44 * texsize.zw) * 32.0)\n    )).x * 0.6)))\n  )), vec3(2.0, 2.0, 2.0), vec3((\n    sqrt(dot (tmpvar_45, tmpvar_45))\n   * \n    (0.2 + texture (sampler_main, uv_1).x)\n  ))) * (vec3(1.0, 1.0, 1.0) - vec3((\n    ((texture (sampler_blur1, (uv_1 - (\n      (tmpvar_46 * texsize.zw)\n     * 32.0))).xyz * scale1) + bias1)\n  .y * \n    (0.5 + (texture (sampler_main, uv_1).x * 0.5))\n  ))));\n  ret = tmpvar_47.xyz;\n }"}