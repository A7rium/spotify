{"baseVals":{"rating":0,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.136,"wave_smoothing":0.9,"modwavealphastart":1.6,"modwavealphaend":1.6,"warpscale":0.107,"zoomexp":1.0018,"zoom":0.96098,"warp":0.01,"wave_r":0,"wave_g":0.04,"wave_b":0,"ob_size":0,"ob_r":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.86644,"r":0.5,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.d=0;a.xx=0;a.w=0;a.ww=0;a.vt=0;a.xh=0;a.q6=0;a.q1=0;a.q5=0;a.vb=0;a.q9=0;a.v=0;a.ax=0;a.mm=0;a.tt=0;a.yh=0;a.wv=0;a.vx=0;a.pi=0;a.vy=0;a.ry=0;a.q4=0;a.ddy=0;a.rx=0;a.ay=0;a.t=0;a.wh=0;a.bb=0;a.ddx=0;a.q2=0;a.q3=0;a.m=0;a.vvm=0;a.yy=0;a.vvb=0;a.q7=0;a.vm=0;a.vvt=0;a.q8=0;a.x1=0;a.y1=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=2*a.vvt;a.v=2;a.bb-=a.vvb*a.v;a.mm-=a.vvm*a.v;a.tt-=a.vvt*a.v;a.q4=a.bb;a.q5=a.mm;a.q6=a.tt;a.q7=1.81;a.q8=.448+\n.3*(a.vm-a.vt);a.q9=.701+.3*(a.vb-a.vm);","pixel_eqs_str":"a.pi=Math.asin(1);a.x-=.5;a.y-=.5;a.d=.4*(a.q4-a.q6)+(a.rad-.3)*(a.q1-a.q3)*2+a.pi;a.xx=Math.sin(a.d)*a.x-Math.cos(a.d)*a.y;a.yy=Math.cos(a.d)*a.x+Math.sin(a.d)*a.y;a.x=a.xx;a.y=a.yy;a.t=0*a.time;a.xh=a.x;a.yh=a.y;a.w=.8*(a.q4-a.q6);a.m=-1+2*a.q2;a.wv=a.pi-Math.sin(a.w)*a.m;a.wh=a.pi-Math.cos(a.w)*a.m;a.d=6*sqrt(a.q2);a.ww=1.1;a.ddx=Math.sin(2*a.pi-a.wv-a.x*a.ww);a.ddy=Math.sin(2*a.pi-a.wh-a.y*a.ww);a.rx=.00001<Math.abs(above(a.ddx*a.ddy,0))?div(Math.sin(a.wv),a.ddx):0;a.ry=\n.00001<Math.abs(above(a.ddy*a.ddy,0))?div(Math.sin(a.wh),a.ddy):0;a.v=div(.04*-a.q2*div(a.d,a.ww)*1728,a.meshx*a.meshy);a.ax+=Math.sin(a.w)*a.v;a.ay+=Math.cos(a.w)*a.v;a.vx=.00001<Math.abs(equal(a.rx*a.ry,0))?0:a.ax;a.vy=.00001<Math.abs(equal(a.rx*a.ry,0))?0:a.ay;a.dx=-a.xh*a.rx*a.ry*a.d+.001*a.vx;a.dy=-a.yh*a.rx*a.ry*a.d+.001*a.vy;","warp":" shader_body { \n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = texture (sampler_fc_main, tmpvar_3).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 6.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\n  .z) * 0.02));\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(1.0004, 1.0004))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\n  ret_2.z = (ret_2.z * (1.0 + (ret_2.y * 0.024)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":"float xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  xlat_mutabled = (texsize.zw * 2.0).x;\n  xlat_mutabledx = ((texture (sampler_main, (uv + \n    (vec2(1.0, 0.0) * xlat_mutabled)\n  )).xyz - texture (sampler_main, (uv - \n    (vec2(1.0, 0.0) * xlat_mutabled)\n  )).xyz) * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((xlat_mutabledx.x + 0.5) * (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3).x) * vec3(1.0, 0.8, -0.4));\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.z;\n  tmpvar_4.y = xlat_mutabledy.z;\n  vec2 tmpvar_5;\n  tmpvar_5.x = xlat_mutabledx.x;\n  tmpvar_5.y = xlat_mutabledy.x;\n  uv_1 = ((uv - (\n    (tmpvar_4 * texsize.zw)\n   * 128.0)) + tmpvar_5);\n  ret_2 = (((1.0 - \n    (abs(((\n      (texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1)\n     + bias1) - (\n      (texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1)\n     + bias1))).z * 4.0)\n  ) * texture (sampler_main, uv_1).z) * vec3(0.5, 0.5, 1.0));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_2, vec3(2.0, 2.0, 2.0), (tmpvar_3 * 0.5));\n  ret_2 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = tmpvar_6;\n  ret = tmpvar_7.xyz;\n }"}