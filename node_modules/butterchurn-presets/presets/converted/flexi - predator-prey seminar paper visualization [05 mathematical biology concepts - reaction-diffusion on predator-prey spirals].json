{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":1.331,"zoom":0.99951,"warp":0.00909,"wave_r":0.44,"wave_g":0.4,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_x":44.16,"mv_y":33.6,"mv_l":0.5,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":0,"b":0},"init_eqs_str":"a.xx=0;a.q6=0;a.q1=0;a.q5=0;a.dx=0;a.q4=0;a.dy=0;a.q2=0;a.q3=0;a.yy=0;a.q7=0;a.t2=0;a.t3=0;a.t4=0;a.ab=1;","frame_eqs_str":"","point_eqs_str":"a.xx=.00001<Math.abs(equal(a.sample,0))?a.q3:a.xx;a.yy=.00001<Math.abs(equal(a.sample,0))?a.q4:a.yy;a.dx=a.xx*(1-a.xx)-div(a.q5*a.xx*a.yy,a.xx+a.q6);a.dy=a.q7*a.yy*(1-div(a.yy,a.xx));a.x=a.xx;a.y=a.yy;a.xx+=.2*a.dx;a.yy+=.2*a.dy;a.x=.5+div(a.x-.5,a.q1)+a.dy*a.value1*.01;a.y=.5+div(a.y-.5,a.q2)-a.dx*a.value1*.01;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.d=0;a.q6=0;a.q1=0;a.q5=0;a.startx=0;a.q4=0;a.a=0;a.b=0;a.q2=0;a.starty=0;a.q3=0;a.q7=0;a.x1=0;a.y1=.001;a.z1=0;","frame_eqs_str":"a.zoom=1;a.warp=0;a.wave_a=0;a.startx=.7;a.starty=.7;a.a=1;a.b=.14;a.d=.2;a.q1=a.aspectx;a.q2=a.aspecty;a.q3=a.startx;a.q4=a.starty;a.q5=a.a;a.q6=a.b;a.q7=a.d;","pixel_eqs_str":"a.x=.5+(a.x-.5)*a.q1;a.y=.5-(a.y-.5)*a.q2;a.dx=a.x*(1-a.x)-div(a.q5*a.x*a.y,a.x+a.q6);a.dy=-a.q7*a.y*(1-div(a.y,a.x));a.dx=div(-.01*a.dx,a.q1);a.dy=div(-.01*a.dy,a.q2);","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 12.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.5 * ((2.0 * \n    ((texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2) + bias2)\n  ))).z;\n  tmpvar_4.y = (0.5 * ((2.0 * \n    ((texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2) + bias2)\n  ))).z;\n  uv_1 = (uv - (tmpvar_4 * texsize.zw));\n  ret_2.z = ((texture (sampler_main, uv_1).z + (\n    (texture (sampler_main, uv_1).z - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\n  .z * 0.12)) + 0.008);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }"}