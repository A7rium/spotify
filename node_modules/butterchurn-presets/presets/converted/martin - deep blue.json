{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.167975,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":31.999998,"mv_y":24.000004,"mv_l":0.5,"mv_r":0.2999,"mv_g":0.4999,"mv_b":0.3999,"mv_a":0,"b1ed":0.7},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"y":0.13,"rad":1.504993,"tex_zoom":0.459514,"g":1,"a":0.1,"r2":1,"g2":0,"border_r":0.7,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":8,"rad":0.013478,"tex_zoom":0.499805,"r":0,"g":1,"b":1,"g2":0.3,"a2":1,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":24,"additive":1,"textured":1,"x":0.59,"y":0,"rad":0.449286,"ang":0.062832,"tex_ang":1.884956,"tex_zoom":0.179142,"r":0.6,"g":0.5,"b":0.7,"a":0.1,"r2":0.7,"g2":0.5,"b2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.index=0;a.q22=0;a.q21=0;a.q29=0;a.fade=0;a.dec_med=0;a.movz=0;a.movx=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q10=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.peak=0;a.q27=0;a.p3=0;a.t0=0;a.q32=0;a.q28=0;a.q30=0;a.q20=0;a.q28=0;a.q29=0;a.p1=0;a.fade=.9;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=\na.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.1416*a.p3,2);a.q27=a.index+1;a.movz+=div(.03,a.fps)*(1.5+Math.sin(a.rott));a.q29=a.movz;a.movx+=div(.03,a.fps)*(1+Math.sin(div(a.time,7)));a.q28=a.movx;a.q30=.5*(Math.sin(div(a.time,19))+1);a.q31=3*(Math.sin(div(a.time,23))+2);a.q32=Math.sin(div(a.time,17))+1;a.fade=a.fade*a.dec_med+.98*(1-a.dec_med);a.q10=a.fade;","pixel_eqs_str":"a.warp=.02;","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * q10) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":"float xlat_mutabledist;\nfloat xlat_mutabledist2;\nvec3 xlat_mutableglow;\nfloat xlat_mutableinten;\nfloat xlat_mutablem;\nfloat xlat_mutablemask;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  int tmpvar_3;\n  tmpvar_3 = int(q29);\n  xlat_mutablem = (1.0 - float(tmpvar_3));\n  float tmpvar_4;\n  tmpvar_4 = -(q29);\n  xlat_mutabledist = (1.0 - fract((0.3333333 - \n    (fract(tmpvar_4) / 3.0)\n  )));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = (pow (xlat_mutabledist, 0.3) * (1.0 - xlat_mutabledist2));\n  xlat_mutableuv2 = (((2.0 * xlat_mutabledist) * (uv_1 - 0.4)) - 0.1);\n  vec2 tmpvar_5;\n  tmpvar_5 = fract((xlat_mutableuv2 + (\n    (xlat_mutablem + q28)\n   * vec2(0.4, 1.0))));\n  vec2 tmpvar_6;\n  tmpvar_6.x = dot ((texture (sampler_main, (tmpvar_5 + vec2(0.004, 0.0))).xyz - texture (sampler_main, (tmpvar_5 - vec2(0.004, 0.0))).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_6.y = dot ((texture (sampler_main, (tmpvar_5 + vec2(0.0, 0.004))).xyz - texture (sampler_main, (tmpvar_5 - vec2(0.0, 0.004))).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutableglow = (((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1) * vec3(0.5, 1.0, 1.0));\n  xlat_mutableret1 = ((texture (sampler_main, (tmpvar_5 + \n    (0.5 * tmpvar_6)\n  )).xyz + (2.0 * xlat_mutableglow)) * xlat_mutableinten);\n  xlat_mutablem = (2.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((0.6666667 - \n    (fract(tmpvar_4) / 3.0)\n  )));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = (pow (xlat_mutabledist, 0.3) * (1.0 - xlat_mutabledist2));\n  xlat_mutableuv2 = (((2.0 * xlat_mutabledist) * (uv_1 - 0.4)) - 0.1);\n  vec2 tmpvar_7;\n  tmpvar_7 = fract((xlat_mutableuv2 + (\n    (xlat_mutablem + q28)\n   * vec2(0.4, 1.0))));\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot ((texture (sampler_main, (tmpvar_7 + vec2(0.004, 0.0))).xyz - texture (sampler_main, (tmpvar_7 - vec2(0.004, 0.0))).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot ((texture (sampler_main, (tmpvar_7 + vec2(0.0, 0.004))).xyz - texture (sampler_main, (tmpvar_7 - vec2(0.0, 0.004))).xyz), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, (tmpvar_7 + (0.5 * tmpvar_8)));\n  xlat_mutableglow = (((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1) * vec3(0.5, 1.0, 1.0));\n  xlat_mutablemask = (1.0 - clamp ((8.0 * tmpvar_9.xyz), 0.0, 1.0)).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + ((tmpvar_9.xyz + \n    (2.0 * xlat_mutableglow)\n  ) * xlat_mutableinten));\n  xlat_mutablem = (3.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((1.0 - \n    (fract(tmpvar_4) / 3.0)\n  )));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = (pow (xlat_mutabledist, 0.3) * (1.0 - xlat_mutabledist2));\n  xlat_mutableuv2 = (((2.0 * xlat_mutabledist) * (uv_1 - 0.4)) - 0.1);\n  vec2 tmpvar_10;\n  tmpvar_10 = fract((xlat_mutableuv2 + (\n    (xlat_mutablem + q28)\n   * vec2(0.4, 1.0))));\n  vec2 tmpvar_11;\n  tmpvar_11.x = dot ((texture (sampler_main, (tmpvar_10 + vec2(0.004, 0.0))).xyz - texture (sampler_main, (tmpvar_10 - vec2(0.004, 0.0))).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_11.y = dot ((texture (sampler_main, (tmpvar_10 + vec2(0.0, 0.004))).xyz - texture (sampler_main, (tmpvar_10 - vec2(0.0, 0.004))).xyz), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_main, (tmpvar_10 + (0.5 * tmpvar_11)));\n  xlat_mutableglow = (((texture (sampler_blur1, tmpvar_10).xyz * scale1) + bias1) * vec3(0.5, 1.0, 1.0));\n  xlat_mutablemask = (1.0 - clamp ((8.0 * tmpvar_12.xyz), 0.0, 1.0)).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + ((tmpvar_12.xyz + \n    (2.0 * xlat_mutableglow)\n  ) * xlat_mutableinten));\n  vec2 tmpvar_13;\n  tmpvar_13.y = 0.25;\n  tmpvar_13.x = ((2.0 * fract(\n    (0.003 * time)\n  )) - 0.55);\n  xlat_mutableuv1 = ((uv_1 + tmpvar_13) - (xlat_mutableret1 / 8.0).xy);\n  ret_2 = ((xlat_mutableret1 * vec3(0.0, 1.0, 1.0)) + ((vec3(0.08000001, 0.12, 0.4) * \n    clamp ((0.4 - uv_1.y), 0.0, 1.0)\n  ) * clamp (\n    (1.0 - (2.0 * xlat_mutableret1.x))\n  , 0.0, 1.0)));\n  ret_2 = (ret_2 + ((8.0 * ret_2) * clamp (\n    (0.01 / sqrt(dot (xlat_mutableuv1, xlat_mutableuv1)))\n  , 0.0, 1.0)));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_2;\n  ret = tmpvar_14.xyz;\n }"}