{"baseVals":{"rating":0,"gammaadj":1.7,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":4,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.32,"wave_scale":1.521,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.9999,"zoom":1.00949,"warp":0.01,"sx":0.9901,"sy":1.0017,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_dy":0.82,"mv_l":5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.redsine=0;a.bluesine=0;a.greenif=0;a.q5=0;a.q4=0;a.redif=0;a.blueif=0;a.vol=0;a.greensine=0;a.decay=.1;","frame_eqs_str":"a.sx=.9;a.vol=.3333*(a.bass+a.mid+a.treb_att);a.redsine=.5+.15*a.bass*Math.sin(3*a.time);a.greensine=.5+.15*a.mid*Math.sin(2*a.time);a.bluesine=.5+.15*a.treb*Math.sin(a.time);a.redif=.00001<Math.abs(above(a.bass,1.2))?a.redsine:.00001<Math.abs(above(a.redif,.95))?0:.85*a.redif;a.greenif=.00001<Math.abs(above(a.mid,1.2))?a.greensine:.00001<Math.abs(above(a.greenif,.95))?0:.85*a.greenif;a.blueif=.00001<Math.abs(above(a.treb,1.2))?a.bluesine:.00001<Math.abs(above(a.blueif,.95))?\n0:.85*a.blueif;a.q4=.95+.05*Math.sin(.52*a.time)*Math.cos(.39*a.time);a.q5=.95+.05*Math.sin(.44*a.time)*Math.cos(.71*a.time);","pixel_eqs_str":"a.zoom+=.05*a.rad*a.treb_att;","warp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1.z = 0.5;\n  tmpvar_1.x = q4;\n  tmpvar_1.y = q5;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (texture (sampler_fc_main, uv).xyz * tmpvar_1);\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec2 uvp_1;\n  uvp_1.x = uv.x;\n  uvp_1.y = (uv.y * 0.2);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.y + (rad * 0.12));\n  tmpvar_2.y = ((uv.x * rad) * 0.12);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_noise_hq, ((\n    (texture (sampler_blur1, uvp_1).xyz * scale1)\n   + bias1) * (\n    (texture (sampler_blur2, uvp_1).xyz * scale2)\n   + bias2)).xy).xyz + ((texture (sampler_blur2, tmpvar_2).xyz * scale2) + bias2));\n  ret = tmpvar_3.xyz;\n }"}