{"baseVals":{"rating":1,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_a":0.195,"wave_scale":2.541,"wave_smoothing":0.81,"wave_mystery":0.14,"modwavealphastart":0.47,"modwavealphaend":1.32,"zoomexp":1.00016,"zoom":1.00022,"warp":0,"wave_b":0.3,"ob_size":0.1,"ob_a":0.06,"ib_size":0.035,"ib_g":0.45,"ib_a":0.29,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.beatfreq=0;a.dle=0;a.pulsefreq=0;a.bccl=0;a.bt=0;a.q1=0;a.lastbeat=0;a.pulse=0;a.q4=0;a.dqv=0;a.le=0;a.btblock=0;a.leccl=0;a.beat=0;a.hccp=0;a.q2=0;a.lastpulse=0;a.q3=0;a.eo=0;a.th=0;a.thccl=0;a.dle=1;","frame_eqs_str":"a.le=1.4*a.bass_att+.1*a.bass+.5*a.treb;a.pulse=above(a.le,a.th);a.pulsefreq=.00001<Math.abs(equal(a.pulsefreq,0))?2:.00001<Math.abs(a.pulse)?.8*a.pulsefreq+.2*(a.time-a.lastpulse):a.pulsefreq;a.lastpulse=.00001<Math.abs(a.pulse)?a.time:a.lastpulse;a.bt=div(a.time-a.lastbeat,.5*a.beatfreq+.5*a.pulsefreq);a.hccp=div(.03,a.bt+.2)+.5*(.00001<Math.abs(band(above(a.bt,.8),below(a.bt,1.2)))?pow(Math.sin(7.854*(a.bt-1)),4)-1:0);a.beat=band(above(a.le,a.th+a.hccp),a.btblock);a.btblock=\n1-above(a.le,a.th+a.hccp);a.lastbeat=.00001<Math.abs(a.beat)?a.time:a.lastbeat;a.beatfreq=.00001<Math.abs(equal(a.beatfreq,0))?2:.00001<Math.abs(a.beat)?.8*a.beatfreq+.2*(a.time-a.lastbeat):a.beatfreq;a.th=.00001<Math.abs(above(a.le,a.th))?a.le+div(114,a.le+10)-7.407:a.th+div(.07*a.th,a.th-12)+.1*below(a.th,2.7)*(2.7-a.th);a.th=.00001<Math.abs(above(a.th,6))?6:a.th;a.thccl+=a.th-2.5144;a.q1=a.le;a.q2=a.thccl+.2*a.leccl;a.leccl+=a.dle*a.le;a.dle=.00001<Math.abs(a.beat)?-a.dle:a.dle;a.bccl+=a.beat;\na.wave_r=.1+.8*sqr(Math.sin(.011*a.thccl))+.1*Math.sin(.061*a.leccl);a.wave_g=.1+.8*sqr(Math.sin(.013*a.thccl))+.1*Math.cos(.067*a.leccl);a.wave_b=.1+.8*sqr(Math.cos(.017*a.thccl))+.1*Math.sin(.065*a.leccl);a.ib_r+=.1*Math.sin(1.3*a.time+.012*a.leccl);a.ib_g+=.1*Math.sin(1.7*a.time+.019*a.leccl);a.ib_b+=.1*Math.sin(1.9*a.time+.017*a.leccl);a.mv_r=.5*(a.ib_r+a.wave_r);a.mv_g=.5*(a.ib_g+a.wave_g);a.mv_b=.5*(a.ib_b+a.wave_b);a.mv_a=.5*sqr(Math.sin(.01*a.leccl+a.bccl));a.echo_alpha=.5+.2*Math.cos(.07*\na.leccl+.02*a.thccl);a.eo=.00001<Math.abs(band(equal(mod(a.bccl,3),0),a.beat))?randint(4):a.eo;a.q3=(equal(a.eo,2)+equal(a.eo,1))*equal(mod(a.bccl,2),0);a.q4=(equal(a.eo,0)+equal(a.eo,3))*equal(mod(a.bccl,2),0);a.echo_orient=a.eo;","pixel_eqs_str":"a.dqv=above(a.x,.5)-above(a.y,.5);a.rot=Math.sin(Math.sin(a.rad*(13+5*Math.sin(.01*a.q2))+.06*a.q2)*a.q1*.01);a.zoom=1+.1*(.00001<Math.abs(a.q3)?a.dqv:1)*Math.sin(7*a.ang+.03*a.q2);a.zoom=.00001<Math.abs(a.q4)?.00001<Math.abs(below(a.rad,.8*sqr(Math.sin(.016*a.q2))))?.75+.4*Math.cos(.021*a.q2):a.zoom:a.zoom;","warp":" shader_body { \n  vec3 z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = mix (uv_orig, uv, vec2(0.2, 0.2));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = ((tmpvar_4.x * tmpvar_4.y) * tmpvar_4.y);\n  z_1.x = (tmpvar_4.x + ((\n    (-(tmpvar_5) + (0.035 * (1.0 - tmpvar_4.x)))\n   + 0.0007) * 9.0));\n  z_1.y = (tmpvar_4.y + ((tmpvar_5 - \n    (0.095 * tmpvar_4.y)\n  ) * 9.0));\n  z_1.z = (tmpvar_4.z - 0.02);\n  vec2 tmpvar_6;\n  tmpvar_6 = (0.3 * texsize.zw);\n  z_1.x = (z_1.x + (1.8 * (\n    (0.25 * (((texture (sampler_main, \n      (tmpvar_3 + tmpvar_6)\n    ).xyz + texture (sampler_main, \n      (tmpvar_3 + (tmpvar_6 * vec2(-1.0, 1.0)))\n    ).xyz) + texture (sampler_main, (tmpvar_3 + \n      (tmpvar_6 * vec2(1.0, -1.0))\n    )).xyz) + texture (sampler_main, (tmpvar_3 - tmpvar_6)).xyz))\n   - texture (sampler_main, tmpvar_3).xyz)).x);\n  ret_2.yz = z_1.yz;\n  ret_2.x = (z_1.x + (0.09 * (\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\n   - 1.0)).x);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\n  ret_2 = (ret_2 - ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) * 4.0));\n  ret_2 = -(ret_2);\n  ret_2 = ((pow (ret_2, vec3(0.5, 0.5, 0.7)) - 0.1) * 1.1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }"}