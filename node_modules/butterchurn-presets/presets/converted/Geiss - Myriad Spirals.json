{"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":6,"wave_thick":1,"wave_a":0.433,"wave_scale":1.91,"wave_smoothing":0,"wave_mystery":-0.08,"modwavealphastart":1.03,"modwavealphaend":1.61,"warpanimspeed":1.729,"warpscale":2.108,"zoomexp":1.64463,"zoom":1.01901,"warp":0.45599,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_r":1,"ob_g":0.5,"ob_b":0.25,"ob_a":0.16,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":30,"rad":0.49138,"r":0.7,"g":0.7,"b":1,"a":0.17,"g2":0.2,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad+=.02*Math.cos(3*a.time);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.new_warp=0;a.decay_rate=0;a.s=0;a.my_zoom=0;a.rg=0;a.q9=0;a.bass_thresh=0;a.new_s=0;a.my_s=0;a.new_cy=0;a.my_rot=0;a.prev_beat=0;a.is_beat=0;a.new_rot=0;a.q11=0;a.dx_residual=0;a.my_cx=0;a.min_att=0;a.beat=0;a.decay_to=0;a.my_warp=0;a.my_cy=0;a.new_cx=0;a.beat_level=0;a.new_zoom=0;a.dy_residual=0;a.q10=0;a.my_rot=0;a.my_zoom=1;a.s=.5;","frame_eqs_str":"a.wave_r=.85+.25*Math.sin(.437*a.time+1);a.wave_g=.85+.25*Math.sin(.544*a.time+2);a.wave_b=.85+.25*Math.sin(.751*a.time+3);a.dx+=.003*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.003*(.6*Math.sin(.284*a.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,\n2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual;a.dy_residual=.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual;a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;a.wave_mystery=37.03*a.time;a.new_rot=a.rot+.013*(.6*Math.sin(17.381*a.time)+.4*Math.sin(11.579*a.time));a.new_zoom=a.zoom+.01*(.6*Math.sin(20.1934*a.time+3)+.4*Math.sin(16.307*a.time+9));a.new_warp=a.warp+.34*(.6*Math.sin(13.5442*a.time)+.4*Math.sin(22.543*a.time));a.new_cx=\na.cx+.31*(.6*Math.sin(16.374*a.time)+.4*Math.sin(26.294*a.time));a.new_cy=a.cy+.31*(.6*Math.sin(18.393*a.time)+.4*Math.sin(37.223*a.time));a.new_s=.01*randint(100);a.rg=Math.max(.77*a.rg,.02+.5*Math.min(2,1.3*Math.max(0,a.mid_att-1)));a.q9=a.rg;a.decay_rate=pow(.993,a.fps);a.min_att=2.5;a.decay_to=1;a.beat=div(a.bass,Math.max(a.min_att,a.bass_att));a.beat=Math.max(a.beat,div(a.mid,Math.max(a.min_att,a.mid_att)));a.beat=Math.max(a.beat,div(a.treb,Math.max(a.min_att,a.treb_att)));a.beat=Math.max(a.beat,\n(a.prev_beat-a.decay_to)*a.decay_rate+a.decay_to);a.beat_level=24*(a.beat-a.prev_beat-.07);a.is_beat=above(a.beat_level,.5);a.prev_beat=a.beat;a.wave_a=a.beat_level+1.65;a.rot=(1-a.is_beat)*a.my_rot+a.is_beat*a.new_rot;a.zoom=(1-a.is_beat)*a.my_zoom+a.is_beat*a.new_zoom;a.warp=(1-a.is_beat)*a.my_warp+a.is_beat*a.new_warp;a.cx=(1-a.is_beat)*a.my_cx+a.is_beat*a.new_cx;a.cy=(1-a.is_beat)*a.my_cy+a.is_beat*a.new_cy;a.s=(1-a.is_beat)*a.my_s+a.is_beat*a.new_s;a.my_rot=a.rot;a.my_zoom=a.zoom;a.my_warp=a.warp;\na.my_cx=a.cx;a.my_cy=a.cy;a.my_s=a.s;a.q11=a.s;","pixel_eqs_str":"a.zoom+=.02*Math.cos(7*a.ang);","warp":" shader_body { \n  vec3 ret_1;\n  float tmpvar_2;\n  tmpvar_2 = (0.01 + (q11 * q11));\n  vec3 tmpvar_3;\n  tmpvar_3.xy = (((\n    (uv_orig * 4.0)\n   * texsize.xy) / 850.0) * tmpvar_2);\n  tmpvar_3.z = (time * 0.1);\n  vec2 tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv_orig * texsize.xy);\n  tmpvar_4 = (((0.6 * tmpvar_5) * tmpvar_2) + (texture (sampler_noisevol_hq, tmpvar_3).xy * 9.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = cos(tmpvar_4.y);\n  tmpvar_6.y = cos(tmpvar_4.x);\n  ret_1 = texture (sampler_main, (uv + ((\n    (tmpvar_6 * texsize.zw)\n   * 1.7) / tmpvar_2))).xyz;\n  ret_1 = (ret_1 * 0.99);\n  ret_1 = (ret_1 + (19.52 * (\n    (texture (sampler_noise_lq, ((tmpvar_5 * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  ret_1 = mix (ret_1, ret_1.zxy, vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 1.5) - 0.1);\n  ret = tmpvar_1.xyz;\n }"}