{"baseVals":{"rating":2,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":4.142,"wave_scale":1.107,"wave_smoothing":0.648,"wave_mystery":-0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":11.20207,"zoom":1.00949,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.7,"mv_g":0.7,"mv_b":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"textured":1,"rad":0.36457,"border_a":1},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.r=a.q1;a.b=a.q2;a.g=a.q3;a.r2=1-Math.abs(a.q1);a.b2=a.q2;a.g2=a.q3;a.ang+=12*Math.tan(a.time);a.x+=.15*Math.sin(a.time);a.y+=.15*Math.cos(a.time);a.a=.5+.5*Math.sin(a.bass_att);a.a2=.5+.5*Math.cos(a.bass_att);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.q1=0;a.dvy=0;a.vx=0;a.vy=0;a.vang=0;a.xv=0;a.dvx=0;a.bb=0;a.q2=0;a.q3=0;a.yv=0;","frame_eqs_str":"a.q1=.5+.4*Math.sin(.43*a.time+.12*a.bass_att);a.q2=.5+.4*Math.sin(.63*a.time+.14*a.bass_att);a.q3=.5+.4*Math.sin(.83*a.time+.16*a.bass_att);a.ob_b=.01*mod(a.frame,40);a.bb=.016*a.bass_att+.98*a.bb;a.mv_x=30*a.bb;a.mv_dx=a.mv_dx+.1*Math.sin(a.time)+.01*a.mv_x-.3;a.monitor=a.mv_x;a.wave_mystery=.01*Math.floor(randint(150))-.01*Math.floor(randint(150));","pixel_eqs_str":"a.xv=Math.sin(.333*a.time)*a.x*Math.cos(.667*a.time)*a.x;a.yv=Math.cos(.333*a.time)*a.y*Math.sin(.667*a.time)*a.y;a.x=a.xv;a.y=a.yv;a.vang=.0628318*Math.sin(.2*a.time)-1.68;a.vx=(a.x-.5)*Math.cos(a.vang)-(a.y-.5)*Math.sin(a.vang)+.5;a.vy=(a.x-.5)*Math.sin(a.vang)+(a.y-.5)*Math.cos(a.vang)+.5;a.dvx=.01+.01*Math.floor(randint(2));a.dvy=-.01;a.dx=a.dvx*Math.cos(a.vang)-a.dvy*Math.sin(a.vang);a.dy=-a.dvx*Math.sin(a.vang)-a.dvy*Math.cos(a.vang);a.dy=below(a.y,.2)*a.dy+.01*above(a.y,\n.1);a.dx=below(a.x,.2)*a.dx+.01*above(a.x,.1);a.sx+=.075*Math.sin(3*a.x);a.sy+=.075*Math.sin(3.1*a.y);a.cx=.5+.15*Math.sin(a.time);a.cy=.5+.15*Math.cos(a.time);a.rot=a.rot+.05*Math.sin(10*a.rad-5*a.time)*a.treb_att-.005*Math.cos(a.time*a.rad);","warp":"uniform sampler2D sampler_fw_clouds;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \n    (uv - (tmpvar_2 * 2.0))\n  ) * 0.9)).xyz - (0.85 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 + (texture (sampler_fw_clouds, uv) * 0.25).xyz);\n  ret_1 = ((ret_1 - 0.05) * 0.98);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (uv.x + 0.001);\n  tmpvar_3.y = uv.y;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = abs(((\n    (((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) - tmpvar_4.x)\n   - tmpvar_4.y) - tmpvar_4.z));\n  if ((tmpvar_5 > 0.1)) {\n    ret_1 = ((texture (sampler_blur2, uv).xyz * scale2) + bias2);\n  } else {\n    ret_1 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  };\n  ret_1 = (ret_1 + (0.66 * (\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2)));\n  float tmpvar_6;\n  tmpvar_6 = ret_1.x;\n  ret_1 = (ret_1 * 2.0);\n  float tmpvar_7;\n  tmpvar_7 = dot (ret_1, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_8;\n  tmpvar_8 = mix ((0.75 * vec3(tmpvar_7)), (vec3(tmpvar_7) * (\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n   - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  )), ((\n    (0.5 * rand_preset)\n  .xyz + \n    (0.5 * _qa.xyz)\n  ) * vec3(tmpvar_7)));\n  ret_1 = (tmpvar_8 + (tmpvar_6 * tmpvar_8));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n }"}