{"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":0.2,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":32,"mv_y":24,"mv_l":0,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.px=0;a.tic=0;a.index2=0;a.crit=0;a.index=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.q29=0;a.l1angy=0;a.dec_med=0;a.py=0;a.mindev=0;a.trel=0;a.t0a=0;a.is_beat=0;a.q23=0;a.q24=0;a.jump=0;a.dec_slow=0;a.ran2=0;a.q11=0;a.q10=0;a.sdev=0;a.pp=0;a.spb=0;a.spb_=0;a.pz=0;a.q16=0;a.avg=0;a.puls=0;a.trig=0;a.beat=0;a.q17=0;a.l1angz=0;a.peak=0;a.q27=0;a.q14=0;a.sw1=0;a.t0=0;a.ran1=0;a.q28=0;a.test=0;a.q30=0;a.q20=0;a.index2=randint(8);a.px=randint(100);a.py=randint(100);a.pz=randint(100);\n","frame_eqs_str":"a.dec_med=pow(.85,div(30,a.fps));a.dec_slow=pow(.95,div(30,a.fps));a.beat=a.mid;a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,1.2*a.avg)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,32);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.spb=Math.min(a.t0-a.t0a+.01,2);a.t0a=a.t0;a.spb_=.00001<Math.abs(a.is_beat)?.9*a.spb_+.1*a.spb:a.spb_;a.mindev=Math.min(Math.min(Math.abs(a.spb-\na.spb_),Math.abs(2*a.spb-a.spb_)),Math.abs(a.spb-2*a.spb_));a.sdev=.00001<Math.abs(a.is_beat)?.96*a.sdev+.04*pow(a.mindev+.01,2):a.sdev;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak+.01;a.q24=a.is_beat;a.q27=a.index;a.q28=a.index2;a.puls=a.puls*a.dec_med+(1-a.dec_med)*a.q24*16*bnot(mod(a.index,4));a.q23=Math.min(1,a.puls);a.test+=120*div(above(a.beat,1.2*a.avg)*(a.beat-a.avg),a.fps);a.tic=div(a.q27,2);a.l1angz=0*a.tic+a.test;a.l1angy=div(1.6*(1+Math.sin(2*a.test)),2);a.sw1=mod(a.q28,2)*above(a.avg,1);a.l1angy=\na.l1angy-div(1,a.q22)*a.sw1+div((1-a.sw1)*a.q22,8);a.l1angy+=2*above(a.avg,1.2)*Math.sin(a.q22);a.l1angz+=above(a.avg,1.2)*a.q22*above(a.q28,4);a.q10=Math.cos(a.l1angz)*Math.sin(a.l1angy);a.q11=Math.sin(a.l1angz)*Math.sin(a.l1angy);a.q12=Math.abs(Math.cos(a.l1angy)*Math.cos(a.l1angy));a.trig=a.q24*bnot(mod(a.index,2));a.ran1=.00001<Math.abs(a.trig)?div(randint(100),100)-.5:a.ran1;a.ran2=.00001<Math.abs(a.trig)?div(randint(100),100)-.5:a.ran2;a.q13=div(a.ran1,2);a.q14=div(a.ran2,2);a.pp=div(4*a.avg*\na.q13,a.fps);a.pp=div(1,a.fps);a.crit=Math.floor(div(a.q27,8));a.px+=equal(a.crit,0)*a.pp;a.py+=equal(a.crit,1)*a.pp;a.pz+=equal(a.crit,2)*a.pp;a.trel+=div(div(1,a.spb_),a.fps);a.jump=Math.floor(a.trel)*below(a.sdev,.004*a.avg);a.q15=a.px+a.jump;a.q16=a.py+a.jump;a.q17=a.pz+a.jump;a.q30=above(a.q28,5);a.monitor=a.avg;a.q29=div(a.q22,16)*(above(a.q22,1.5)+.8-a.avg)+.1*(Math.sin(div(a.time,5))-.8);a.zoom=1;a.warp=0;a.rot=0;a.dx=0;a.dy=-.02;","pixel_eqs_str":"","pixel_eqs":"","warp":"float clip1;\nvec2 xlat_mutableKugel1;\nvec3 xlat_mutablelight;\nfloat xlat_mutablerad1;\nfloat xlat_mutableray1;\nvec2 xlat_mutablersk;\nfloat xlat_mutablesun1;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv3;\nvec2 xlat_mutableuv4;\nvec2 xlat_mutableuv5;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = q13;\n  tmpvar_1.y = q14;\n  clip1 = (float((rand_preset.x >= 0.5)) + 1.0);\n  vec2 uv_2;\n  uv_2 = uv;\n  vec2 uv2_3;\n  float ff_5;\n  float k1_6;\n  float ky_7;\n  vec3 ret_8;\n  xlat_mutableuv1 = ((uv - vec2(0.5, 0.5)) * aspect.xy);\n  xlat_mutableuv3 = (58.0 * xlat_mutableuv1);\n  ky_7 = clamp ((0.04 - (xlat_mutableuv3.y / 40.0)), 0.0, 1.0);\n  k1_6 = (xlat_mutableuv3.x - (sign(xlat_mutableuv3.x) * 14.0));\n  k1_6 = (k1_6 - ((\n    sign(k1_6)\n   * q28) * 2.0));\n  k1_6 = (k1_6 - (sign(k1_6) * 8.0));\n  ff_5 = (16.0 + (16.0 * rand_preset.z));\n  for (int n_4 = 1; float(n_4) <= 6.0; n_4++) {\n    k1_6 = (k1_6 + ((\n      ((-(ff_5) * float(n_4)) * sign(k1_6))\n     * ky_7) * ky_7));\n    ky_7 = clamp ((ky_7 - 0.1), 0.0, 1.0);\n  };\n  float tmpvar_9;\n  tmpvar_9 = clamp (k1_6, -1.57, 1.57);\n  k1_6 = tmpvar_9;\n  float tmpvar_10;\n  tmpvar_10 = clamp ((cos(tmpvar_9) - 0.02), 0.0, 1.0);\n  vec2 tmpvar_11;\n  tmpvar_11.x = cos(q15);\n  tmpvar_11.y = 0.0;\n  xlat_mutablersk = (xlat_mutableuv1 + (0.3 * tmpvar_11));\n  xlat_mutablerad1 = ((16.0 * sqrt(\n    dot (xlat_mutablersk, xlat_mutablersk)\n  )) * (2.0 + cos(q17)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((9.0 - \n    (7.0 * xlat_mutablerad1)\n  ), 0.0, 1.0));\n  vec4 tmpvar_12;\n  tmpvar_12 = (1.0 + slow_roam_sin);\n  xlat_mutablelight = ((0.1 / xlat_mutablerad1) * pow (vec4(q23), tmpvar_12)).xyz;\n  uv_2 = (uv + (xlat_mutableKugel1 * 0.1));\n  vec2 tmpvar_13;\n  tmpvar_13.x = 0.0;\n  tmpvar_13.y = cos((q16 / 2.0));\n  xlat_mutablersk = (xlat_mutableuv1 + (0.3 * tmpvar_13));\n  xlat_mutablerad1 = ((16.0 * sqrt(\n    dot (xlat_mutablersk, xlat_mutablersk)\n  )) * (2.0 + cos(\n    (q17 * 2.0)\n  )));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((9.0 - \n    (7.0 * xlat_mutablerad1)\n  ), 0.0, 1.0));\n  xlat_mutablelight = (xlat_mutablelight + ((0.1 / xlat_mutablerad1) * pow (vec4(q23), tmpvar_12)).xyz);\n  uv_2 = (uv_2 + (xlat_mutableKugel1 * 0.1));\n  vec2 tmpvar_14;\n  tmpvar_14.x = cos((q15 / 3.0));\n  tmpvar_14.y = 0.0;\n  xlat_mutablersk = (xlat_mutableuv1 + (0.3 * tmpvar_14));\n  xlat_mutablerad1 = ((16.0 * sqrt(\n    dot (xlat_mutablersk, xlat_mutablersk)\n  )) * (2.0 + cos(\n    (q17 * 3.0)\n  )));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((9.0 - \n    (7.0 * xlat_mutablerad1)\n  ), 0.0, 1.0));\n  xlat_mutablelight = (xlat_mutablelight + ((0.1 / xlat_mutablerad1) * pow (vec4(q23), tmpvar_12)).xyz);\n  uv_2 = (uv_2 + (xlat_mutableKugel1 * 0.1));\n  uv_2 = (uv_2 + (tmpvar_10 * 0.05));\n  vec2 tmpvar_15;\n  tmpvar_15 = ((uv_2.yx - 0.5) * (2.0 + tmpvar_10));\n  float ex_16;\n  ex_16 = (0.5 + ((0.3 * q28) / 8.0));\n  float tmpvar_17;\n  tmpvar_17 = sqrt(((tmpvar_15.x * tmpvar_15.x) + (tmpvar_15.y * tmpvar_15.y)));\n  float tmpvar_18;\n  float tmpvar_19;\n  tmpvar_19 = (min (abs(\n    (tmpvar_15.y / tmpvar_15.x)\n  ), 1.0) / max (abs(\n    (tmpvar_15.y / tmpvar_15.x)\n  ), 1.0));\n  float tmpvar_20;\n  tmpvar_20 = (tmpvar_19 * tmpvar_19);\n  tmpvar_20 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)\n     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)\n   * tmpvar_20) + 0.9999793) * tmpvar_19);\n  tmpvar_20 = (tmpvar_20 + (float(\n    (abs((tmpvar_15.y / tmpvar_15.x)) > 1.0)\n  ) * (\n    (tmpvar_20 * -2.0)\n   + 1.570796)));\n  tmpvar_18 = (tmpvar_20 * sign((tmpvar_15.y / tmpvar_15.x)));\n  if ((abs(tmpvar_15.x) > (1e-08 * abs(tmpvar_15.y)))) {\n    if ((tmpvar_15.x < 0.0)) {\n      if ((tmpvar_15.y >= 0.0)) {\n        tmpvar_18 += 3.141593;\n      } else {\n        tmpvar_18 = (tmpvar_18 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_18 = (sign(tmpvar_15.y) * 1.570796);\n  };\n  vec2 tmpvar_21;\n  tmpvar_21.x = (pow (tmpvar_17, ex_16) * cos((tmpvar_18 * ex_16)));\n  tmpvar_21.y = (pow (tmpvar_17, ex_16) * sin((tmpvar_18 * ex_16)));\n  uv2_3 = (0.5 + ((1.0 - \n    abs(((fract(\n      ((vec2(mod (tmpvar_21, clip1))) * 0.5)\n    ) * 2.0) - 1.0))\n  ) - 0.5));\n  ret_8 = ((texture (sampler_main, uv2_3.yx).xyz + texture (sampler_main, uv_orig).xyz) / 2.0);\n  xlat_mutableuv4 = (((uv_2 - 0.5) - tmpvar_1) + tmpvar_10);\n  vec2 tmpvar_22;\n  tmpvar_22.x = q10;\n  tmpvar_22.y = q11;\n  xlat_mutableuv5 = (normalize(xlat_mutableuv4) - tmpvar_22);\n  vec2 x_23;\n  x_23 = (xlat_mutableuv5 / q12);\n  xlat_mutableray1 = (clamp ((1.0 - \n    sqrt(dot (x_23, x_23))\n  ), 0.0, 1.0) + ((0.001 / \n    sqrt(dot (xlat_mutableuv5, xlat_mutableuv5))\n  ) / sqrt(\n    dot (xlat_mutableuv4, xlat_mutableuv4)\n  )));\n  xlat_mutablesun1 = (clamp ((0.002 / \n    sqrt(dot (xlat_mutableuv4, xlat_mutableuv4))\n  ), 0.0, 1.0) / (1.05 - q12));\n  vec3 tmpvar_24;\n  tmpvar_24.x = q27;\n  tmpvar_24.y = (q27 + 3.0);\n  tmpvar_24.z = (q27 + 6.0);\n  ret_8 = (ret_8 + ((xlat_mutableray1 + xlat_mutablesun1) * fract(\n    (tmpvar_24 / 16.0)\n  )));\n  vec2 tmpvar_25;\n  tmpvar_25 = sin(((uv2_3 * 2.0) + (0.2 * \n    ((float(mod (q27, 8.0))) - 4.0)\n  )));\n  ret_8 = (ret_8 + (0.015 / sqrt(\n    dot (tmpvar_25, tmpvar_25)\n  )));\n  ret_8 = (ret_8 + ((\n    pow (tmpvar_10, 3.0)\n   * q29) * (1.0 + roam_sin)).xyz);\n  ret_8 = (ret_8 + xlat_mutablelight);\n  ret_8 = (ret_8 * ((1.0 - \n    (3.3 / fps)\n  ) - (0.02 * \n    dot (((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29))\n  )));\n  vec4 tmpvar_26;\n  tmpvar_26.w = 1.0;\n  tmpvar_26.xyz = ret_8;\n  ret = tmpvar_26.xyz;\n }","comp":" shader_body { \n  vec3 tmpvar_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = clamp ((pow (texture (sampler_main, uv).xyz, vec3(1.2, 1.2, 1.2)) / vec3(1.2, 1.2, 1.2)), 0.0, 1.0);\n  tmpvar_1 = (tmpvar_2 * (tmpvar_2 * (3.0 - \n    (2.0 * tmpvar_2)\n  )));\n  float tmpvar_3;\n  tmpvar_3 = clamp (q20, 0.0, 1.0);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = mix (vec3(dot (tmpvar_1, vec3(0.32, 0.49, 0.29))), tmpvar_1, vec3((tmpvar_3 * (tmpvar_3 * \n    (3.0 - (2.0 * tmpvar_3))\n  ))));\n  ret = tmpvar_4.xyz;\n }"}