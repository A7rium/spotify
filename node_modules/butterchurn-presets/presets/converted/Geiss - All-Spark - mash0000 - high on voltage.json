{"baseVals":{"rating":0,"gammaadj":2.7,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":5.686,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.853,"zoom":1.00001,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.489,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.q1=.5+.32*Math.cos(.4*a.time);a.q2=.5+.22*Math.sin(.4*a.time);a.wave_y=a.q2;","pixel_eqs_str":"a.dx=.02*(a.x-a.q1);a.dy=.02*(a.y-a.q2);","warp":" shader_body { \n  vec2 uvm_1;\n  vec2 xlat_varmod_2;\n  vec3 ret_3;\n  ret_3.xy = ((texture (sampler_pw_main, uv_orig).xy * 0.9) - 0.06);\n  ret_3.z = texture (sampler_pw_main, uv).z;\n  xlat_varmod_2 = (1.0/(vec2(max (aspect.w, aspect.z))));\n  vec2 tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv_orig - vec2(0.5, 0.5));\n  tmpvar_4 = ((tmpvar_5 * 2.5) * aspect.wz);\n  uvm_1 = (((\n    (((q1 * tmpvar_4) + ((vec2(1.0, -1.0) * q2) * tmpvar_4.yx)) * aspect.zw)\n   * xlat_varmod_2) + 0.5) - vec2(0.1493, 0.0));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.xy = ((texture (sampler_fw_main, uvm_1).xy * 0.9) - 0.01);\n  ret_3.xy = max (ret_3, tmpvar_6).xy;\n  uvm_1 = ((tmpvar_5 * 1.5) * aspect.wz);\n  uvm_1 = (((\n    ((q3 * uvm_1) + ((vec2(1.0, -1.0) * q4) * uvm_1.yx))\n   * aspect.zw) * xlat_varmod_2) + vec2(0.325, 0.5));\n  ret_3.xy = max (ret_3.xy, ((texture (sampler_fw_main, uvm_1).xy * 0.9) - 0.01));\n  uvm_1 = ((tmpvar_5 * 1.8) * aspect.wz);\n  uvm_1 = (((\n    ((q5 * -(uvm_1)) + ((vec2(1.0, -1.0) * -(q6)) * uvm_1.yx))\n   * aspect.zw) * xlat_varmod_2) + vec2(0.865, 0.5));\n  ret_3.xy = max (ret_3.xy, ((texture (sampler_fw_main, uvm_1).xy * 0.9) - 0.01));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_3;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }"}