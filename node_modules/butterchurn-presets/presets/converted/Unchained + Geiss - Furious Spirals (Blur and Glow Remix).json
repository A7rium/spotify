{"baseVals":{"rating":0,"decay":0.987,"echo_zoom":1.006,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.028,"wave_scale":0.591,"wave_smoothing":0.18,"wave_mystery":0.24,"modwavealphastart":0.95,"modwavealphaend":0.75,"zoomexp":1.0017,"fshader":0.1,"zoom":0.9703,"cx":0.44,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ib_size":0,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.bass_residual=0;a.old_treb_flop=0;a.bass_flop=0;a.q1=0;a.q5=0;a.treb_flop=0;a.bass_thresh=0;a.old_bass_flop=0;a.treb_thresh=0;a.pulse=0;a.bass_changed=0;a.mid_thresh=0;a.q4=0;a.mid_changed=0;a.entropy=0;a.old_mid_flop=0;a.mid_residual=0;a.treb_residual=0;a.chaos=0;a.mid_flop=0;a.q2=0;a.treb_changed=0;a.q3=0;","frame_eqs_str":"a.warp=0;a.old_bass_flop=a.bass_flop;a.old_treb_flop=a.treb_flop;a.old_mid_flop=a.mid_flop;a.chaos=.9+.1*Math.sin(a.pulse);a.entropy=.00001<Math.abs(bnot(a.entropy))?2:.00001<Math.abs(equal(a.pulse,-20))?1+randint(3):a.entropy;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*((a.bass_thresh-1.3)*a.chaos+1.3);a.bass_flop=Math.abs(a.bass_flop-equal(a.bass_thresh,2));a.treb_thresh=2*above(a.treb_att,a.treb_thresh)+(1-above(a.treb_att,a.treb_thresh))*\n((a.treb_thresh-1.3)*a.chaos+1.3);a.treb_flop=Math.abs(a.treb_flop-equal(a.treb_thresh,2));a.mid_thresh=2*above(a.mid_att,a.mid_thresh)+(1-above(a.mid_att,a.mid_thresh))*((a.mid_thresh-1.3)*a.chaos+1.3);a.mid_flop=Math.abs(a.mid_flop-equal(a.mid_thresh,2));a.bass_changed=bnot(equal(a.old_bass_flop,a.bass_flop));a.mid_changed=bnot(equal(a.old_mid_flop,a.mid_flop));a.treb_changed=bnot(equal(a.old_treb_flop,a.treb_flop));a.bass_residual=a.bass_changed*Math.sin(a.time*(3-a.bass_thresh))+bnot(a.bass_changed)*\na.bass_residual;a.treb_residual=a.treb_changed*Math.sin(a.time*(3-a.treb_thresh))+bnot(a.treb_changed)*a.treb_residual;a.mid_residual=a.mid_changed*Math.sin(a.time*(3-a.mid_thresh))+bnot(a.mid_changed)*a.mid_residual;a.pulse=.00001<Math.abs(above(Math.abs(a.pulse),20))?-20:a.pulse+.04*a.entropy*bor(bor(a.bass_changed*bnot(a.treb_changed),a.treb_changed*bnot(a.bass_changed))*bnot(a.mid_changed),a.mid_changed)+.025*(a.mid+a.bass+a.treb);a.q1=a.mid_residual;a.q2=a.bass_residual;a.q3=a.treb_residual;\na.q4=Math.sin(a.pulse);a.q5=Math.cos(a.pulse);a.wave_r+=.5*a.bass_residual;a.wave_r=a.wave_g+.5*a.mid_residual;a.wave_r=a.wave_b+.5*a.treb_residual;a.wave_mystery+=.23*a.mid_residual;a.ob_r=.00001<Math.abs(a.bass_flop)?a.treb_flop:a.wave_r;a.ob_b=.00001<Math.abs(a.treb_flop)?a.mid_flop:a.wave_b;a.ob_g=.00001<Math.abs(a.mid_flop)?a.bass_flop:a.wave_g;a.ob_a=.03+.02*a.wave_r;a.ob_size=.05+.04*a.wave_b;a.ib_r=.00001<Math.abs(a.bass_flop)?a.ob_b:a.ob_g;a.ib_b=.00001<Math.abs(a.treb_flop)?a.ob_g:a.ob_r;\na.ib_g=.00001<Math.abs(a.mid_flop)?a.ob_r:a.ob_b;a.ib_a=.03+.02*a.wave_g;a.ib_size=.05+.04*a.ob_g;a.zoom+=.08*a.mid_residual;","pixel_eqs_str":"a.rot=.00001<Math.abs(above(a.q1,0))?.4*Math.sin(a.rad+a.q3+a.q4):.4*Math.sin(a.rad+a.q2+a.q5);a.zoom-=div(a.rot,10);a.cx+=.3*Math.sin(7*a.x*a.q4);a.cy+=.3*Math.cos(5*a.y*a.q5);","warp":" shader_body { \n  vec2 v_1;\n  vec3 ret_2;\n  v_1 = (normalize((uv - 0.5)) * texsize.zw);\n  ret_2 = (0.2 * ((\n    ((texture (sampler_main, uv).xyz + texture (sampler_main, (uv - (v_1 * 2.5))).xyz) + texture (sampler_main, (uv - (v_1 * 5.5))).xyz)\n   + texture (sampler_main, \n    (uv - (v_1 * 9.0))\n  ).xyz) + texture (sampler_main, (uv - \n    (v_1 * 13.0)\n  )).xyz));\n  ret_2 = (ret_2 * 0.98);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (((uv - 0.5) * 0.86) + 0.5);\n  ret_2 = ((texture (sampler_main, uv_1).xyz * 1.5) - 0.1);\n  ret_2.y = (ret_2 * 0.7).y;\n  ret_2.x = (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).x - 0.03);\n  ret_2.z = (((\n    (texture (sampler_blur2, uv_1).xyz * scale2)\n   + bias2).z * 1.5) - 0.05);\n  ret_2 = (ret_2 * 2.3);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }"}