{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":1.331,"zoom":0.99951,"warp":0.00909,"wave_r":0.44,"wave_g":0.4,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":175,"rad":0.20065,"ang":0.75398,"tex_ang":3.14159,"tex_zoom":0.99979,"r":0,"g2":0,"border_r":0.01,"border_g":0,"border_a":1},"init_eqs_str":"a.xx1=0;a.q11=0;a.xx1=0;a.yy1=0;a.q12=0;a.yy1=0;a.zz1=0;a.q13=0;a.zz1=0;a.dx1=0;a.q14=0;a.yy1=0;a.xx1=0;a.dy1=0;a.xx1=0;a.q15=0;a.zz1=0;a.yy1=0;a.dz1=0;a.xx1=0;a.yy1=0;a.q16=0;a.zz1=0;a.dd=0;a.dx1=0;a.dx1=0;a.dy1=0;a.dy1=0;a.dz1=0;a.dz1=0;a.xx1=0;a.xx1=0;a.q17=0;a.dx1=0;a.dd=0;a.yy1=0;a.yy1=0;a.q17=0;a.dy1=0;a.dd=0;a.zz1=0;a.zz1=0;a.q17=0;a.dz1=0;a.dd=0;a.my_x=0;a.xx1=0;a.my_y=0;a.yy1=0;a.my_z=0;a.zz1=0;a.d=0;a.zoom=0;a.q32=0;a.w1=0;a.q3=0;a.w2=0;a.q4=0;a.w3=0;a.q5=0;a.x1=0;\na.w1=0;a.my_x=0;a.w1=0;a.my_y=0;a.y1=0;a.w1=0;a.my_x=0;a.w1=0;a.my_y=0;a.z1=0;a.my_z=0;a.x2=0;a.w2=0;a.x1=0;a.w2=0;a.z1=0;a.z2=0;a.w2=0;a.x1=0;a.w2=0;a.z1=0;a.y2=0;a.y1=0;a.y3=0;a.w3=0;a.y2=0;a.w3=0;a.z2=0;a.z3=0;a.w3=0;a.y2=0;a.w3=0;a.z2=0;a.x3=0;a.x2=0;a.l=0;a.x3=0;a.x3=0;a.y3=0;a.y3=0;a.w=0;a.x3=0;a.y3=0;a.p=0;a.d=0;a.z3=0;a.l=0;a.d=0;a.x3=0;a.x3=0;a.y3=0;a.y3=0;a.z3=0;a.d=0;a.z3=0;a.d=0;a.my_x=0;a.zoom=0;a.w=0;a.p=0;a.my_y=0;a.zoom=0;a.w=0;a.p=0;a.my_x=0;a.my_y=0;a.d=0;","frame_eqs_str":"a.xx1=.00001<Math.abs(equal(a.instance,0))?a.q11:a.xx1;a.yy1=.00001<Math.abs(equal(a.instance,0))?a.q12:a.yy1;a.zz1=.00001<Math.abs(equal(a.instance,0))?a.q13:a.zz1;a.dx1=a.q14*(a.yy1-a.xx1);a.dy1=a.xx1*(a.q15-a.zz1)-a.yy1;a.dz1=a.xx1*a.yy1-a.q16*a.zz1;a.dd=sqrt(a.dx1*a.dx1+a.dy1*a.dy1+a.dz1*a.dz1);a.xx1+=div(a.q17*a.dx1,a.dd);a.yy1+=div(a.q17*a.dy1,a.dd);a.zz1+=div(a.q17*a.dz1,a.dd);a.my_x=.1*a.xx1;a.my_y=.1*a.yy1;a.my_z=.1*a.zz1-3;a.d=4.75;a.zoom=.55+.25*Math.sin(.5*a.q32);\na.w1=a.q3;a.w2=a.q4;a.w3=a.q5;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));\na.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+a.my_x;a.y=.5+a.my_y;a.rad=div(a.rad,a.d);a.ang-=div(a.instance,a.num_inst)*Math.asin(1)*8;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.d=0;a.n=0;a.y1=0;a.n2=0;a.q12=0;a.x1=0;a.q13=0;a.q15=0;a.j3=0;a.dy1=0;a.q1=0;a.q5=0;a.n1=0;a.dz1=0;a.v=0;a.q11=0;a.dd=0;a.q4=0;a.a=0;a.j2=0;a.q16=0;a.b=0;a.q17=0;a.vol=0;a.dx1=0;a.j1=0;a.q2=0;a.q14=0;a.z1=0;a.q3=0;a.q32=0;a.c=0;a.voltime=0;a.x1=2;a.y1=2;a.z1=2;","frame_eqs_str":"a.q1=a.aspectx;a.q2=a.aspecty;a.wave_a=0;a.v=.5;a.j1=.95*a.j1+sqr(4*a.bass)*a.v;a.j2=.95*a.j2+sqr(4*a.mid)*a.v;a.j3=.95*a.j3+sqr(4*a.treb)*a.v;a.n+=.0052*a.j1;a.n1+=.0052*a.j2;a.n2+=.0052*a.j3;a.q3=.01*a.n;a.q4=.01*a.n1;a.q5=.01*a.n2;a.a=10;a.b=28;a.c=div(9,5);a.dx1=a.a*(a.y1-a.x1);a.dy1=a.x1*(a.b-a.z1)-a.y1;a.dz1=a.x1*a.y1-a.c*a.z1;a.d=1;a.dd=sqrt(a.dx1*a.dx1+a.dy1*a.dy1+a.dz1*a.dz1);a.x1+=div(a.d*a.dx1,a.dd);a.y1+=div(a.d*a.dy1,a.dd);a.z1+=div(a.d*a.dz1,a.dd);a.q11=a.x1;a.q12=\na.y1;a.q13=a.z1;a.q14=a.a;a.q15=a.b;a.q16=a.c;a.q17=a.d;a.vol=.25*(a.bass_att+a.treb_att+a.mid_att);a.vol*=a.vol;a.voltime+=.1*a.vol;a.q32=.4*a.voltime;","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutabled;\nvec2 xlat_mutabled_uv;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)) - 0.5).xyz;\n  xlat_mutabled = (texsize.zw * 4.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_3;\n  tmpvar_3.x = xlat_mutabledx.x;\n  tmpvar_3.y = xlat_mutabledy.x;\n  xlat_mutabled_uv = (uv_orig + ((tmpvar_3 * texsize.zw) * 4.0));\n  ret_1.x = texture (sampler_main, xlat_mutabled_uv).x;\n  ret_1.x = (ret_1.x + ((\n    ((ret_1.x - ((texture (sampler_blur1, xlat_mutabled_uv).xyz * scale1) + bias1).x) * 0.04)\n   - 0.006) + (tmpvar_2 * 0.01)).x);\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.y;\n  tmpvar_4.y = xlat_mutabledy.y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = xlat_mutabledx.x;\n  tmpvar_5.y = xlat_mutabledy.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - ((\n    (vec2(0.0, -1.2) + (tmpvar_4 * 8.0))\n   + \n    (tmpvar_5 * 4.0)\n  ) * texsize.zw));\n  ret_1.y = (max (texture (sampler_main, tmpvar_6).x, (texture (sampler_main, tmpvar_6).y - 0.0012)) + (tmpvar_2 * 0.08)).x;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 N_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1.0, 0.0) * texsize.zw);\n  N_1.x = ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz).x * 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\n  N_1.y = ((texture (sampler_main, (uv + tmpvar_4)).xyz - texture (sampler_main, (uv - tmpvar_4)).xyz).x * 0.5);\n  N_1.x = (N_1.x + ((\n    ((texture (sampler_blur1, (uv + tmpvar_3)).xyz * scale1) + bias1)\n   - \n    ((texture (sampler_blur1, (uv - tmpvar_3)).xyz * scale1) + bias1)\n  ).x * 0.5));\n  N_1.y = (N_1.y + ((\n    ((texture (sampler_blur1, (uv + tmpvar_4)).xyz * scale1) + bias1)\n   - \n    ((texture (sampler_blur1, (uv - tmpvar_4)).xyz * scale1) + bias1)\n  ).x * 0.5));\n  N_1.z = -0.07;\n  vec3 tmpvar_5;\n  tmpvar_5 = normalize(N_1);\n  N_1 = tmpvar_5;\n  vec3 tmpvar_6;\n  tmpvar_6.z = -0.8;\n  tmpvar_6.x = q6;\n  tmpvar_6.y = q7;\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.xy = ((uv_orig * 2.0) - 1.0);\n  vec3 tmpvar_8;\n  tmpvar_8 = normalize((tmpvar_6 - tmpvar_7));\n  vec3 tmpvar_9;\n  tmpvar_9 = normalize((tmpvar_7 - vec3(0.0, 0.0, 1.0)));\n  ret_2 = (vec3(clamp (dot (tmpvar_5, tmpvar_8), 0.0, 1.0)) * normalize((\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\n  .yzx + 0.1)));\n  ret_2 = (ret_2 + (pow (\n    clamp (dot (normalize((tmpvar_9 + \n      ((2.0 * tmpvar_5) * dot (tmpvar_9, tmpvar_5))\n    )), tmpvar_8), 0.0, 1.0)\n  , 32.0) * 0.5));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_2;\n  ret = tmpvar_10.xyz;\n }"}