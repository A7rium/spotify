{"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":1.740724,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.index2=0;a.index4=0;a.index=0;a.q22=0;a.q21=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.t_rel=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;a.p3=0;a.t_rel=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.monitor=a.index4;\na.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att+1;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.14159265359*a.p3,2);a.q27=8-a.index;a.q28=a.index2+1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.t_rel+=div(.6,a.fps)*a.q1*a.q1;a.q5=Math.cos(a.t_rel);a.q6=Math.sin(a.t_rel);a.q7=-a.q6;a.q8=a.q5;a.movez+=div(div(.6,\na.fps),(1.4-a.q5)*(1.4-a.q5));a.q30=a.movez;a.zoom=1;","pixel_eqs_str":"a.dx=div(0*a.q28,8);","warp":"vec3 xlat_mutablenoise;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\n shader_body { \n  float z_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qb.xy;\n  tmpvar_2[1u] = _qb.zw;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv * tmpvar_2) - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (0.4 / abs(tmpvar_3.y));\n  xlat_mutablers.x = (tmpvar_3.x * tmpvar_4);\n  xlat_mutablers.y = (tmpvar_4 + q30);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\n  xlat_mutablenoise = (tmpvar_5.xyz * vec3(greaterThanEqual (tmpvar_5.xyz, vec3(0.9, 0.9, 0.9))));\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\n  )));\n  xlat_mutableret1 = xlat_mutablenoise;\n  z_1 = (1.2 / abs(tmpvar_3.y));\n  xlat_mutablers.x = (tmpvar_3.x * z_1);\n  xlat_mutablers.y = (z_1 + q30);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\n  xlat_mutablenoise = (tmpvar_6.xyz * vec3(greaterThanEqual (tmpvar_6.xyz, vec3(0.9, 0.9, 0.9))));\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\n  z_1 = (0.4 / abs(tmpvar_3.x));\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\n  xlat_mutablers.x = (z_1 + q30);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\n  xlat_mutablenoise = (tmpvar_7.xyz * vec3(greaterThanEqual (tmpvar_7.xyz, vec3(0.9, 0.9, 0.9))));\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\n  )));\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\n  z_1 = (1.2 / abs(tmpvar_3.x));\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\n  xlat_mutablers.x = (z_1 + q30);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\n  xlat_mutablenoise = (tmpvar_8.xyz * vec3(greaterThanEqual (tmpvar_8.xyz, vec3(0.9, 0.9, 0.9))));\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = xlat_mutableret1;\n  ret = tmpvar_9.xyz;\n }","comp":"uniform sampler2D sampler_clouds2;\n shader_body { \n  vec2 uv_1;\n  vec2 uv1_2;\n  uv_1 = (uv * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (dot (texture (sampler_main, (uv_1 - tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)));\n  tmpvar_5.y = (dot (texture (sampler_main, (uv_1 - tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)));\n  uv1_2 = ((0.3 * sin(\n    ((uv_1 + (0.02 * time)) * 6.0)\n  )) + (0.2 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_clouds2, (uv_orig + tmpvar_5));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((-2.0 * \n    (0.1 * texture (sampler_main, uv_1))\n  .xyz) + (\n    clamp (((0.004 * q26) / sqrt(dot (uv1_2, uv1_2))), 0.0, 1.0)\n   * vec3(1.0, 0.8, 0.4))) + (0.4 * (tmpvar_6.xyz + \n    (dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29)) - 0.7)\n  )));\n  ret = tmpvar_7.xyz;\n }"}