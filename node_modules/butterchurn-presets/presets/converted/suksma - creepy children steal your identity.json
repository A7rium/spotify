{"baseVals":{"rating":4,"gammaadj":1.9,"decay":0.982,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_thick":1,"wrap":0,"darken":1,"wave_a":0.216,"wave_scale":0.948,"wave_smoothing":0.5,"zoomexp":0.99817,"fshader":0.2,"zoom":0.98001,"cx":0.44,"warp":0.01,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"ob_size":0,"ib_size":0,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.funk=0;a.old_treb_flop=0;a.bass_flop=0;a.g3=0;a.q1=0;a.q5=0;a.treb_flop=0;a.bass_thresh=0;a.g2=0;a.old_bass_flop=0;a.treb_thresh=0;a.pulse=0;a.bass_changed=0;a.y_shift=0;a.mid_thresh=0;a.q4=0;a.mid_changed=0;a.entropy=0;a.x_shift=0;a.old_mid_flop=0;a.chaos=0;a.mid_flop=0;a.r_shift=0;a.q2=0;a.treb_changed=0;a.q3=0;a.g1=0;","frame_eqs_str":"a.warp=0;a.old_bass_flop=a.bass_flop;a.old_treb_flop=a.treb_flop;a.old_mid_flop=a.mid_flop;a.chaos=.9+.1*Math.sin(a.pulse);a.entropy=.00001<Math.abs(bnot(a.entropy))?2:.00001<Math.abs(equal(a.pulse,-20))?1+Math.floor(randint(6)):a.entropy;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*((a.bass_thresh-1.3)*a.chaos+1.3);a.bass_flop=Math.abs(a.bass_flop-equal(a.bass_thresh,2));a.treb_thresh=2*above(a.treb_att,a.treb_thresh)+(1-above(a.treb_att,\na.treb_thresh))*((a.treb_thresh-1.3)*a.chaos+1.3);a.treb_flop=Math.abs(a.treb_flop-equal(a.treb_thresh,2));a.mid_thresh=2*above(a.mid_att,a.mid_thresh)+(1-above(a.mid_att,a.mid_thresh))*((a.mid_thresh-1.3)*a.chaos+1.3);a.mid_flop=Math.abs(a.mid_flop-equal(a.mid_thresh,2));a.bass_changed=bnot(equal(a.old_bass_flop,a.bass_flop));a.mid_changed=bnot(equal(a.old_mid_flop,a.mid_flop));a.treb_changed=bnot(equal(a.old_treb_flop,a.treb_flop));a.pulse=.00001<Math.abs(above(Math.abs(a.pulse),20))?-20:a.pulse+\n.01*a.chaos*bor(bor(a.bass_changed,a.treb_changed),a.mid_changed)+.025*(a.mid+a.bass+a.treb);a.q3=Math.sin(a.pulse);a.q2=.5*div(a.pulse,a.entropy)*a.chaos;a.q4=Math.sin(a.q2);a.q5=a.entropy;a.q1=(1+1*above(a.q4,0))*(1+2*above(a.q3,0))*(1+4*a.mid_changed*above(a.q3,0))*(1+6*above(a.pulse,0));a.wave_r=.00001<Math.abs(a.treb_flop)?Math.abs(.5*a.q4):.00001<Math.abs(a.bass_flop)?.5+.5*a.q4:1;a.wave_g=.00001<Math.abs(a.treb_changed)?0:.00001<Math.abs(a.mid_changed)?0:.49;a.wave_b=.00001<Math.abs(a.treb_flop)?\n.8+.2*a.q4:a.bass_changed*a.mid_changed;a.cx=.5+.2*a.q3;a.cy=.5+.2*a.q4;a.wave_x=.5+.2*a.q4*bnot(mod(a.q1,7));a.wave_y=.5+(.00001<Math.abs(bnot(mod(a.q1,2)))?.2*a.q3:0)+.1*bnot(mod(a.q1,3))-.1*bnot(mod(a.q1,5));a.ob_r=.00001<Math.abs(a.bass_flop)?a.treb_flop:a.wave_g;a.ob_b=.00001<Math.abs(a.treb_flop)?.5+.5*a.q3:a.wave_b;a.ob_g=.00001<Math.abs(a.mid_flop)?a.wave_r:a.wave_b;a.ob_a=.07+.05*a.q3;a.ob_size=.01*a.entropy*bnot(mod(a.q1,6));a.ib_r=a.ib_r+.4*bnot(mod(a.q1,10))-.4*bnot(mod(a.q1,30));a.ib_b=\na.ib_b+.4*bnot(mod(a.q1,42))-.4*bnot(mod(a.q1,21));a.ib_g+=.5*Math.sin(.02*a.time*a.entropy);a.ib_a=.07+.05*a.q3*a.q4;a.ib_size=.01+.009*a.q3;a.zoom=a.zoom+.03*bnot(mod(a.q1,3))-.03*bnot(mod(a.q1,35));","pixel_eqs_str":"a.g1=Math.sin(.1*a.q2);a.g2=Math.sin(.2*a.q2);a.g3=Math.sin(.3*a.q2);a.x_shift=.00001<Math.abs(bnot(mod(a.q1,3)))?pow(a.x,2)+a.x*a.g1*2+sqr(a.g3):3*a.g2;a.y_shift=.00001<Math.abs(bnot(mod(a.q1,5)))?pow(a.y,2)+a.y*a.g2*2+sqr(a.g1):3*a.g3;a.r_shift=.00001<Math.abs(bnot(mod(a.q1,7)))?pow(a.rad,2)+a.rad*a.g3*2+sqr(3*a.g2):a.g1;a.funk=a.x_shift+a.y_shift+a.r_shift;a.zoom+=.05*Math.cos(a.funk)*a.q5;a.rot=.00001<Math.abs(bnot(mod(a.q1,14)))?a.g2*a.rad:.1*a.q3;a.dx+=.33*(4-a.q5)*bnot(mod(a.q1,\n70))*a.g1;a.cx=a.cy+.33*(4-a.q5)*bnot(mod(a.q1,105))*a.g2;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.03))).xyz - 0.004);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }"}