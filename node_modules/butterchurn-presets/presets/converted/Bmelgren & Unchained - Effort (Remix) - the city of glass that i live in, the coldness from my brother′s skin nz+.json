{"baseVals":{"rating":3,"decay":0.999,"echo_zoom":1.028,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":100,"wave_scale":1.118,"wave_smoothing":0,"wave_mystery":-1,"zoomexp":0.10892,"fshader":1,"zoom":0.7507,"warp":2.7048,"sx":0.979,"sy":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_x":5,"mv_y":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.runtreb=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.vb=0;a.mq24=0;a.q9=0;a.pi23=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.q4=0;a.q16=0;a.q26=0;a.mq27=0;a.mq25=0;a.runbass=0;a.q19=0;a.mq22=0;a.q17=0;a.vol=0;a.mq26=0;a.runmids=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.runbass+=a.vvb;a.runmids+=a.vvm;a.runtreb+=a.vvt;a.pi23=1.33333333333332*Math.asin(-1);\na.atime=1.85*(a.runtreb+a.runmids+a.runbass);a.q8=.4*(Math.sin(a.atime-0*a.pi23)+1);a.q9=.4*(Math.sin(a.atime-1*a.pi23)+1);a.q10=.4*(Math.sin(a.atime-2*a.pi23)+1);a.q1=100*(a.vvt+a.vvm+a.vvb);a.q2=100*(a.vvt+a.vvm+a.vvb);a.q3=100*(a.vvt+a.vvm+a.vvb);a.q4=100*(a.vvt+a.vvm+a.vvb);a.q5=100*(a.vvt+a.vvm+a.vvb);a.q6=100*(a.vvt+a.vvm+a.vvb);a.q4=100*(a.vvt+a.vvm+a.vvb);a.q5=100*(a.vvt+a.vvm+a.vvb);a.q6=100*(a.vvt+a.vvm+a.vvb);a.q7=100*(a.vvt+a.vvm+a.vvb);a.q11=100*(a.vvt+a.vvm+a.vvb);a.q12=100*(a.vvt+a.vvm+\na.vvb);a.q13=100*(a.vvt+a.vvm+a.vvb);a.q14=100*(a.vvt+a.vvm+a.vvb);a.q15=100*(a.vvt+a.vvm+a.vvb);a.q16=100*(a.vvt+a.vvm+a.vvb);a.q17=100*(a.vvt+a.vvm+a.vvb);a.q18=100*(a.vvt+a.vvm+a.vvb);a.q19=100*(a.vvt+a.vvm+a.vvb);a.q20=100*(a.vvt+a.vvm+a.vvb);a.q21=100*(a.vvt+a.vvm+a.vvb);a.q22=100*(a.vvt+a.vvm+a.vvb);a.q23=100*(a.vvt+a.vvm+a.vvb);a.q24=100*(a.vvt+a.vvm+a.vvb);a.q25=100*(a.vvt+a.vvm+a.vvb);a.q26=100*(a.vvt+a.vvm+a.vvb);a.q27=100*(a.vvt+a.vvm+a.vvb);a.q28=100*(a.vvt+a.vvm+a.vvb);a.q29=100*(a.vvt+\na.vvm+a.vvb);a.q30=100*(a.vvt+a.vvm+a.vvb);a.q31=100*(a.vvt+a.vvm+a.vvb);a.q32=100*(a.vvt+a.vvm+a.vvb);a.warp=0;a.wave_r-=.6*Math.sin(a.time);a.wave_b=.2+Math.abs(div(Math.cos(a.time),4));a.wave_r+=div(Math.atan(2*a.time),6);a.wave_mystery=-Math.sin(a.time);a.rot=Math.abs(div(Math.sin(a.time),20*a.bass))-div(a.bass,50)*(.00001<Math.abs(above(a.treb_att,1))?2:-4);a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,\na.cthr))?randint(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?randint(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,a.cthr))?randint(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*randint(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,\na.cthr))?.3*randint(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;","pixel_eqs_str":"a.zoom=a.zoom+Math.atan(div(3*Math.atan(a.rad)*a.rad,2))+(.00001<Math.abs(above(a.bass_att,1))?-.1:.3*Math.acos(2*a.x-1));","warp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + ((texture (sampler_main, \n    (uv + texsize.zw)\n  ).xy - 0.37) * 0.03));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv2_1);\n  ret_2 = tmpvar_3.xyz;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_3.x > (q21 * q13)) && (tmpvar_3.x <= (q24 * q11)))) {\n    ret_2.y = (tmpvar_3.y - (tmpvar_4.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (tmpvar_3.z - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (tmpvar_3.x - (tmpvar_4.z * 0.5));\n  };\n  ret_2 = (ret_2 - 0.004);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  float inten_3;\n  float dist_4;\n  float s_5;\n  float ang2_6;\n  vec2 uv2_7;\n  vec3 ret_8;\n  dist_4 = 1.0;\n  inten_3 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  for (int n_2 = 1; n_2 <= 4; n_2++) {\n    vec2 uv3_9;\n    ang2_6 = float((n_2 / 4));\n    s_5 = (1.0 - ang2_6);\n    uv2_7.x = ((uv_1.x * ang2_6) - (uv_1.y * s_5));\n    uv2_7.y = ((uv_1.x * s_5) + (uv_1.y * ang2_6));\n    uv2_7 = (uv2_7 * aspect.yx);\n    uv2_7 = (uv2_7 * 2.0);\n    vec2 tmpvar_10;\n    tmpvar_10 = floor((fract(\n      (uv2_7 * 0.5)\n    ) * 2.0));\n    uv2_7 = ((fract(uv2_7) * (1.0 - tmpvar_10)) + (tmpvar_10 * fract(\n      (1.0 - uv2_7)\n    )));\n    uv_1 = (uv_1 * (q8 * 1.5));\n    dist_4 = (1.0 - fract((\n      (0.25 * float(n_2))\n     + q29)));\n    inten_3 = ((pow (dist_4, 0.5) * (1.0 - \n      (dist_4 * dist_4)\n    )) * 2.0);\n    uv3_9 = (fract((\n      (((3.0 * uv2_7) * dist_4) + 0.5)\n     + q31)) * 2.0);\n    vec2 tmpvar_11;\n    tmpvar_11 = floor((fract(\n      (uv3_9 * 0.5)\n    ) * 2.0));\n    uv3_9 = ((fract(uv3_9) * (1.0 - tmpvar_11)) + (tmpvar_11 * fract(\n      (1.0 - uv3_9)\n    )));\n    uv3_9 = (uv3_9 * (q9 * 1.5));\n    xlat_mutableneu = (texture (sampler_main, uv3_9).xyz + (2.0 * (\n      (texture (sampler_blur1, uv3_9).xyz * scale1)\n     + bias1)));\n    xlat_mutableret1 = max ((xlat_mutableret1 * 0.9), (xlat_mutableneu * inten_3));\n  };\n  ret_8 = ((0.5 * xlat_mutableret1) + (vec3(0.0, 0.0, 0.15) * (0.5 + uv_1.y)));\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_7.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_8.x > (q26 * q13)) && (ret_8.x <= (q23 * q11)))) {\n    ret_8.z = (ret_8.z - (tmpvar_12.x * 0.5));\n  };\n  if (((ret_8.y > (q25 * q11)) && (ret_8.y <= (q22 * q12)))) {\n    ret_8.x = (ret_8.x - (tmpvar_12.y * 0.5));\n  };\n  if (((ret_8.z > (q24 * q12)) && (ret_8.z <= (q21 * q13)))) {\n    ret_8.y = (ret_8.y - (tmpvar_12.z * 0.5));\n  };\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_8;\n  ret = tmpvar_13.xyz;\n }"}