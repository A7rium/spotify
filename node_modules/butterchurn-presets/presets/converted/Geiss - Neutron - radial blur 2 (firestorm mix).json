{"baseVals":{"rating":3,"gammaadj":1,"decay":1,"wave_mode":7,"wave_a":0.514,"wave_scale":0.747,"wave_smoothing":0.1,"wave_mystery":-0.3,"warpscale":1.331,"zoom":1.03001,"warp":0.00086,"wave_r":0.7,"wave_g":0.5,"wave_b":0.3,"mv_dx":-0.993,"mv_dy":0.18,"mv_l":0.055,"mv_r":0.34,"mv_g":0.182,"mv_b":0.355,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"sep":16,"additive":1,"scaling":0.25584,"a":0.15},"init_eqs_str":"","frame_eqs_str":"a.r=.51+.4*Math.cos(23.31324*a.time)+.4*Math.cos(14.542543*a.time+5);a.g=.51+.4*Math.cos(27.43324*a.time+1)+.4*Math.cos(12.746563*a.time+4);a.b=.51+.4*Math.cos(19.62324*a.time+2)+.4*Math.cos(15.382064*a.time+3);","point_eqs_str":"a.x=a.sample+.3*a.value1;a.y=-.4*(a.sample-.5)+.4*a.value1+.5;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(1.98*a.time)+.4*Math.sin(1.447*a.time));a.wave_g+=.2*(.6*Math.sin(1.835*a.time)+.4*Math.sin(1.181*a.time));a.wave_b+=.1*(.6*Math.sin(1.814*a.time)+.4*Math.sin(1.311*a.time));a.cx+=.11*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.11*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.decay-=.01*equal(mod(a.frame,20),0);a.rot=a.rot+.002*Math.cos(.2313*a.time+2)+.002*Math.cos(.584*a.time+5);","pixel_eqs_str":"a.dx=.02*(a.x-.5);a.dy=.02*(a.y-.5);","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = normalize((uv - 0.5));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (((\n    ((((texture (sampler_main, \n      (uv + (texsize.zw * (tmpvar_1 * 3.5)))\n    ) * 0.1) + (texture (sampler_main, \n      (uv + (texsize.zw * (tmpvar_1 * 6.5)))\n    ) * 0.15)) + (texture (sampler_main, (uv + \n      (texsize.zw * (tmpvar_1 * 8.5))\n    )) * 0.25)) + (texture (sampler_main, (uv + (texsize.zw * \n      (tmpvar_1 * 11.5)\n    ))) * 0.25))\n   + \n    (texture (sampler_main, (uv + (texsize.zw * (tmpvar_1 * 13.5)))) * 0.15)\n  ) + (texture (sampler_main, \n    (uv + (texsize.zw * (tmpvar_1 * 16.5)))\n  ) * 0.1)).xyz - (0.006 * float(\n    ((float(mod (frame, 2.0))) == 0.0)\n  )));\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 5.0);\n  ret = tmpvar_1.xyz;\n }"}