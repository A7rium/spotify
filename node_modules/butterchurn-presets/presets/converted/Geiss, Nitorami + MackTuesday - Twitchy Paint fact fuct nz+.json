{"baseVals":{"rating":3,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"additivewave":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.7,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"fshader":1,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_r":1,"ob_g":0.1,"ob_a":1,"ib_size":0.05,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"num_inst":200,"rad":0.02705,"tex_zoom":1.24699,"g":0.4,"b":0.3,"g2":0,"a2":1,"border_a":0.51},"init_eqs_str":"a.sample=0;a.sample=0;a.sample=0;a.sample=0;a.sample=0;a.t1=0;a.sample=0;a.mx=0;a.t1=0;a.t1=0;a.my=0;a.t1=0;a.t1=0;a.sample=0;a.mz=0;a.t1=0;a.t1=0;a.sample=0;a.d=0;a.zoom=0;a.w1=0;a.w2=0;a.w3=0;a.x1=0;a.w1=0;a.mx=0;a.w1=0;a.my=0;a.y1=0;a.w1=0;a.mx=0;a.w1=0;a.my=0;a.z1=0;a.mz=0;a.x2=0;a.w2=0;a.x1=0;a.w2=0;a.z1=0;a.z2=0;a.w2=0;a.x1=0;a.w2=0;a.z1=0;a.y2=0;a.y1=0;a.y3=0;a.w3=0;a.y2=0;a.w3=0;a.z2=0;a.z3=0;a.w3=0;a.y2=0;a.w3=0;a.z2=0;a.x3=0;a.x2=0;a.l=0;a.x3=0;a.x3=0;a.y3=0;a.y3=\n0;a.w=0;a.x3=0;a.y3=0;a.p=0;a.d=0;a.z3=0;a.l=0;a.d=0;a.x3=0;a.x3=0;a.y3=0;a.y3=0;a.z3=0;a.d=0;a.z3=0;a.d=0;a.my_x=0;a.zoom=0;a.w=0;a.p=0;a.my_y=0;a.zoom=0;a.w=0;a.p=0;a.my_x=0;a.my_y=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.rad=.22*a.sample;a.r=a.sample;a.ang=(1-a.sample)*a.time*15;a.sides=14*(1-a.sample);a.t1=a.sample+.2*a.time;a.mx=.4*(.6*Math.sin(7*a.t1)+.4*Math.sin(4.3*a.t1));a.my=.4*(.6*Math.cos(3.3*a.t1)+.4*Math.cos(6.9*a.t1))*Math.sin(-10+20*a.sample);a.mz=.4*(.6*Math.cos(4.1*a.t1)+.4*Math.cos(6.9*a.t1))*Math.cos(-5+10*a.sample);a.d=1;a.zoom=1;a.w1=.3*a.time;a.w2=.1*a.time;a.w3=.2*a.time;a.x1=Math.cos(a.w1)*a.mx+Math.sin(a.w1)*a.my;a.y1=-Math.sin(a.w1)*\na.mx+Math.cos(a.w1)*a.my;a.z1=a.mz;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+a.my_x;a.y=.5+a.my_y;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.xpos=0;a.yamptarg=0;a.q25=0;a.q22=0;a.q21=0;a.y_pos=0;a.ydir=0;a.meanbass_att=0;a.q29=0;a.q1=0;a.myx=0;a.mq21=0;a.mq24=0;a.myy=0;a.chng=0;a.mq28=0;a.lastbeat=0;a.mq23=0;a.beatrate=0;a.q23=0;a.q24=0;a.peakbass_att=0;a.xamptarg=0;a.xamp=0;a.xspeed=0;a.mq30=0;a.ypos=0;a.movement=0;a.q26=0;a.att=0;a.mq27=0;a.mq25=0;a.volume=0;a.mq22=0;a.beat=0;a.mq26=0;a.q2=0;a.q27=0;a.yamp=0;a.q3=0;a.xdir=0;a.q28=0;a.q30=0;a.q8=0;a.yspeed=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.99;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?randint(4):a.mq27;\na.mq28=.00001<Math.abs(above(a.chng,a.cthr))?randint(4):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?randint(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?randint(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.warp=0;a.volume=.3*(a.bass+a.mid+a.att);a.xamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.25*a.volume*a.bass_att,.5):a.xamptarg;a.xamp+=\n.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xpos+=.001*a.xspeed;a.yamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.15*a.volume*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),\n.1))?2*above(a.ypos,0)-1:a.ydir;a.yspeed=a.yspeed+a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*a.yspeed;a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-\n.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.95*above(a.time-a.lastbeat,2*a.beatrate)+.995*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.wave_x=a.xpos+.5;a.wave_y=1-(a.ypos+.5);a.wave_r=.5+.499*(.6*Math.sin(.98*a.time)+\n.4*Math.sin(1.047*a.time));a.wave_g=.5+.499*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b=.5+.499*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.wave_mystery=-.17+.03*(.6*Math.sin(.637*a.time)+.4*Math.sin(.949*a.time));a.mv_r=.00001<Math.abs(a.beat)?1:a.ib_r;a.mv_b=.00001<Math.abs(a.beat)?a.wave_b:a.ib_b;a.q3=a.wave_mystery;a.q1=a.wave_x;a.q2=1-a.wave_y;a.q2=a.ypos+.5;a.warp=0;a.ob_r=1-a.wave_g;a.ob_b=1-a.wave_r;a.ob_g=1-a.wave_b;a.monitor=a.wave_y;a.movement+=.4*div(a.bass+\na.bass_att+.1*pow(a.bass+.6*a.bass_att+.2*a.treb_att,3),a.fps);a.movement=.00001<Math.abs(above(a.movement,1E4))?0:a.movement;a.rot=Math.sin(a.movement);a.cx=a.wave_x;a.cy=a.y_pos+.5;a.q8=a.movement;","pixel_eqs_str":"a.myy=a.x-a.q1;a.myx=a.y-a.q2+.1;a.dx=6*Math.sin(.675*a.q8)*a.myx*a.myy;a.dy=3*Math.sin(.675*a.q8)*(a.myx*a.myx-a.myy*a.myy);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 dither_uv_big_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.xy * texsize_noise_mq.zw);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q1;\n  tmpvar_5.y = q2;\n  dither_uv_big_2 = (((uv_orig * tmpvar_4) * 0.08) + (tmpvar_5 * 0.05));\n  vec2 tmpvar_6;\n  tmpvar_6 = ((uv_orig * tmpvar_4) + rand_frame.xy);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, uv);\n  uv_1.x = (uv.x + ((\n    (tmpvar_7.y - tmpvar_7.z)\n   * 0.002) * q3));\n  uv_1.y = (uv.y + ((\n    (tmpvar_7.x - 0.5)\n   * 0.004) * q3));\n  ret_3 = ((texture (sampler_main, uv_1).xyz * 0.7) + 0.15);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * roam_cos.y)) && (ret_3.x <= (q24 * roam_sin.x)))) {\n    ret_3.x = (ret_3.x + (tmpvar_8.x * 1.5));\n  };\n  if (((ret_3.y > (q22 * roam_sin.x)) && (ret_3.y <= (q25 * roam_cos.x)))) {\n    ret_3.y = (ret_3.y - (tmpvar_8.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * roam_cos.x)) && (ret_3.z <= (q26 * roam_sin.y)))) {\n    ret_3.z = (ret_3.z * (tmpvar_8.z * 1.5));\n  };\n  ret_3 = (ret_3 + ((texture (sampler_noise_mq, dither_uv_big_2) - 0.5) * 0.15).xyz);\n  ret_3 = (ret_3 + ((\n    (texture (sampler_noise_lq, tmpvar_6) - 0.5)\n   * 0.035) * q3).xyz);\n  ret_3 = (ret_3 - min (min (ret_3.x, ret_3.y), ret_3.z));\n  ret_3 = (ret_3 / (max (\n    max (ret_3.x, ret_3.y)\n  , ret_3.z) + 0.01));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_3;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.0;\n  tmpvar_3.y = texsize.w;\n  vec3 x_4;\n  x_4 = (1.0 - ((\n    (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz)\n   + \n    (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz)\n  ) * 0.05));\n  ret_1 = (clamp ((\n    (45.0 * ((0.294 * sqrt(\n      dot (x_4, x_4)\n    )) - 0.5))\n   + 0.02), 0.0, 1.0) * (1.1 + (0.9 * texture (sampler_main, uv).xyz)));\n  ret_1 = (ret_1 * 0.4);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((ret_1.x > (q26 * roam_cos.y)) && (ret_1.x <= (q23 * roam_sin.x)))) {\n    ret_1.x = (ret_1.x * (tmpvar_5.x * 1.5));\n  };\n  if (((ret_1.y > (q25 * roam_sin.x)) && (ret_1.y <= (q22 * roam_cos.x)))) {\n    ret_1.y = (ret_1.y + (tmpvar_5.y * 1.5));\n  };\n  if (((ret_1.z > (q24 * roam_cos.x)) && (ret_1.z <= (q21 * roam_sin.y)))) {\n    ret_1.z = (ret_1.z - (tmpvar_5.z * 0.5));\n  };\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }"}