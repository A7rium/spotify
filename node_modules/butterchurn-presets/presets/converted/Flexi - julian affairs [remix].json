{"baseVals":{"rating":5,"gammaadj":1,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.762,"wave_smoothing":0.9,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.408,"warpscale":0.905,"zoom":1.025,"warp":0.63735,"wave_y":0.04,"ob_size":0.005,"ob_b":1,"ob_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0},"init_eqs_str":"a.t3=0;a.t2=0;a.t1=0;a.d=0;a.t8=0;a.t2=0;a.t3=0;a.t4=0;a.cl=0;","frame_eqs_str":"a.t8=1;","point_eqs_str":"a.t3=.6*a.t3+1*a.value1;a.t2=.7*a.t2+.2*a.t3;a.t1=.8*a.t1+.1*a.t2;a.d=.9*a.d+.2*a.t1;a.y=.5+a.d*a.sample*(1-a.sample)*.6;a.x=-.05+1.1*a.sample;a.t8=0;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.r=0;","frame_eqs_str":"a.zoom=1;a.wave_a=0;a.r=.96*a.r+.1*(a.bass-a.treb);a.rot=.1*a.r;","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv - 0.5) * vec2(1.84, 1.84));\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((tmpvar_2.x * tmpvar_2.x) - (tmpvar_2.y * tmpvar_2.y));\n  tmpvar_3.y = ((2.0 * tmpvar_2.x) * tmpvar_2.y);\n  ret_1.xz = ((texture (sampler_fc_main, (tmpvar_3 + vec2(0.2806, 0.4508))).xz * vec2(0.99, 1.0)) + vec2(0.06, -0.004));\n  ret_1.y = (texture (sampler_fc_main, (0.5 + (\n    (uv_orig - 0.5)\n   * 0.98))).y - 0.008);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 4.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_2.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = mix (mix ((vec3(0.8, 0.6, 0.5) * texture (sampler_fc_main, \n    (uv + (tmpvar_2 * 0.4))\n  ).x), mix (vec3(2.0, 1.2, 0.0), vec3(-1.0, 0.8, -1.0), tmpvar_3.zzz), vec3((\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .y * 0.35))), vec3(0.4, 0.0, 0.0), vec3(((tmpvar_3.z * \n    (1.0 - tmpvar_3.y)\n  ) * 2.0)));\n  ret = tmpvar_4.xyz;\n }"}