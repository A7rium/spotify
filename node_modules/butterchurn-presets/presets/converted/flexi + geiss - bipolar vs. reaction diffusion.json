{"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r+=.1*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.05*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.decay-=.01*equal(mod(a.frame,40),0);a.rot+=.01*Math.sin(.113*a.time);a.rot+=.01*Math.sin(.533*a.time);a.rot+=.02*Math.sin(-.323*a.time);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.0072*equal(a.bass_thresh,2)*Math.sin(7*a.time)+\n(1-equal(a.bass_thresh,2))*a.dx_residual;a.dy_residual=.0054*equal(a.bass_thresh,2)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2))*a.dy_residual;","pixel_eqs_str":"a.zoom=.9615+.1*a.rad;a.rot=3*a.rot*(1-pow(2*a.rad-1,2));","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  ) * 0.35));\n  ret_1 = (ret_1 - 0.004);\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.18));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":"float xlat_mutablea;\nfloat xlat_mutableb;\nfloat xlat_mutablec;\n shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = (((\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) + ((texture (sampler_blur2, uv).xyz * scale2) + bias2))\n   + \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) + (texture (sampler_main, uv) * 0.8).xyz) - 0.4);\n  xlat_mutablea = (tmpvar_1.x / 4.0);\n  xlat_mutableb = (tmpvar_1.y / 4.0);\n  xlat_mutablec = (tmpvar_1.z / 4.0);\n  xlat_mutablec = ((xlat_mutablec + xlat_mutableb) - (xlat_mutablec * xlat_mutableb));\n  xlat_mutablea = ((xlat_mutablea + xlat_mutablec) - (xlat_mutablea * xlat_mutablec));\n  vec3 tmpvar_2;\n  tmpvar_2 = vec3((1.4 * xlat_mutablea));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((vec3(4.0, 1.8, -1.6) * (\n    (tmpvar_2 * (1.0 - tmpvar_2))\n   * \n    (1.0 - tmpvar_2)\n  )) + ((tmpvar_2 * tmpvar_2) * vec3(0.1, 0.2, 0.3)));\n  ret = tmpvar_3.xyz;\n }"}