{"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":2.107,"wave_smoothing":0,"wave_mystery":-0.22,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.6,"wave_g":0.5,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"textured":1,"num_inst":5,"x":0.73,"rad":0.29466,"tex_zoom":2.79176,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ampl=0;a.q25=0;a.q22=0;a.q15=0;a.y0=0;a.x0=0;a.k1=0;a.q16=0;a.trig=0;a.q17=0;","frame_eqs_str":"a.trig=a.q25;a.a=a.trig*Math.min(a.bass+a.treb,1);a.a2=0*a.trig;a.x0=a.x0*bnot(a.trig)+div(a.trig*Math.floor(randint(100)),100);a.y0=a.y0*bnot(a.trig)+div(a.trig*Math.floor(randint(100)),100);a.k1=6.28*div(a.instance,a.num_inst);a.ampl=.1*a.q22+.1;a.x0=.5+a.q15*a.ampl*Math.cos(a.k1+a.q17);a.y0=.5+a.q16*a.ampl*Math.sin(a.k1+a.q17);a.tex_ang=div(Math.floor(randint(20)),3);a.rad=.1+div(Math.floor(randint(8)),12);a.x=a.x0;a.y=a.y0;a.r=.7+.3*Math.sin(div(a.time,12));a.b=.7+.3*Math.sin(div(a.time,\n15));a.g=.7+.3*Math.sin(div(a.time,8));a.r2=a.r;a.b2=a.b;a.g2=a.g;"},{"baseVals":{"enabled":1,"sides":32,"num_inst":37,"rad":0.0364,"ang":0.81681,"tex_ang":0.37699,"tex_zoom":1.02841,"g":1,"b":1,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.ampl=0;a.g0=0;a.q15=0;a.trel=0;a.yes=0;a.k1=0;a.bright=0;a.q16=0;a.r0=0;a.q17=0;a.q2=0;a.tmp=0;a.b0=0;a.q8=0;","frame_eqs_str":"a.k1=6.28*div(a.instance,a.num_inst);a.tmp=div(a.q17,32)+.1*a.time;a.trel=a.tmp-Math.floor(a.tmp);a.yes=above(Math.sin(div(a.time,9.5)),0);a.bright=6*a.q2*a.q2*a.yes+.1*Math.min(a.q8,1);a.border_a=a.bright;a.tmp=2*Math.sin(div(a.time,12))-1;a.a=.5*a.yes*pow(2,-18*Math.abs(a.k1-6.28*a.trel))*above(a.tmp,0)*a.tmp*a.tmp;a.ampl=.1;a.rad=.02+0*Math.sin(4*a.k1+a.time);a.x=.5+a.q15*a.ampl*Math.cos(a.k1+a.q17);a.y=.5+a.q16*a.ampl*Math.sin(a.k1+a.q17);a.r0=Math.sin(div(a.time,7));a.g0=\nMath.sin(div(a.time,5));a.b0=Math.sin(div(a.time,9));a.border_r=.8+.2*a.r0;a.border_g=.8+.2*a.g0;a.border_b=.8+.2*a.b0;a.a2=0;"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q1=0;a.trans2=0;a.trans3=0;a.q23=0;","frame_eqs_str":"a.trans=div(Math.floor(randint(Math.floor(a.q1))),5)+a.instance-a.instance;a.trans2=div(Math.floor(randint(Math.floor(a.q1))),5)+a.instance-a.instance;a.trans3=div(Math.floor(randint(Math.floor(a.q1))),5)+a.instance-a.instance;a.a=a.trans;a.x=.3*(Math.sin(a.q23)+1.57)+.004*Math.floor(randint(15))*(a.bass_att+a.treb_att+a.mid_att)*(.00001<Math.abs(equal(Math.floor(randint(2)),1))?1:-1)+a.instance-a.instance;a.y=.3*(Math.cos(a.q23)+1.57)+.004*Math.floor(randint(15))*(a.bass_att+\na.treb_att+a.mid_att)*(.00001<Math.abs(equal(Math.floor(randint(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(randint(Math.floor(a.q1))),15)+a.instance-a.instance;a.r=.1*Math.floor(randint(a.q1))+a.instance-a.instance;a.g=.1*Math.floor(randint(a.q1))+a.instance-a.instance;a.b=.1*Math.floor(randint(a.q1))+a.instance-a.instance;a.r2=.1*Math.floor(randint(a.q1))+a.instance-a.instance;a.g2=.1*Math.floor(randint(a.q1))+a.instance-a.instance;a.b2=.1*Math.floor(randint(a.q1))+a.instance-a.instance;\na.border_r=.1*Math.floor(randint(a.q1))+a.instance-a.instance;a.border_g=.1*Math.floor(randint(a.q1))+a.instance-a.instance;a.border_b=.1*Math.floor(randint(a.q1))+a.instance-a.instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;"}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.04},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.q32=0;a.mo=0;a.q1=0;a.q23=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*above(a.sample,0);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value1,2)*sign(a.value1)*.5;a.mod=a.value1;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:.5*a.sample+.25;a.y=.5*a.sample+.25;a.y=div(a.y-.5,a.q32)+.5;a.x=1-.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.r=.5+.5*Math.sin(.9*a.q23+a.mo);a.g=.5+.5*Math.sin(.89*a.q23+a.mo+1.5472);a.b=.5+.5*Math.sin(.88*a.q23+a.mo+2.8944);"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.04},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.q32=0;a.mo=0;a.q1=0;a.q23=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*below(a.sample,1);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value2,2)*sign(a.value2)*.5;a.mod=a.value2;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:.5*a.sample+.25;a.y=.5*a.sample+.25;a.y=div(a.y-.5,a.q32)+.5;a.x=.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.r=.5+.5*Math.sin(.95*a.q23+a.mo);a.g=.5+.5*Math.sin(.96*a.q23+a.mo+1.5472);a.b=.5+.5*Math.sin(.97*a.q23+a.mo+2.8944);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.sw2=0;a.index2=0;a.q25=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.q13=0;a.sw3=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.mindev=0;a.mq21=0;a.mq24=0;a.trel=0;a.q9=0;a.t0a=0;a.chng=0;a.mq28=0;a.itrel=0;a.my=0;a.mq23=0;a.is_beat=0;a.q31=0;a.q23=0;a.q24=0;a.dec_slow=0;a.q11=0;a.q10=0;a.sdev=0;a.ma=0;a.atime=0;a.mq30=0;a.q4=0;a.spb=0;a.spb_=0;a.q16=0;a.q26=0;a.avg=0;a.mq27=0;a.mq25=0;a.mx=0;a.q19=0;a.mq22=0;a.beat=0;a.q17=0;a.vol=0;a.trel2=\n0;a.peak=0;a.mq26=0;a.jmp=0;a.itrel_=0;a.q2=0;a.q27=0;a.q14=0;a.sw1=0;a.tmp=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;a.avg=1;a.index=Math.floor(randint(8));a.index2=Math.floor(randint(8));a.ran=1;a.spb_=.3;a.sdev=.1;a.trel2=div(randint(100),100);","frame_eqs_str":"a.vol=a.bass+a.treb+a.mid;a.q1=Math.max(1,Math.min(5.5,1.15*a.vol));a.atime+=a.vol;a.q23=.02*a.atime;a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.98,div(30,a.fps));a.beat=a.bass+a.mid+a.treb;a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),12);\na.spb=Math.min(a.t0-a.t0a+.01,2);a.t0a=a.t0;a.spb_=.00001<Math.abs(a.is_beat)?.9*a.spb_+.1*a.spb:a.spb_;a.mindev=Math.min(Math.min(Math.abs(a.spb-a.spb_),Math.abs(2*a.spb-a.spb_)),Math.abs(a.spb-2*a.spb_));a.sdev=.00001<Math.abs(a.is_beat)?.9*a.sdev+.1*pow(a.mindev+.02,2):a.sdev;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak+.1;a.q24=a.is_beat;a.q27=a.index;a.q28=a.index2;a.trel+=4*div(div(1,a.fps),a.spb_);a.itrel=Math.floor(a.trel);a.q25=above(a.itrel,a.itrel_);a.q30=mod(a.itrel,2);a.itrel_=a.itrel;a.q31=\na.itrel;a.ma+=div(a.peak,a.fps);a.mx=a.mx*a.dec_med+(1-a.dec_med)*Math.cos(a.ma);a.my=a.my*a.dec_med+(1-a.dec_med)*Math.sin(a.ma+div(a.trel,16));a.q15=a.mx;a.q16=a.my;a.q17=a.ma;a.sw1=.00001<Math.abs(a.sw1)?bnot(a.q24*bnot(Math.floor(randint(20)))):a.q24*bnot(Math.floor(randint(20)));a.sw2=.00001<Math.abs(a.sw2)?bnot(a.q24*bnot(Math.floor(randint(10)))):a.q24*bnot(Math.floor(randint(80)));a.sw3=.00001<Math.abs(a.sw3)?bnot(a.q24*bnot(Math.floor(randint(10)))):a.q24*bnot(Math.floor(randint(100+1E4*\na.sdev)));a.q6=Math.sin(div(a.time,15))*Math.sin(div(a.time,27))*.2;a.q10=Math.sin(div(a.time,8));a.q10=a.q10*a.q10*.1;a.q11=1.5+Math.sin(div(a.time,7.8));a.q12=.00001<Math.abs(below(a.sdev,.015)*bnot(a.q8))?a.q25:1;a.q13=.5+Math.sin(div(a.time,17));a.q19=.2*Math.sin(div(a.time,5.3));a.q3=a.sw1;a.q4=div(.02,a.sdev);a.q5=.4*Math.max(Math.min(4*Math.sin(div(a.trel,64))-3,1),0);a.q7=below(a.sdev,.004)*mod(a.index2,2);a.q2=Math.abs(a.q19)*sqrt(a.q15*a.q15+a.q16*a.q16);a.trel2+=div(.003*a.q22*a.q22,a.fps);\na.tmp=Math.sin(a.trel2);a.tmp=20*a.tmp-19;a.q8=a.tmp*above(a.tmp,0)*(div(4,Math.max(a.q22-4,.2))+4);a.q26=above(a.q22,12)*(a.q22-12)*2;a.tmp=div(a.index2,6);a.q14=6*Math.abs(a.tmp-Math.floor(a.tmp)-.5)+1;a.tmp=Math.sin(3.14*div(a.trel,4));a.jmp+=8*div(above(a.tmp,.5)*a.tmp,a.fps)*a.sw2;a.q9=a.jmp*equal(a.q14,1)*below(a.sdev,.04)+a.time*above(Math.sin(div(a.q17,23)),.9);a.q18=a.tmp*bnot(a.q8)*a.sw3;a.monitor=a.sw1;a.rot=.003;a.warp=0;a.zoom=1+div(a.avg-Math.log(a.sdev),200);a.q32=a.aspecty;a.monitor=\na.vol;a.chng=Math.sin(.5*a.time);a.cthr=.99;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?randint(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?randint(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?randint(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?randint(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*randint(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*randint(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;","pixel_eqs_str":"","pixel_eqs":"","warp":"mat2 ofs;\nfloat xlat_mutablenoise;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\nfloat xlat_mutablezv;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = q15;\n  tmpvar_1.y = q16;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)].x = texsize.z;\n  tmpvar_2[uint(0)].y = 0.0;\n  tmpvar_2[1u].x = 0.0;\n  tmpvar_2[1u].y = texsize.w;\n  ofs = (tmpvar_2 * 2.0);\n  vec3 ret_3;\n  xlat_mutableuv1 = (uv - 0.5);\n  vec2 v_4;\n  v_4.x = ofs[0].x;\n  v_4.y = ofs[1].x;\n  vec2 v_5;\n  v_5.x = ofs[0].x;\n  v_5.y = ofs[1].x;\n  vec2 v_6;\n  v_6.x = ofs[0].y;\n  v_6.y = ofs[1].y;\n  vec2 v_7;\n  v_7.x = ofs[0].y;\n  v_7.y = ofs[1].y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = (texture (sampler_main, (uv + v_4)) - texture (sampler_main, (uv - v_5))).z;\n  tmpvar_8.y = (texture (sampler_main, (uv + v_6)) - texture (sampler_main, (uv - v_7))).z;\n  xlat_mutablezv = (time * 0.1);\n  xlat_mutableuv2 = ((q11 * xlat_mutableuv1) + (0.04 * time));\n  vec3 tmpvar_9;\n  tmpvar_9.xy = xlat_mutableuv2;\n  tmpvar_9.z = xlat_mutablezv;\n  vec3 tmpvar_10;\n  tmpvar_10.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\n  tmpvar_10.z = (xlat_mutablezv * 2.0);\n  vec3 tmpvar_11;\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\n  tmpvar_11.z = (xlat_mutablezv * 3.0);\n  vec3 tmpvar_12;\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\n  tmpvar_12.z = (xlat_mutablezv * 7.0);\n  xlat_mutablenoise = (((\n    (texture (sampler_noisevol_hq, tmpvar_9).z + (texture (sampler_noisevol_hq, tmpvar_10).z / 2.0))\n   + \n    (texture (sampler_noisevol_hq, tmpvar_11).z / 4.0)\n  ) + (texture (sampler_noisevol_hq, tmpvar_12).z / 8.0)) - 1.0);\n  float tmpvar_13;\n  tmpvar_13 = pow (xlat_mutablenoise, q13);\n  xlat_mutablenoise = tmpvar_13;\n  xlat_mutableuv2 = ((xlat_mutableuv1 * (1.0 + \n    (0.5 * q2)\n  )) + (tmpvar_13 * 0.1));\n  float tmpvar_14;\n  tmpvar_14 = (((texture (sampler_blur3, \n    ((xlat_mutableuv1 / 4.0) + 0.5)\n  ).xyz * scale3) + bias3) + 0.2).x;\n  vec2 x_15;\n  x_15 = (xlat_mutableuv2 - (tmpvar_1 * q19));\n  ret_3 = ((q12 * (\n    ((((\n      clamp ((0.0005 / abs((\n        sqrt(dot (x_15, x_15))\n       - \n        (q10 / q22)\n      ))), 0.0, 1.0)\n     * \n      (0.5 + normalize(roam_cos))\n    .xyz) / tmpvar_14) + (texture (sampler_main, (\n      (xlat_mutableuv1 + 0.5)\n     + \n      (q6 * tmpvar_8)\n    )) * 0.98).xyz) - 0.01)\n   - \n    (tmpvar_14 * 0.1)\n  )) + ((1.0 - q12) * texture (sampler_main, uv).xyz));\n  vec4 tmpvar_16;\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * roam_cos.y)) && (ret_3.x <= (q24 * roam_sin.x)))) {\n    ret_3.y = (ret_3.y - (tmpvar_16.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * roam_sin.x)) && (ret_3.y <= (q25 * roam_cos.x)))) {\n    ret_3.z = (ret_3.z - (tmpvar_16.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * roam_cos.x)) && (ret_3.z <= (q26 * roam_sin.y)))) {\n    ret_3.x = (ret_3.x - (tmpvar_16.z * 0.5));\n  };\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_3;\n  ret = tmpvar_17.xyz;\n }","comp":"float xlat_mutableang2;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((0.1 / rad) * q15);\n  tmpvar_3.y = ((ang * 0.2) * q22);\n  uv_1 = (uv_1 / (1.0 + (q8 * \n    sqrt(dot (uv_1, uv_1))\n  )));\n  uv_1 = (uv_1 * (1.0 - (\n    (float(mod (q28, 2.0)))\n   / 4.0)));\n  uv_1 = (uv_1 * (1.0 + (\n    (q5 * texture (sampler_noise_mq, tmpvar_3).x)\n   * rad)));\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  xlat_mutableang2 = ((1.57 * q14) + ((q28 * 3.14) / 4.0));\n  float tmpvar_4;\n  tmpvar_4 = cos(xlat_mutableang2);\n  float tmpvar_5;\n  tmpvar_5 = sin(xlat_mutableang2);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_4) - (uv_1.y * tmpvar_5));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_5) + (uv_1.y * tmpvar_4));\n  xlat_mutableuv2 = (xlat_mutableuv2 / (1.0 + (q26 * \n    sqrt(dot (uv_1, uv_1))\n  )));\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (0.5 * q18)));\n  if ((q3 == 1.0)) {\n    xlat_mutableuv2 = xlat_mutableuv2.yx;\n  };\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\n  float tmpvar_6;\n  tmpvar_6 = (q28 * 3.14);\n  xlat_mutableang2 = ((3.14 * q14) + (tmpvar_6 / 4.0));\n  float tmpvar_7;\n  tmpvar_7 = cos(xlat_mutableang2);\n  float tmpvar_8;\n  tmpvar_8 = sin(xlat_mutableang2);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (-0.5 * q18)));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\n  xlat_mutableang2 = ((4.71 * q14) + (tmpvar_6 / 4.0));\n  float tmpvar_9;\n  tmpvar_9 = cos(xlat_mutableang2);\n  float tmpvar_10;\n  tmpvar_10 = sin(xlat_mutableang2);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\n  xlat_mutableuv2 = (xlat_mutableuv2 / (1.0 + (q26 * \n    sqrt(dot (uv_1, uv_1))\n  )));\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (0.5 * q18)));\n  if ((q3 == 1.0)) {\n    xlat_mutableuv2 = xlat_mutableuv2.yx;\n  };\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\n  xlat_mutableang2 = ((6.28 * q14) + ((q28 * 3.14) / 4.0));\n  float tmpvar_11;\n  tmpvar_11 = cos(xlat_mutableang2);\n  float tmpvar_12;\n  tmpvar_12 = sin(xlat_mutableang2);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (-0.5 * q18)));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\n  xlat_mutableret1 = (xlat_mutableret1 * ((1.0 - q7) + (\n    (q7 * q25)\n   / 2.0)));\n  ret_2 = (1.0 - exp((\n    -(xlat_mutableret1)\n   * 4.0)));\n  vec3 tmpvar_13;\n  tmpvar_13 = pow (ret_2, vec3(1.5, 1.5, 1.5));\n  vec3 tmpvar_14;\n  tmpvar_14 = mix (vec3(dot (tmpvar_13, vec3(0.32, 0.49, 0.29))), tmpvar_13, vec3(clamp ((q20 / 3.0), 0.0, 1.0)));\n  ret_2 = tmpvar_14;\n  vec4 tmpvar_15;\n  tmpvar_15 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((tmpvar_14.x > (q26 * roam_cos.y)) && (tmpvar_14.x <= (q23 * roam_sin.x)))) {\n    ret_2.z = (tmpvar_14.z - (tmpvar_15.x * 0.5));\n  };\n  if (((tmpvar_14.y > (q25 * roam_sin.x)) && (tmpvar_14.y <= (q22 * roam_cos.x)))) {\n    ret_2.x = (tmpvar_14.x - (tmpvar_15.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * roam_cos.x)) && (ret_2.z <= (q21 * roam_sin.y)))) {\n    ret_2.y = (tmpvar_14.y - (tmpvar_15.z * 0.5));\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }"}