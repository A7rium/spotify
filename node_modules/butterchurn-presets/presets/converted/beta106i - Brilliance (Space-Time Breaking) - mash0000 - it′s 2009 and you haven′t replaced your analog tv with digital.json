{"baseVals":{"rating":0,"gammaadj":1.21,"decay":0.97,"echo_zoom":1,"echo_alpha":0.5,"additivewave":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":100,"wave_scale":2.63,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.thresh=0;a.dx_r=0;a.dy_r=0;","frame_eqs_str":"a.wave_r=.5+.5*Math.sin(6*a.time);a.wave_g=.5+.5*Math.sin(4.1*a.time);a.wave_b=-1+(1-a.wave_r+1-a.wave_g);a.warp=0;a.ob_r=1-Math.abs(a.wave_r);a.ob_b=1-Math.abs(a.wave_b);a.ob_g=1-Math.abs(a.wave_g);a.ib_r=1-Math.abs(a.ob_r);a.ib_g=1-Math.abs(a.ob_g);a.ib_b=1-Math.abs(a.ob_b);a.ob_a-=Math.sin(a.time);a.ib_a-=Math.cos(a.time);","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom-=.03;a.dy+=2*a.dy_r*Math.cos(Math.sin(1.2*Math.cos(2.7*a.time)*(.5-a.x))*a.y)*8*a.dx_r*Math.sin(1.02*a.time);a.dx+=2*a.dx_r*Math.sin(Math.cos(1.32*Math.sin(1.24*a.time)*(.5-a.y))*a.x)*8*a.dy_r*Math.cos(1.2*a.time);a.sx-=12*\na.dx_r*Math.cos(Math.sin(1.1*Math.sin(2.87*a.time)*1.5*a.rad)*a.rad)*12*a.dx_r*Math.tan(.8*a.x*a.time);a.sy-=12*a.dy_r*Math.sin(Math.sin(.67*Math.cos(1.12*a.time)*1.5*a.rad)*a.rad)*12*a.dy_r*Math.tan(.9*a.y*a.time);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 112.0));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":""}