{"baseVals":{"rating":5,"gammaadj":1,"decay":0.95,"echo_zoom":1,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_a":0.478,"wave_scale":0.06,"wave_smoothing":0.9,"wave_mystery":-0.2,"modwavealphastart":0.39,"modwavealphaend":1.18,"warpscale":0.01,"zoomexp":1.64462,"zoom":1.07163,"warp":0.10059,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ib_size":0,"mv_x":4.48,"mv_y":4.32,"mv_l":0.05,"mv_g":0.2,"mv_b":0.2,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.15,"y":0.82,"rad":1.49765,"tex_zoom":0.36971,"g":0.4,"r2":1,"border_a":0},"init_eqs_str":"a.ra=0;a.ra=0;a.ra=0;","frame_eqs_str":"a.ra-=.01*a.bass_att;a.ang=a.ra;a.x=Math.abs(Math.sin(.1*a.time));a.y=Math.abs(Math.cos(.3*(a.time+.2)));"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.83,"y":0.82,"rad":1.49766,"tex_zoom":0.36971,"b":0.5,"g2":0.6,"b2":0.7,"border_a":0},"init_eqs_str":"a.ra=0;a.ra=0;a.ra=0;","frame_eqs_str":"a.ra+=.025*a.treb_att;a.ang=a.ra;a.x=Math.abs(Math.sin(.2*a.time));a.y=Math.abs(Math.cos(.7*a.time));"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.27,"y":0.2,"rad":1.3291,"tex_zoom":0.40839,"r":0.4,"g":0.8,"r2":1,"g2":0.2,"border_a":0},"init_eqs_str":"a.ra=0;a.ra=0;a.ra=0;","frame_eqs_str":"a.ra+=.00001<Math.abs(above(a.treb,.5))?.03*a.treb:.01;a.ang=a.ra;a.rad+=.1*a.treb_att;a.y=Math.abs(Math.sin(.23*a.time));a.x=Math.abs(Math.cos(.7*a.time));"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.75,"y":0.25,"rad":1.46815,"tex_zoom":0.40839,"g":0.9,"b2":1,"border_a":0},"init_eqs_str":"a.ra=0;a.ra=0;a.ra=0;","frame_eqs_str":"a.ra-=.00001<Math.abs(above(a.bass,1.3))?.02*a.bass:.01;a.ang=a.ra;a.rad+=.1*a.bass_att;a.x=Math.abs(Math.sin(.25*a.time));"}],"waves":[{"baseVals":{"enabled":1,"additive":1,"scaling":0.74192,"smoothing":0,"a":0.02},"init_eqs_str":"a.q3=0;","frame_eqs_str":"","point_eqs_str":"a.q3=bnot(a.q3);a.x=.5+equal(a.q3,0)*(Math.floor(randint(50))-25)*.02;a.y=.5+equal(a.q3,0)*(Math.floor(randint(50))-25)*.02;"},{"baseVals":{"enabled":1,"samples":62,"additive":1,"a":0.2},"init_eqs_str":"a.cd=0;a.c=0;","frame_eqs_str":"","point_eqs_str":"a.r=.05*a.bass;a.cd+=.001;a.c=.62831854*Math.floor(randint(10));a.c+=a.cd;a.x=.5+Math.cos(a.c)*a.r;a.y=.5+Math.sin(a.c)*a.r;a.r=Math.abs(Math.sin(.77*a.time));a.g=.5*a.treb;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.vol=0;a.q2=0;","frame_eqs_str":"a.vol=Math.min(div(5*a.bass+3*a.mid_att+2*a.treb,10)+.15,2.15);a.wave_r=a.wave_r+.05*Math.sin(3.23*a.time)+.05*Math.sin(.46*a.time);a.wave_g=a.wave_g+.2*Math.sin(2.71*a.time)+.05*Math.sin(.76*a.time);a.wave_b=a.wave_b+.15*Math.sin(1.132*a.time)+.05*Math.sin(.546*a.time);a.wave_g=.00001<Math.abs(below(a.wave_r+a.wave_g+a.wave_b,.1))?a.wave_g+.5:a.wave_g;a.wave_x+=.03*a.vol*Math.sin(.727*a.time);a.wave_y+=.04*a.vol*Math.sin(.777*a.time);a.zoom=.3*a.vol+.06*Math.sin(.54*a.time)+\n.97;a.dx+=.0075*Math.sin(1.23*a.time);a.dy+=.0075*Math.sin(1.43*a.time);a.rot+=.05*Math.sin(a.time);a.q2=a.bass+a.treb+a.mid;","pixel_eqs_str":"a.zoom-=.9*a.rad;","warp":"uniform sampler2D sampler_prayerwheel;\n shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  ).xyz - 0.5) / 256.0));\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_prayerwheel, uv_orig);\n  vec2 x_3;\n  x_3 = (uv - uv_orig);\n  ret_1 = (mix (ret_1, tmpvar_2.xyz, vec3(clamp (\n    (1.0 - (abs((\n      dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29))\n     - \n      fract((((bass + mid) + treb) * 0.2))\n    )) * 33.0))\n  , 0.0, 1.0))) * (0.97 + (0.03 * \n    clamp ((sqrt(dot (x_3, x_3)) * 200.0), 0.0, 1.0)\n  )));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_3.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (tmpvar_5, ((\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\n   + \n    (0.1 * ((texture (sampler_blur1, (\n      (tmpvar_4 * 1.25)\n     - 0.125)).xyz * scale1) + bias1))\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\n  vec3 x_7;\n  x_7 = (tmpvar_6 - 0.5);\n  ret_1 = (tmpvar_6 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\n  ret_1 = (ret_1 * (ret_1 * 0.45));\n  ret_1 = (ret_1 * mix (ret_1, (\n    (1.3 * ret_1)\n   * \n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\n  ), pow (hue_shader.zxy, \n    (q2 * (1.0 - ret_1))\n  )));\n  ret_1 = (ret_1 + 0.05);\n  ret_1 = (ret_1 * (1.1 * ret_1));\n  ret_1 = (ret_1 * ((hue_shader * 4.0) - 2.75));\n  ret_1 = (ret_1 * (3.5 - (0.5 * \n    clamp (ret_1, 0.0, 1.0)\n  )));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }"}