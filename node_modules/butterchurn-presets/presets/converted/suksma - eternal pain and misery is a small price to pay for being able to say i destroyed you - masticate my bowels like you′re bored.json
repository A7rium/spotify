{"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":2,"additivewave":1,"wave_dots":1,"darken_center":1,"wave_a":4.696,"wave_scale":1.497,"wave_smoothing":0.88,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.7,"wave_g":0.7,"wave_b":0.7,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.runtreb=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.thresh=0;a.q1=0;a.q5=0;a.vb=0;a.q9=0;a.dy_r=0;a.pi23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.q4=0;a.dx_r=0;a.q16=0;a.q26=0;a.runbass=0;a.q19=0;a.q17=0;a.runmids=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass_att,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid_att,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb_att,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=10*(a.vvb+a.vvm+a.vvt);a.q2=10*(a.vvb+a.vvm+a.vvt);a.q3=10*(a.vvb+a.vvm+a.vvt);a.q4=10*(a.vvb+a.vvm+a.vvt);a.q5=10*(a.vvb+a.vvm+\na.vvt);a.q6=10*(a.vvb+a.vvm+a.vvt);a.q7=10*(a.vvb+a.vvm+a.vvt);a.runbass+=a.vvb;a.runmids+=a.vvm;a.runtreb+=a.vvt;a.pi23=1.33333333333332*Math.asin(-1);a.atime=.05*(a.runtreb+a.runmids+a.runbass);a.q8=.5*(Math.sin(a.atime-0*a.pi23)+1);a.q9=.5*(Math.sin(a.atime-1*a.pi23)+1);a.q10=.5*(Math.sin(a.atime-2*a.pi23)+1);a.q11=10*(a.vvb+a.vvm+a.vvt);a.q12=10*(a.vvb+a.vvm+a.vvt);a.q13=10*(a.vvb+a.vvm+a.vvt);a.q14=10*(a.vvb+a.vvm+a.vvt);a.q15=10*(a.vvb+a.vvm+a.vvt);a.q16=10*(a.vvb+a.vvm+a.vvt);a.q17=10*(a.vvb+\na.vvm+a.vvt);a.q18=10*(a.vvb+a.vvm+a.vvt);a.q19=10*(a.vvb+a.vvm+a.vvt);a.q20=10*(a.vvb+a.vvm+a.vvt);a.q21=10*(a.vvb+a.vvm+a.vvt);a.q22=10*(a.vvb+a.vvm+a.vvt);a.q23=10*(a.vvb+a.vvm+a.vvt);a.q24=10*(a.vvb+a.vvm+a.vvt);a.q25=10*(a.vvb+a.vvm+a.vvt);a.q26=10*(a.vvb+a.vvm+a.vvt);a.q27=10*(a.vvb+a.vvm+a.vvt);a.q28=10*(a.vvb+a.vvm+a.vvt);a.q29=10*(a.vvb+a.vvm+a.vvt);a.q30=10*(a.vvb+a.vvm+a.vvt);a.q31=10*(a.vvb+a.vvm+a.vvt);a.q32=10*(a.vvb+a.vvm+a.vvt);a.wave_r=a.wave_r+.25*Math.sin(1.4*a.time)+.25*Math.sin(2.25*\na.time);a.wave_g=a.wave_g+.25*Math.sin(1.7*a.time)+.25*Math.sin(2.11*a.time);a.wave_b=a.wave_b+.25*Math.sin(1.84*a.time)+.25*Math.sin(2.3*a.time);a.warp=0;a.wave_y+=.25*Math.sin(a.time);a.wave_x+=.25*Math.cos(a.time);","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom+=.01;a.rot+=5*above(a.x,.45+.35*Math.sin(a.time))*below(a.x,.55+.35*Math.sin(a.time));a.rot+=5*below(a.y,.45+.35*Math.cos(.9*a.time))*below(a.y,.55+.35*Math.cos(.9*a.time));","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.01))).xyz + ((\n    (texture (sampler_noise_lq, ((uv_orig * 4.0) + rand_frame.xy)) * 2.0)\n   - 1.0) * 0.02).xyz);\n  float vec_y_2;\n  vec_y_2 = (uv_orig.y - 0.5);\n  float vec_x_3;\n  vec_x_3 = (uv_orig.x - 0.5);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0) / max (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((vec_y_2 / vec_x_3)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((vec_y_2 / vec_x_3)));\n  if ((abs(vec_x_3) > (1e-08 * abs(vec_y_2)))) {\n    if ((vec_x_3 < 0.0)) {\n      if ((vec_y_2 >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(vec_y_2) * 1.570796);\n  };\n  ret_1 = (ret_1 + (cos(\n    ((tmpvar_4 * 17.0) + (time * 12.0))\n  ) * 0.15));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers2;\n shader_body { \n  vec2 uv_1;\n  float inten_3;\n  float dist_4;\n  dist_4 = 1.0;\n  inten_3 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * (aspect.xy * 1.9));\n  for (float n_2 = 0.0; n_2 <= 2.0; n_2 += 1.0) {\n    vec2 uv3_5;\n    float tmpvar_6;\n    tmpvar_6 = (float(mod (n_2, 3.0)));\n    if ((tmpvar_6 == 0.0)) {\n      dist_4 = (1.0 - fract((\n        (0.5 * n_2)\n       + q30)));\n    } else {\n      float tmpvar_7;\n      tmpvar_7 = (float(mod (n_2, 3.0)));\n      if ((tmpvar_7 == 1.0)) {\n        dist_4 = (1.0 - fract((\n          (0.5 * n_2)\n         + q31)));\n      } else {\n        dist_4 = (1.0 - fract((\n          (0.5 * n_2)\n         + q32)));\n      };\n    };\n    inten_3 = ((dist_4 * (1.0 - dist_4)) * 3.0);\n    uv3_5 = vec2(0.0, 0.0);\n    float tmpvar_8;\n    tmpvar_8 = (float(mod (n_2, 3.0)));\n    if ((tmpvar_8 == 0.0)) {\n      vec2 tmpvar_9;\n      tmpvar_9.y = 0.0;\n      tmpvar_9.x = (q15 + (dist_4 / 3.0));\n      uv3_5 = fract(((\n        ((1.5 * uv_1) * dist_4)\n       + q18) + tmpvar_9));\n    } else {\n      float tmpvar_10;\n      tmpvar_10 = (float(mod (n_2, 3.0)));\n      if ((tmpvar_10 == 1.0)) {\n        vec2 tmpvar_11;\n        tmpvar_11.y = 0.0;\n        tmpvar_11.x = (q18 + (dist_4 / 3.0));\n        uv3_5 = fract(((\n          ((1.5 * uv_1) * dist_4)\n         + q15) + tmpvar_11));\n      } else {\n        vec2 tmpvar_12;\n        tmpvar_12.y = 0.0;\n        tmpvar_12.x = (q20 + (dist_4 / 3.0));\n        uv3_5 = fract(((\n          ((1.5 * uv_1) * dist_4)\n         + q21) + tmpvar_12));\n      };\n    };\n    vec2 tmpvar_13;\n    tmpvar_13 = abs((fract(\n      (uv3_5 + 0.5)\n    ) - 0.5));\n    uv3_5 = tmpvar_13;\n    xlat_mutableneu = (texture (sampler_main, tmpvar_13).xyz - (0.7 * (\n      (texture (sampler_blur3, (tmpvar_13 * 1.05)).xyz * scale3)\n     + bias3)));\n    xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_3));\n  };\n  xlat_mutablers2 = ((0.3 * sin(\n    ((uv_1 * 4.0) + q15)\n  )) - dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29)));\n  vec3 tmpvar_14;\n  tmpvar_14.x = q8;\n  tmpvar_14.y = q9;\n  tmpvar_14.z = q10;\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = (((q1 + 0.5) * xlat_mutableret1) + ((\n    ((0.05 / sqrt(dot (xlat_mutablers2, xlat_mutablers2))) * q26)\n   * 0.5) * tmpvar_14));\n  ret = tmpvar_15.xyz;\n }"}