{"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_brighten":0,"darken":1,"wave_a":0.002,"wave_scale":0.14,"wave_smoothing":0,"wave_mystery":-0.84,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0.6,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":23,"rad":0.19788,"tex_ang":0.62832,"tex_zoom":0.0402,"g":1,"b":1,"a":0.9,"r2":0.9,"b2":1,"a2":0.3,"border_a":0},"init_eqs_str":"a.k1=0;a.q27=0;a.q27=0;a.q27=0;a.q27=0;a.q27=0;a.q22=0;","frame_eqs_str":"a.a=.3;a.a2=0;a.k1=6.28*div(a.instance,a.num_inst);a.x=.5+.25*Math.cos(div(6.28*a.q27,4));a.y=.5+.25*Math.sin(div(6.28*a.q27,4));a.r=.5+.5*Math.sin(a.time+div(6.28*a.q27,3));a.g=.5+.5*Math.sin(div(a.time,2)+div(6.28*(a.q27+1),3));a.b=.5+.5*Math.sin(div(a.time,3)+div(6.28*(a.q27+2),3));a.rad=div(a.q22,18);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.index2=0;a.index=0;a.q12=0;a.q18=0;a.t1=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.movz=0;a.trel=0;a.q9=0;a.v=0;a.rott=0;a.mm=0;a.tt=0;a.t3=0;a.bm=0;a.vol__=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.trel_=0;a.vx=0;a.dec_slow=0;a.q11=0;a.q10=0;a.vy=0;a.q4=0;a.dir=0;a.dir_=0;a.q16=0;a.p2=0;a.mt=0;a.avg=0;a.trig=0;a.mx=0;a.mn=0;a.q19=0;a.beat=0;a.t2=0;a.q17=0;a.vol=0;a.p1=0;a.peak=0;a.dec_fast=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.t0=0;a.vol_=0;a.q7=\n0;a.q28=0;a.q20=0;a.q8=0;a.step=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.96,div(30,a.fps));a.dec_fast=pow(.6,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,0+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q24=a.is_beat;\na.vol=a.bass_att+a.mid_att+a.treb_att;a.vol_=a.dec_med*a.vol_+(1-a.dec_med)*a.vol;a.vol__=a.dec_med*a.vol__+(1-a.dec_med)*a.vol_;a.q27=a.index+1;a.q28=a.index2+1;a.q23=a.q22-div(.1,a.q22);a.q23=Math.max(a.q23,1);a.k1=a.is_beat*equal(mod(a.index,8),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_fast*a.p2+(1-a.dec_fast)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.trig=a.q24*bnot(mod(a.index,2));a.vx=a.vx*bnot(a.trig)+a.trig*(div(randint(100),100)-\n.5);a.vy=a.vy*bnot(a.trig)+a.trig*(div(randint(100),100)-.5);a.q10=.2+a.vy*a.vy*2;a.q11=div(Math.sin(div(a.time,9)),2)+.4;a.movz-=div(1,a.fps)*(.3+a.vx);a.q9=a.movz;a.q12=2*Math.min(a.q22,6);a.q13=Math.min(2,1+Math.abs(8*a.vy*a.vx));a.dir_=a.bass-1;a.trig=bnot(mod(a.index,4))*a.q24;a.dir=bnot(a.trig)*a.dir+a.trig*(randint(10)-5);a.trel+=div(.1,a.fps)*a.dir;a.trel_=a.dec_med*a.trel_+(1-a.dec_med)*a.trel;a.q5=Math.cos(a.trel_);a.q6=Math.sin(a.trel_+0*a.q27*mod(a.q28,2));a.q7=-a.q6;a.q8=a.q5;a.zoom=\n1.02;a.rot=.5*Math.sin(bnot(mod(a.q28,2))*a.q28);a.rot=0*Math.sin(div(a.time,3));a.dx=0;a.monitor=a.q11;a.bb=.99*a.bb+.02*a.bass;a.mm=.99*a.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.t1=div(a.bb-a.mn,a.mx-a.mn);a.t2=div(a.mm-a.mn,a.mx-a.mn);a.t3=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.15,a.fps);a.bm+=(a.t1-a.t2)*a.v;a.mt+=(a.t2-a.t3)*a.v;a.q14=1;a.q15=0;a.q16=-1;a.q17=0;a.q18=-a.bm;a.q19=a.mt;","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec2 uv6_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv1_2 = (tmpvar_3 + ((-0.01 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv1_2 = (uv1_2 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((0.5 * (\n    ((texture (sampler_main, ((uv1_2 * \n      (0.8 + (0.2 * tmpvar_5))\n    ) + 0.5)).xyz + (vec3((0.01 / \n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\n    )) * (0.3 * \n      (1.0 + roam_cos)\n    ).xyz)) * 0.96)\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_7.xyz;\n }","comp":"vec2 xlat_mutablec2;\nvec2 xlat_mutabledenominator;\nvec2 xlat_mutablefraction;\nvec3 xlat_mutableneu;\nvec2 xlat_mutablenumerator;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablerss;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 ofs_2;\n  vec3 ret1_3;\n  xlat_mutablec2 = (((uv - 0.5) * 2.0) * aspect.wz);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q14;\n  tmpvar_4.y = q15;\n  xlat_mutablenumerator = ((xlat_mutablec2 + tmpvar_4) * 64.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q16;\n  tmpvar_5.y = q17;\n  xlat_mutabledenominator = (xlat_mutablec2 + tmpvar_5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_6.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  xlat_mutablefraction = (tmpvar_6 / ((xlat_mutabledenominator.x * xlat_mutabledenominator.x) + (xlat_mutabledenominator.y * xlat_mutabledenominator.y)));\n  xlat_mutablec2 = (xlat_mutablefraction - 0.5);\n  float tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (min (abs(\n    (xlat_mutablec2.x / xlat_mutablec2.y)\n  ), 1.0) / max (abs(\n    (xlat_mutablec2.x / xlat_mutablec2.y)\n  ), 1.0));\n  float tmpvar_9;\n  tmpvar_9 = (tmpvar_8 * tmpvar_8);\n  tmpvar_9 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n     * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n   * tmpvar_9) + 0.9999793) * tmpvar_8);\n  tmpvar_9 = (tmpvar_9 + (float(\n    (abs((xlat_mutablec2.x / xlat_mutablec2.y)) > 1.0)\n  ) * (\n    (tmpvar_9 * -2.0)\n   + 1.570796)));\n  tmpvar_7 = (tmpvar_9 * sign((xlat_mutablec2.x / xlat_mutablec2.y)));\n  if ((abs(xlat_mutablec2.y) > (1e-08 * abs(xlat_mutablec2.x)))) {\n    if ((xlat_mutablec2.y < 0.0)) {\n      if ((xlat_mutablec2.x >= 0.0)) {\n        tmpvar_7 += 3.141593;\n      } else {\n        tmpvar_7 = (tmpvar_7 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_7 = (sign(xlat_mutablec2.x) * 1.570796);\n  };\n  vec2 tmpvar_10;\n  tmpvar_10.x = ((0.3183098 * tmpvar_7) + q18);\n  tmpvar_10.y = (((0.3 * aspect.w) * log(\n    sqrt(dot (xlat_mutablec2, xlat_mutablec2))\n  )) + q19);\n  uv_1 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_10 * 0.5)) * 2.0) - 1.0)\n  )));\n  xlat_mutablec2 = (((uv_1 - 0.5) * 2.0) * aspect.wz);\n  vec2 tmpvar_11;\n  tmpvar_11.x = q14;\n  tmpvar_11.y = q15;\n  xlat_mutablenumerator = ((xlat_mutablec2 + tmpvar_11) * 64.0);\n  vec2 tmpvar_12;\n  tmpvar_12.x = q16;\n  tmpvar_12.y = q17;\n  xlat_mutabledenominator = (xlat_mutablec2 + tmpvar_12);\n  vec2 tmpvar_13;\n  tmpvar_13.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_13.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  xlat_mutablefraction = (tmpvar_13 / ((xlat_mutabledenominator.x * xlat_mutabledenominator.x) + (xlat_mutabledenominator.y * xlat_mutabledenominator.y)));\n  xlat_mutablec2 = (xlat_mutablefraction - 0.5);\n  float tmpvar_14;\n  float tmpvar_15;\n  tmpvar_15 = (min (abs(\n    (xlat_mutablec2.x / xlat_mutablec2.y)\n  ), 1.0) / max (abs(\n    (xlat_mutablec2.x / xlat_mutablec2.y)\n  ), 1.0));\n  float tmpvar_16;\n  tmpvar_16 = (tmpvar_15 * tmpvar_15);\n  tmpvar_16 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\n     * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\n   * tmpvar_16) + 0.9999793) * tmpvar_15);\n  tmpvar_16 = (tmpvar_16 + (float(\n    (abs((xlat_mutablec2.x / xlat_mutablec2.y)) > 1.0)\n  ) * (\n    (tmpvar_16 * -2.0)\n   + 1.570796)));\n  tmpvar_14 = (tmpvar_16 * sign((xlat_mutablec2.x / xlat_mutablec2.y)));\n  if ((abs(xlat_mutablec2.y) > (1e-08 * abs(xlat_mutablec2.x)))) {\n    if ((xlat_mutablec2.y < 0.0)) {\n      if ((xlat_mutablec2.x >= 0.0)) {\n        tmpvar_14 += 3.141593;\n      } else {\n        tmpvar_14 = (tmpvar_14 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_14 = (sign(xlat_mutablec2.x) * 1.570796);\n  };\n  vec2 tmpvar_17;\n  tmpvar_17.x = ((0.3183098 * tmpvar_14) + q18);\n  tmpvar_17.y = (((0.3 * aspect.w) * log(\n    sqrt(dot (xlat_mutablec2, xlat_mutablec2))\n  )) + q19);\n  uv_1 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_17 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = (uv_1 - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  vec2 tmpvar_18;\n  tmpvar_18.x = q5;\n  tmpvar_18.y = q6;\n  uv_1 = (uv_1 + (tmpvar_18 / 4.0));\n  mat2 tmpvar_19;\n  tmpvar_19[uint(0)] = _qb.xy;\n  tmpvar_19[1u] = _qb.zw;\n  uv_1 = (uv_1 * tmpvar_19);\n  float tmpvar_20;\n  float tmpvar_21;\n  tmpvar_21 = (min (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0) / max (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0));\n  float tmpvar_22;\n  tmpvar_22 = (tmpvar_21 * tmpvar_21);\n  tmpvar_22 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_22) + 0.05368138) * tmpvar_22) - 0.1173503)\n     * tmpvar_22) + 0.1938925) * tmpvar_22) - 0.3326756)\n   * tmpvar_22) + 0.9999793) * tmpvar_21);\n  tmpvar_22 = (tmpvar_22 + (float(\n    (abs((uv_1.y / uv_1.x)) > 1.0)\n  ) * (\n    (tmpvar_22 * -2.0)\n   + 1.570796)));\n  tmpvar_20 = (tmpvar_22 * sign((uv_1.y / uv_1.x)));\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\n    if ((uv_1.x < 0.0)) {\n      if ((uv_1.y >= 0.0)) {\n        tmpvar_20 += 3.141593;\n      } else {\n        tmpvar_20 = (tmpvar_20 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_20 = (sign(uv_1.y) * 1.570796);\n  };\n  xlat_mutablers0.x = (((tmpvar_20 / 3.1416) * 6.0) * q28);\n  xlat_mutablers0.y = inversesqrt(dot (uv_1, uv_1));\n  vec2 tmpvar_23;\n  tmpvar_23.x = (xlat_mutablers0.x + (q9 * 8.0));\n  tmpvar_23.y = (xlat_mutablers0.y + ((q9 * q28) * 4.0));\n  xlat_mutablerss = (tmpvar_23 / 12.0);\n  vec2 tmpvar_24;\n  tmpvar_24.x = q5;\n  tmpvar_24.y = q6;\n  ofs_2 = (0.1 * tmpvar_24.yx);\n  float tmpvar_25;\n  float tmpvar_26;\n  tmpvar_26 = -(q9);\n  tmpvar_25 = fract(tmpvar_26);\n  mat2 tmpvar_27;\n  tmpvar_27[uint(0)].x = 1.0;\n  tmpvar_27[uint(0)].y = -0.0;\n  tmpvar_27[1u].x = 0.0;\n  tmpvar_27[1u].y = 1.0;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_25)\n   * tmpvar_27)) * aspect.yx);\n  vec2 tmpvar_28;\n  tmpvar_28 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_28).xyz + ((texture (sampler_blur1, tmpvar_28).xyz * scale1) + bias1));\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), ((xlat_mutableneu * \n    (1.0 - (tmpvar_25 * tmpvar_25))\n  ) * 2.0));\n  float tmpvar_29;\n  tmpvar_29 = fract((tmpvar_26 + 0.3333333));\n  mat2 tmpvar_30;\n  tmpvar_30[uint(0)].x = -0.4990803;\n  tmpvar_30[uint(0)].y = -0.8665558;\n  tmpvar_30[1u].x = 0.8665558;\n  tmpvar_30[1u].y = -0.4990803;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_29)\n   * tmpvar_30)) * aspect.yx);\n  vec2 tmpvar_31;\n  tmpvar_31 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_31).xyz + ((texture (sampler_blur1, tmpvar_31).xyz * scale1) + bias1));\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \n    (1.0 - (tmpvar_29 * tmpvar_29))\n  ) * 2.0));\n  float tmpvar_32;\n  tmpvar_32 = fract((tmpvar_26 + 0.6666667));\n  mat2 tmpvar_33;\n  tmpvar_33[uint(0)].x = -0.5018377;\n  tmpvar_33[uint(0)].y = 0.8649619;\n  tmpvar_33[1u].x = -0.8649619;\n  tmpvar_33[1u].y = -0.5018377;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_32)\n   * tmpvar_33)) * aspect.yx);\n  vec2 tmpvar_34;\n  tmpvar_34 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_34).xyz + ((texture (sampler_blur1, tmpvar_34).xyz * scale1) + bias1));\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \n    (1.0 - (tmpvar_32 * tmpvar_32))\n  ) * 2.0));\n  float tmpvar_35;\n  tmpvar_35 = fract((tmpvar_26 + 1.0));\n  mat2 tmpvar_36;\n  tmpvar_36[uint(0)].x = 0.9999949;\n  tmpvar_36[uint(0)].y = 0.003185092;\n  tmpvar_36[1u].x = -0.003185092;\n  tmpvar_36[1u].y = 0.9999949;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_35)\n   * tmpvar_36)) * aspect.yx);\n  vec2 tmpvar_37;\n  tmpvar_37 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_37).xyz + ((texture (sampler_blur1, tmpvar_37).xyz * scale1) + bias1));\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \n    (1.0 - (tmpvar_35 * tmpvar_35))\n  ) * 2.0));\n  vec2 tmpvar_38;\n  tmpvar_38.x = (ret1_3.x + ret1_3.z);\n  tmpvar_38.y = (ret1_3.x - ret1_3.y);\n  vec4 tmpvar_39;\n  tmpvar_39.w = 1.0;\n  tmpvar_39.xyz = ((ret1_3 + (\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\n   * roam_sin).xyz) + ((2.0 * \n    (bass_att * ((texture (sampler_blur1, fract(\n      (xlat_mutablerss + (tmpvar_38 / 2.0))\n    )).xyz * scale1) + bias1).zxy)\n  ) * clamp (\n    (1.0 - (ret1_3 * 4.0))\n  , 0.0, 1.0)));\n  ret = tmpvar_39.xyz;\n }"}