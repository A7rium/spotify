{"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.01,"warpscale":0.01,"zoom":1.00183,"dx":1,"warp":0.01,"wave_r":0.8,"wave_g":0.49,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.rad=0;a.ready=0;a.index2=0;a.index=0;a.q22=0;a.q21=0;a.movex=0;a.q1=0;a.dec_med=0;a.rott=0;a.ly=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q11=0;a.q10=0;a.q4=0;a.is_beat2=0;a.alt=0;a.q26=0;a.p2=0;a.avg=0;a.q19=0;a.beat=0;a.p1=0;a.lx=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q28=0;a.q30=0;a.q20=0;a.step=0;a.shift=0;a.step=0;","frame_eqs_str":"a.dec_med=pow(.8,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.4+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,4);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+\na.mid_att+a.treb_att;a.ready=a.is_beat*bnot(a.ready)+bnot(a.is_beat2)*a.ready;a.is_beat2=a.ready*above(a.time,a.t0+.2);a.q19=a.is_beat2;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.14159265359*a.p2,2);a.q27=a.index+1;a.q28=a.index2+1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.movex+=div(.06,a.fps);a.q30=a.movex;a.alt=a.alt*(1-a.dec_med)+a.q26*a.dec_med;a.q26-=a.alt;a.step=a.step+Math.max(a.q26,0)+a.q24-\nMath.floor(a.step);a.q30=a.step;a.q30=a.movex;a.lx+=div(.03,a.fps);a.ly+=div(.3,a.fps)*a.q2;a.q10=a.lx;a.q11=0;a.zoom=1+0*a.rad;a.dx=0;a.dy=0;a.rot=.1*a.q1;","pixel_eqs_str":"","pixel_eqs":"","warp":"float xlat_mutabledx;\nfloat xlat_mutabledy;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutablezz;\n shader_body { \n  vec2 uv_1;\n  vec3 crisp_2;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.w;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.z;\n  xlat_mutablezz = ((uv * texsize.xy) * 0.01);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (cos((xlat_mutablezz.y * q1)) * sin(-(xlat_mutablezz.y)));\n  tmpvar_5.y = (sin(xlat_mutablezz.x) * cos((xlat_mutablezz.y * q2)));\n  uv_1 = (uv - ((tmpvar_5 * texsize.zw) * (8.0 + \n    (6.0 * q11)\n  )));\n  xlat_mutableuv2 = (((uv_1 / 2.0) * q27) / 4.0);\n  xlat_mutabledx = dot ((texture (sampler_main, (xlat_mutableuv2 + tmpvar_3)).xyz - texture (sampler_main, (xlat_mutableuv2 - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledy = dot ((texture (sampler_main, (xlat_mutableuv2 + tmpvar_4)).xyz - texture (sampler_main, (xlat_mutableuv2 - tmpvar_4)).xyz), vec3(0.32, 0.49, 0.29));\n  float tmpvar_6;\n  tmpvar_6 = (0.15 + (0.1 * q28));\n  vec2 tmpvar_7;\n  tmpvar_7 = (xlat_mutableuv2 + (time / 100.0));\n  xlat_mutabledx = (xlat_mutabledx + (tmpvar_6 * (texture (sampler_noise_hq, tmpvar_7).x - 0.5)));\n  xlat_mutabledy = (xlat_mutabledy + (tmpvar_6 * (texture (sampler_noise_hq, tmpvar_7).y - 0.5)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = xlat_mutabledx;\n  tmpvar_8.y = xlat_mutabledy;\n  xlat_mutablezz = tmpvar_8;\n  crisp_2 = (texture (sampler_main, (uv_1 + (tmpvar_8 * 0.04))).xyz + texture (sampler_main, uv_1).xyz);\n  crisp_2 = (crisp_2 * 0.5);\n  crisp_2 = (crisp_2 + ((0.05 * \n    (0.9 + (0.1 * roam_cos))\n  .xyz) - (\n    sqrt(dot (tmpvar_8, tmpvar_8))\n   * 0.3)));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((crisp_2 * 0.97) - 0.015);\n  ret = tmpvar_9.xyz;\n }","comp":"vec2 xlat_mutabledz;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv3;\nvec2 xlat_mutableuv4;\n shader_body { \n  vec2 uv_1;\n  float inten_3;\n  float dist_4;\n  vec3 ret_5;\n  uv_1 = (uv - 0.5);\n  xlat_mutabledz = vec2(0.0, 0.0);\n  dist_4 = 1.0;\n  inten_3 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  for (float n_2 = 0.0; n_2 <= 4.0; n_2 += 1.0) {\n    dist_4 = (1.0 - fract((\n      (0.2 * n_2)\n     + \n      (time / 4.0)\n    )));\n    inten_3 = ((sqrt(dist_4) * (1.0 - dist_4)) * 2.0);\n    vec2 tmpvar_6;\n    tmpvar_6.y = 0.0;\n    tmpvar_6.x = (time / 8.0);\n    xlat_mutableuv3 = (((\n      (2.0 * uv_1)\n     * dist_4) + 0.4) + tmpvar_6);\n    vec2 tmpvar_7;\n    tmpvar_7.y = 0.0;\n    tmpvar_7.x = texsize.z;\n    vec2 tmpvar_8;\n    tmpvar_8.y = 0.0;\n    tmpvar_8.x = texsize.z;\n    xlat_mutabledz.x = (xlat_mutabledz.x + (inten_3 * dot (\n      (texture (sampler_main, (xlat_mutableuv3 + tmpvar_7)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_8)).xyz)\n    , vec3(0.32, 0.49, 0.29))));\n    vec2 tmpvar_9;\n    tmpvar_9.x = 0.0;\n    tmpvar_9.y = texsize.w;\n    vec2 tmpvar_10;\n    tmpvar_10.x = 0.0;\n    tmpvar_10.y = texsize.w;\n    xlat_mutabledz.y = (xlat_mutabledz.y + (inten_3 * dot (\n      (texture (sampler_main, (xlat_mutableuv3 + tmpvar_9)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_10)).xyz)\n    , vec3(0.32, 0.49, 0.29))));\n    xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_3));\n  };\n  uv_1 = (uv_1 + (xlat_mutabledz * 14.0));\n  xlat_mutableuv4 = (uv_1 - vec2(0.2, -0.1));\n  float tmpvar_11;\n  tmpvar_11 = (0.5 * clamp ((1.0/(\n    (abs(uv_1.y) + 0.1)\n  )), 0.0, 12.0));\n  vec2 tmpvar_12;\n  tmpvar_12.x = (uv_1.x * tmpvar_11);\n  tmpvar_12.y = tmpvar_11;\n  vec3 tmpvar_13;\n  tmpvar_13.xy = vec2(0.0, 0.0);\n  tmpvar_13.z = clamp ((1.0 - (3.0 * uv_1.y)), 0.0, 1.0);\n  ret_5 = (vec3(0.0, 0.1, 0.1) + (0.1 * tmpvar_13));\n  ret_5 = (ret_5 + (vec3(dot (texture (sampler_noise_hq, \n    (tmpvar_12 + (0.04 * time))\n  ), vec4(0.32, 0.49, 0.29, 0.0))) * (\n    (clamp ((1.0 - (12.0 * uv_1.y)), 0.0, 1.0) * 0.1)\n   / \n    (0.03 + sqrt(dot (xlat_mutableuv4, xlat_mutableuv4)))\n  )));\n  ret_5 = (ret_5 + ((0.4 * xlat_mutableret1) + (\n    (0.25 * q22)\n   * xlat_mutableret1)));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_5;\n  ret = tmpvar_14.xyz;\n }"}