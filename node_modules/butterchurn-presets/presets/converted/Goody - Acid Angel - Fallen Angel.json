{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wrap":0,"solarize":1,"wave_a":0.032,"wave_scale":4.778,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.01959,"warp":0.0091,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.05,"ob_a":0.1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":16,"thick":1,"additive":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.redsine=0;a.bluesine=0;a.thresh=0;a.greenif=0;a.dy_r=0;a.dx_r=0;a.redif=0;a.blueif=0;a.vol=0;a.greensine=0;","frame_eqs_str":"a.vol=.3333*(a.bass+a.mid+a.treb_att);a.redsine=.5+.15*a.bass*Math.sin(1.21*a.time);a.greensine=.5+.15*a.mid*Math.sin(1.133*a.time);a.bluesine=.5+.15*a.treb*Math.sin(1.114*a.time);a.redif=.00001<Math.abs(above(a.bass,1.2))?a.redsine:.00001<Math.abs(above(a.redif,.95))?0:.5*a.redif;a.greenif=.00001<Math.abs(above(a.mid,1.2))?a.greensine:.00001<Math.abs(above(a.greenif,.95))?0:.5*a.greenif;a.blueif=.00001<Math.abs(above(a.treb,1.2))?a.bluesine:.00001<Math.abs(above(a.blueif,.95))?\n0:.5*a.blueif;a.ob_r=a.redif;a.ob_g=a.greenif;a.ob_b=a.blueif;a.wave_x+=.2*Math.sin(.32*a.time);a.wave_y+=.2*Math.cos(.32*a.time);","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.dx=a.dx_r+.005*Math.sin(1.463*a.time);a.dy=a.dy_r+.005*Math.sin(1.222*a.time);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_fw_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 aret_1;\n  vec4 mb_2;\n  vec3 ret_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  mb_2.x = texture (sampler_main, ((tmpvar_4.xyz * scale1) + bias1).xy).x;\n  mb_2.y = ((tmpvar_4.xyz * scale1) + bias1).x;\n  mb_2.z = ((texture (sampler_blur2, uv).xyz * scale2) + bias2).x;\n  mb_2.w = ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x;\n  ret_3 = (mb_2.xxx + mix ((texture (sampler_fw_main, uv).xyz * 5.0), (texture (sampler_fw_main, \n    ((0.5 - uv) + 0.5)\n  ).xyz * 5.0), vec3(0.5, 0.5, 0.5)));\n  ret_3 = (ret_3 * (1.0 - ret_3));\n  ret_3.x = (ret_3.x * (ret_3.x * mb_2.y));\n  ret_3.y = (ret_3.y * (ret_3.y * mb_2.y));\n  ret_3.z = (ret_3.z * ((1.0 - \n    (ret_3.z / ret_3.x)\n  ) + 1.0));\n  vec3 tmpvar_5;\n  tmpvar_5 = (1.0 - ret_3);\n  aret_1.x = (1.0/(ret_3.x));\n  aret_1.y = (tmpvar_5.y * (1.0/(ret_3.y)));\n  aret_1.z = (tmpvar_5.z - (1.0/(ret_3.z)));\n  ret_3 = ((ret_3 / aret_1) * mb_2.w);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_3;\n  ret = tmpvar_6.xyz;\n }"}