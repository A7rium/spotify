{"baseVals":{"rating":0,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.549,"warpscale":2.94,"zoomexp":1.03315,"fshader":1,"zoom":1.56481,"warp":1.45984,"sx":0.93272,"sy":0.89632,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"x":0.14,"y":0.13,"rad":0.20388,"ang":0.6283,"tex_zoom":1.17257,"border_a":0},"init_eqs_str":"a.vx=0;a.vy=0;","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.d=0;a.n=0;a.w=0;a.n2=0;a.res=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.j3=0;a.q1=0;a.q5=0;a.n1=0;a.q9=0;a.x=0;a.v=0;a.diff=0;a.q10=0;a.q4=0;a.j2=0;a.k=0;a.r=0;a.y=0;a.beat=0;a.vol=0;a.j1=0;a.q2=0;a.q14=0;a.q3=0;a.x1=0;a.y1=0;","frame_eqs_str":"a.v=.8;a.j1=.95*a.j1+sqr(4*a.bass)*a.v;a.j2=.95*a.j2+sqr(4*a.mid)*a.v;a.j3=.95*a.j3+sqr(4*a.treb)*a.v;a.n+=.0052*a.j1;a.n1+=.0052*a.j2;a.n2+=.0052*a.j3;a.q12=.01*a.n;a.q13=.01*a.n1;a.q14=.01*a.n2;a.k=.99*a.k+sqr(2*a.mid_att);a.q5=0*a.k;a.zoom=.99;a.rot=-0;a.w=-.46;a.q1=Math.sin(a.w);a.q2=Math.cos(a.w);a.w=.001*a.n;a.q3=Math.sin(a.w);a.q4=Math.cos(a.w);a.q9=.004*a.n1;a.q10=.004*a.n2;a.vol=8*a.bass+4*a.mid+2*a.treb;a.vol*=above(a.vol,17);a.monitor=a.vol;a.beat=above(a.vol,a.res);\na.diff=(1-a.beat)*a.diff+a.beat*(a.vol-a.res);a.res=a.beat*(a.vol+2*a.diff)+(1-a.beat)*(a.res-div(60*(.04*a.diff+.12),a.fps));a.res=Math.max(0,a.res);a.monitor=a.res;a.x=.00001<Math.abs(a.beat)?.01*randint(60)+.2:a.x;a.y=.00001<Math.abs(a.beat)?.01*randint(60)+.2:a.y;a.q21=a.x;a.q22=a.y;a.wave_x=a.q1;a.wave_y=1-a.q2;","pixel_eqs_str":"a.cx=a.q21;a.cy=a.q22;a.d=pow(sqrt(sqr(a.x-a.cx)+sqr(a.y-a.cy)),.8);a.r=.2;a.v=.2;a.dx=(a.x-a.cx)*a.v*(a.d-a.r);a.dy=(a.y-a.cy)*a.v*(a.d-a.r);","warp":" shader_body { \n  vec2 uv6_1;\n  vec2 uv5_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  vec2 tmpvar_5;\n  tmpvar_5 = (vec2(-1.0, 1.0) * uv);\n  ret_3.x = (((texture (sampler_fc_main, \n    ((uv.yx * 4.0) - vec2(3.0, 0.0))\n  ).z + texture (sampler_fc_main, \n    (vec2(0.45, 0.55) + (tmpvar_4 * 1.15))\n  ).x) + (texture (sampler_fc_main, \n    (vec2(-1.0, 0.0) + (((tmpvar_5 + vec2(1.0, 0.0)) - 0.5) * 4.0))\n  ).x + texture (sampler_fc_main, \n    (vec2(1.0, 2.0) + (((\n      (vec2(1.0, -1.0) * uv)\n     + vec2(0.0, 1.0)) - 0.5) * 4.0))\n  ).x)) * 1.075);\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_4 * aspect.xy);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((q2 * tmpvar_6.x) - (q1 * tmpvar_6.y));\n  tmpvar_7.y = ((q1 * tmpvar_6.x) + (q2 * tmpvar_6.y));\n  uv5_2 = (vec2(1.05, 1.05) * tmpvar_7);\n  uv5_2 = (vec2(0.47, 0.53) + (uv5_2 * aspect.zw));\n  ret_3.z = ((texture (sampler_fc_main, (vec2(-1.0, 0.0) + \n    (((tmpvar_5 + vec2(1.0, 0.0)) - 0.5) * 4.0)\n  )).x + texture (sampler_fc_main, uv5_2).z) * 1.075);\n  vec2 tmpvar_8;\n  tmpvar_8 = ((tmpvar_4 * aspect.xy) * 2.0);\n  vec2 tmpvar_9;\n  tmpvar_9.x = ((q4 * tmpvar_8.x) - (q3 * tmpvar_8.y));\n  tmpvar_9.y = ((q3 * tmpvar_8.x) + (q4 * tmpvar_8.y));\n  uv6_1 = (vec2(1.05, 1.05) * tmpvar_9);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q9;\n  tmpvar_10.y = q10;\n  uv6_1 = ((0.5 + (uv6_1 * aspect.zw)) + tmpvar_10);\n  uv6_1 = (1.0 - abs((\n    (fract((uv6_1 * 0.5)) * 2.0)\n   - 1.0)));\n  ret_3.y = max (texture (sampler_fc_main, uv6_1).z, (texture (sampler_fc_main, uv6_1).y * 0.5));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_3;\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 2.0);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_3.z;\n  tmpvar_4.y = -(tmpvar_2.z);\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + ((tmpvar_4 * texsize.zw) * 64.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.z;\n  tmpvar_6.y = -(tmpvar_2.z);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 32.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (mix (mix (\n    (mix (mix (vec3(0.2, 0.2, 0.0), vec3(0.6, 0.6, 0.0), vec3((\n      ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n    .y * 8.0))), vec3(1.0, 1.0, 1.0), vec3(((\n      (texture (sampler_blur1, tmpvar_5).xyz * scale1)\n     + bias1).y * 6.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_5).y * 2.0))))\n  , vec3(0.0, 1.0, 0.0), vec3(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 1.2)\n  )), vec3(1.4, 0.0, 0.0), vec3((\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\n  .x * 2.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_7).x * 2.0))));\n  ret = tmpvar_8.xyz;\n }"}