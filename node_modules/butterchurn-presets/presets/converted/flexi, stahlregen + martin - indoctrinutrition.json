{"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_mode":3,"wave_dots":1,"wave_thick":1,"wrap":0,"wave_a":0.9,"wave_scale":2.905,"wave_smoothing":0.6,"wave_mystery":-0.3,"warpanimspeed":1.549,"warpscale":2.94,"zoomexp":0.02049,"fshader":1,"warp":1.45984,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":24.986,"mv_y":20.031,"mv_dx":0.065,"mv_dy":0.109,"mv_l":0.036,"mv_r":0.816,"mv_g":0.099,"mv_b":0.816,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.d=0;a.cx1=0;a.y3=0;a.y1=0;a.w=0;a.cy1=0;a.q18=0;a.x1=0;a.q21=0;a.q15=0;a.v=0;a.x3=0;a.d2=0;a.a=0;a.dir=0;a.r=0;a.x2=0;a.q19=0;a.y2=0;a.q20=0;a.x1=0;a.y1=0;","frame_eqs_str":"a.zoom=.995;a.warp=0;a.a=.98*a.a-.01*(a.bass-a.treb);a.v=.96*a.v+.12*a.a;a.w+=.01*a.v;a.q15=a.a-a.v;a.q18=a.w;a.q19=sigmoid(a.treb_att-a.bass_att,2);a.d+=div(.6*(a.bass_att-.5),a.fps);a.d2+=div(.36*(a.treb_att-.5),a.fps);a.q20=a.d+a.d2;a.q21=a.d2;","pixel_eqs_str":"a.r=div(a.bass,4);a.cx1=.5+.2*Math.sin(.618*a.time);a.cy1=.5+.2*Math.cos(1.618*a.time);a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.dir=a.bass*(a.r*a.r-a.d*a.d)*.3;a.x1=.00001<Math.abs(above(a.d,a.r))?0:Math.sin(a.y-a.cy1)*a.dir;a.y1=.00001<Math.abs(above(a.d,a.r))?0:-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.3*Math.sin(2.618*a.time);a.cy1=.5+.3*Math.cos(3.14*a.time);a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.dir=-a.mid*(a.r*a.r-a.d*a.d)*.3;a.x2=.00001<\nMath.abs(above(a.d,a.r))?0:Math.sin(a.y-a.cy1)*a.dir;a.y2=.00001<Math.abs(above(a.d,a.r))?0:-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.4*Math.sin(2.618*-a.time);a.cy1=.5+.4*Math.cos(1.14*-a.time);a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.dir=-a.treb*(a.r*a.r-a.d*a.d)*.3;a.x3=.00001<Math.abs(above(a.d,a.r))?0:Math.sin(a.y-a.cy1)*a.dir;a.y3=.00001<Math.abs(above(a.d,a.r))?0:-Math.sin(a.x-a.cx1)*a.dir;a.v=.4;a.dx=(a.x1+a.x2+a.x3)*a.v;a.dy=(a.y1+a.y2+a.y3)*a.v;","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = fract(uv);\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy);\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 12.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur3, \n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale3) + bias3));\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur3, \n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale3) + bias3));\n  ret_1.x = ((texture (sampler_fc_main, tmpvar_2).x - (\n    (((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3) - texture (sampler_fc_main, tmpvar_2).xyz)\n  .x * 0.1)) - 0.035);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_5.x;\n  tmpvar_7.y = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_5.y;\n  tmpvar_8.y = tmpvar_6.y;\n  ret_1.y = (((texture (sampler_fc_main, \n    (((uv_orig + (\n      ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\n     * 4.0)) - ((tmpvar_7 * texsize.zw) * 4.0)) + ((tmpvar_8 * texsize.zw) * 8.0))\n  ).y + \n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.1)\n  ) - 0.012) + (texture (sampler_pc_main, uv_orig).z * 0.2)).x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_6.x;\n  tmpvar_9.y = -(tmpvar_5.x);\n  vec2 tmpvar_10;\n  tmpvar_10 = ((uv_orig + (\n    ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\n   * 2.0)) + ((tmpvar_9 * texsize.zw) * 64.0));\n  ret_1.z = (((\n    (texture (sampler_fc_main, tmpvar_10).z + ((texture (sampler_fc_main, tmpvar_10).z - (\n      (texture (sampler_blur2, tmpvar_10).xyz * scale2)\n     + bias2).z) * 0.2))\n   + \n    (texture (sampler_noise_lq, tmpvar_3).xyz * 0.1)\n  ) - (\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\n   + bias3).x) - (clamp (\n    (1.0 - ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2).x)\n  , 0.0, 1.0) * 0.04)).x;\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","comp":"vec2 xlat_mutablers;\n shader_body { \n  vec2 uv_1;\n  uv_1 = (0.5 + ((uv - 0.5) * aspect.xy));\n  xlat_mutablers.x = (((ang / 3.14) + (rad * q15)) - q18);\n  vec2 x_2;\n  x_2 = (uv_1 - 0.5);\n  xlat_mutablers.y = ((0.1 / (0.05 + \n    (sqrt(dot (x_2, x_2)) * 1.4)\n  )) + q21);\n  uv_1 = (1.0 - abs((\n    (fract((xlat_mutablers * 0.5)) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4 = (tmpvar_3 * 4.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * 4.0);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot (((\n    (texture (sampler_blur1, (uv_1 - tmpvar_4)).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv_1 + tmpvar_4)).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (((\n    (texture (sampler_blur1, (uv_1 - tmpvar_6)).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv_1 + tmpvar_6)).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, uv_1);\n  uv_1 = (cos((\n    (12.56 * xlat_mutablers)\n   - \n    (vec2(0.0, 10.0) * q20)\n  )) - (8.0 * tmpvar_7));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = (mix (mix (\n    mix ((tmpvar_8.x * vec3(2.0, 1.2, 0.0)), vec3(0.25, 0.0, 0.5), vec3(clamp (tmpvar_8.y, 0.0, 1.0)))\n  , vec3(1.8, 1.8, 1.8), vec3(\n    clamp ((tmpvar_8.z - tmpvar_8.x), 0.0, 1.0)\n  )), (\n    clamp ((0.02 / sqrt(dot (uv_1, uv_1))), 0.0, 1.0)\n   * hue_shader), vec3(0.92, 0.92, 0.92)) * 6.0);\n  ret = tmpvar_9.xyz;\n }"}