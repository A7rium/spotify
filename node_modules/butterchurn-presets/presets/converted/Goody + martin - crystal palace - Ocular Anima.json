{"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.index2=0;a.sw=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.k2=0;a.q26=0;a.p2=0;a.avg=0;a.rota=0;a.movez=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.v2=0;a.q20=0;a.q8=0;a.vol=0;a.p1=0;a.vx=.2;a.vy=-.1;a.kx=0;a.ky=0;","frame_eqs_str":"a.dec_med=pow(.96,div(30,a.fps));a.dec_slow=pow(.98,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),2);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.vol=a.bass_att+a.treb_att;a.v2=a.v2*a.dec_slow+a.vol*(1-a.dec_slow);a.q26=Math.max(Math.atan(a.vol-.8*a.v2),.3);a.q27=a.index+1;a.sw=a.sw*a.dec_med+(1-a.dec_med)*mod(a.index2,2);a.q28=a.sw;a.k1=a.is_beat*bnot(a.index);a.k2=a.is_beat*bnot(a.index);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_slow*a.p2+(1-a.dec_slow)*a.p1;a.rott=div(3.1416*a.p2,2);a.monitor=a.k1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q5=Math.cos(div(a.time,\n6));a.q6=-Math.sin(div(a.time,6));a.q7=-a.q6;a.q8=a.q5;a.zoom=1;a.rot=-0;a.movez+=div(.18*(a.q1+1.1),a.fps);a.q29=a.movez;a.rota+=div(.09*(2-a.q1),a.fps);a.q30=a.rota;a.q31=4+6*Math.abs(Math.cos(div(a.time,18)));a.q32=div(Math.cos(div(a.time,23)),4);","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec2 uv_1;\n  vec3 xlat_varmod_2;\n  float z_3;\n  vec3 ret_4;\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\n  vec2 x_5;\n  x_5 = (xlat_mutableuv1 * 5.0);\n  float theta_6;\n  theta_6 = (rad * ((uv_orig * \n    sqrt(dot (x_5, x_5))\n  ) + time).x);\n  xlat_mutablers = (clamp ((\n    (sin(theta_6) / cos(theta_6))\n   * \n    normalize(xlat_mutableuv1)\n  ), vec2(5.0, 5.0), vec2(0.0, 0.0)) * 5.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = sin((xlat_mutableuv1 * (q31 * 4.0)));\n  z_3 = (1.0 - cos((8.0 * \n    (sqrt(dot (tmpvar_7, tmpvar_7)) * ((abs(xlat_mutableuv1.x) + abs(xlat_mutableuv1.y)) + q32))\n  )));\n  z_3 = (z_3 * (0.2 * clamp (\n    dot (vec3(z_3), vec3(0.32, 0.49, 0.29))\n  , 0.0, 1.0)));\n  float tmpvar_8;\n  tmpvar_8 = float((z_3 <= 1.0));\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\n  uv_1 = (uv_orig + ((\n    ((1.0 - tmpvar_8) * 0.03)\n   * xlat_mutablers.yx) + (\n    ((0.5 * tmpvar_8) * z_3)\n   * \n    sign(z_3)\n  )));\n  mat2 tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10 = (_qb * 0.5);\n  tmpvar_9[uint(0)] = tmpvar_10.xy;\n  tmpvar_9[1u] = tmpvar_10.zw;\n  vec2 tmpvar_11;\n  tmpvar_11.x = q5;\n  tmpvar_11.y = q6;\n  vec2 tmpvar_12;\n  tmpvar_12 = ((0.7 * xlat_mutableuv1) + (0.3 * sin(\n    ((xlat_mutableuv1 * 16.0) + (4.0 * tmpvar_11))\n  )));\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_main, uv_1);\n  vec3 tmpvar_14;\n  tmpvar_14 = ((tmpvar_13.xyz + vec3((0.177 * \n    abs((0.0225 / sqrt((xlat_mutableuv1 * tmpvar_9).x)))\n  ))) + vec3((q26 * clamp (\n    (0.00065 / sqrt(dot (tmpvar_12, tmpvar_12)))\n  , 0.0, 1.0))));\n  xlat_varmod_2 = (0.98 - ((texture (sampler_noise_lq, \n    ((50.0 * uv_1) + (time * 0.1))\n  ) - 0.25).xyz * (tmpvar_13.xyz - \n    (0.5 * ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1))\n  )));\n  ret_4 = (((\n    (1.0 - tmpvar_8)\n   * tmpvar_14) * xlat_varmod_2) + ((tmpvar_8 * tmpvar_14) * xlat_varmod_2));\n  ret_4 = (ret_4 * (vec3(0.9, 0.897, 0.894) - (ret_4.x * uv_orig.x)));\n  ret_4 = ((ret_4 * 0.99) - 0.01);\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_4;\n  ret = tmpvar_15.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  float t_rel_2;\n  float inten_4;\n  float dist_5;\n  float ang2_6;\n  vec3 ret_7;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_fc_main, uv);\n  ret_7 = tmpvar_8.xyz;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_5 = 0.0;\n  inten_4 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  t_rel_2 = q29;\n  for (float n_3 = 0.0; n_3 <= 15.0; n_3 += 1.0) {\n    ang2_6 = (((6.28 * n_3) / 15.0) + q30);\n    float tmpvar_9;\n    tmpvar_9 = cos(ang2_6);\n    float tmpvar_10;\n    tmpvar_10 = sin(ang2_6);\n    xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\n    xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\n    xlat_mutableuv2 = (xlat_mutableuv2 * aspect.y);\n    dist_5 = (1.0 - fract((\n      (n_3 / 15.0)\n     + t_rel_2)));\n    inten_4 = ((4.0 * dist_5) * (1.0 - (dist_5 * dist_5)));\n    xlat_mutableuv3 = ((3.0 * dist_5) * xlat_mutableuv2);\n    xlat_mutableblur = (((texture (sampler_blur1, \n      fract(xlat_mutableuv3)\n    ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n    xlat_mutableret1 = max (xlat_mutableret1, ((\n      (texture (sampler_main, (xlat_mutableuv3 * 1.5)).xyz * 2.0)\n     + xlat_mutableblur) * inten_4));\n  };\n  ret_7 = (tmpvar_8.xyz * texture (sampler_main, (0.5 + (\n    (uv_orig * aspect.yx)\n   * 10.0))).xyz);\n  ret_7 = (ret_7 + texture (sampler_main, (0.5 - (\n    (uv_orig * aspect.xy)\n   * 10.0))).xyz);\n  ret_7 = (ret_7 * (0.5 - (dist_5 * xlat_mutableret1.y)));\n  ret_7 = (ret_7 + ((xlat_mutableret1 * 2.0) + (8.0 * \n    ((texture (sampler_blur2, ((5.0 * aspect.xy) * xlat_mutableuv2)).xyz * scale2) + bias2)\n  )));\n  ret_7 = (ret_7 * ((texture (sampler_blur1, \n    (0.5 + (uv_1 * aspect.xy))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_11;\n  tmpvar_11.z = 0.0;\n  tmpvar_11.xy = (xlat_mutableret1.xy * xlat_mutableuv2);\n  ret_7 = (ret_7 * (8.0 + dot (tmpvar_11, vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_7;\n  ret = tmpvar_12.xyz;\n }"}