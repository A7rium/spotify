{"baseVals":{"rating":4,"gammaadj":1,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.803,"warpscale":1.22,"zoomexp":0.99999,"warp":0.31218,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.d=0;a.n=0;a.y1=0;a.xx=0;a.w=0;a.dx2=0;a.ww=0;a.q12=0;a.q18=0;a.du=0;a.x1=0;a.q21=0;a.q13=0;a.q15=0;a.q6=0;a.dy1=0;a.q1=0;a.q5=0;a.q9=0;a.x=0;a.v=0;a.ww1=0;a.mm=0;a.tt=0;a.mult=0;a.q31=0;a.angle=0;a.vx=0;a.q11=0;a.q10=0;a.ang2=0;a.dv=0;a.vy=0;a.q4=0;a.a=0;a.q16=0;a.t=0;a.w1=0;a.dy2=0;a.y=0;a.mx=0;a.mn=0;a.q19=0;a.q17=0;a.y2=0;a.dx1=0;a.bb=0;a.q2=0;a.q14=0;a.dist=0;a.v1=0;a.xo=0;a.q3=0;a.q32=0;a.yy=0;a.q7=0;a.v2=0;a.q20=0;a.q8=0;a.yo=0;","frame_eqs_str":"a.warp=0;a.zoom=1;a.wave_a=0;a.w=a.w1;a.ww=-(a.y1-a.y2)*(1+2*(div(70,a.fps)-1))-.8*a.y1;a.w-=5*a.ww;a.q1=Math.cos(a.ww);a.q2=Math.sin(a.ww);a.q3=1.12;a.q4=.042*Math.sin(a.w);a.q5=.042*Math.cos(a.w);a.a=.5*Math.asin(1);a.d=.08;a.q6=Math.cos(a.a+0*a.ww);a.q7=Math.sin(a.a+0*a.ww);a.q8=3.3;a.q9=Math.cos(-a.w+Math.asin(1))*a.d*a.aspectx;a.q10=Math.sin(-a.w+Math.asin(1))*a.d*a.aspecty;a.q11=Math.cos(-a.a+0*a.ww);a.q12=Math.sin(-a.a+0*a.ww);a.q13=a.q8;a.q14=Math.cos(-a.w+Math.asin(1))*\na.d*a.aspectx;a.q15=Math.sin(-a.w+Math.asin(1))*a.d*a.aspecty;a.bb=.97*a.bb+.04*a.bass;a.mm=.97*a.mm+.04*a.mid;a.tt=.97*a.tt+.04*a.treb;a.w1+=a.ww1*sqrt(a.vx*a.vx+a.vy*a.vy)*a.a*2;a.ww1=.94*a.ww1+.1*a.y1;a.q16=.2*(a.bb-a.tt);a.y1+=.1*a.v1;a.y2+=.2*a.v2;a.v1=.95*a.v1-.1*(a.y1-a.q16);a.v2=.99*a.v2-.2*(a.y2-a.y1);a.a=div(2.2*Math.abs(a.y2-a.y1),a.fps);a.q17=Math.sin(a.w)*a.a;a.q18=-Math.cos(a.w)*a.a;a.v=.25;a.x+=a.vx*a.v;a.x=Math.min(1,Math.max(-1,a.x));a.y+=a.vy*a.v;a.y=Math.min(1,Math.max(-1,a.y));\na.vx=.97*a.vx+Math.sin(a.w)*a.a+.2*(equal(a.x,-1)-equal(a.x,1));a.vy=.97*a.vy-Math.cos(a.w)*a.a+.2*(equal(a.y,-1)-equal(a.y,1));a.q19=.5*a.x;a.q20=.5*a.y;a.q21=-a.w1-0*a.ww;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.ob_r=div(a.bb-a.mn,a.mx-a.mn);a.ob_g=div(a.mm-a.mn,a.mx-a.mn);a.ob_b=div(a.tt-a.mn,a.mx-a.mn);a.v=div(1,a.fps);a.xx+=a.v*(a.ob_r-a.ob_g);a.yy+=a.v*(a.ob_g-a.ob_b);a.q32=a.xx;a.q31=a.yy;","pixel_eqs_str":"a.xo=a.x;a.yo=a.y;a.x=.5+(a.x-.5)*a.aspectx;a.y=.5+(a.y-.5)*a.aspecty;a.du=2*a.x-1-2*a.q19;a.dv=2*a.y-1+2*a.q20;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=3*Math.atan2(a.du,a.dv)+2*a.q21;a.mult=.02*-pow(a.dist,2);a.dx2=a.mult*Math.sin(a.ang2)*a.aspectx;a.dy2=a.mult*Math.cos(a.ang2)*a.aspecty;a.x=a.xo;a.y=a.yo;a.angle=a.q21+1.579;a.x1=(a.x-.5)*a.aspectx;a.y1=(a.y-.5)*a.aspecty;a.x=Math.cos(-a.angle)*a.x1-Math.sin(-a.angle)*a.y1;a.y=Math.sin(-a.angle)*a.x1+Math.cos(-a.angle)*a.y1;\na.t=2*a.time;a.v=.003;a.n=25;a.dx=a.v*(Math.cos((-a.x+a.y)*a.n+a.t)+Math.sin((a.x+a.y)*a.n+a.t));a.dy=a.v*(Math.cos((a.x-a.y)*a.n-a.t)+Math.sin((-a.x-a.y)*a.n-a.t));a.dx1=Math.cos(a.angle)*a.dx-Math.sin(a.angle)*a.dy;a.dy1=Math.sin(a.angle)*a.dx+Math.cos(a.angle)*a.dy;a.dx=a.dx1*a.aspectx;a.dy=a.dy1*a.aspecty;a.dx+=a.dx2;a.dy+=a.dy2;","warp":" shader_body { \n  vec2 uv1_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = clamp (uv, 0.0, 1.0);\n  ret_2.yz = (texture (sampler_main, tmpvar_3).xyz - vec3(0.08, 0.0, 0.08)).yz;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = ((2.0 * (\n    (texture (sampler_blur1, (tmpvar_3 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (tmpvar_3 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_6;\n  tmpvar_6 = ((2.0 * (\n    (texture (sampler_blur1, (tmpvar_3 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (tmpvar_3 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_5.x;\n  tmpvar_7.y = tmpvar_6.x;\n  uv1_1 = (tmpvar_3 + (tmpvar_4 * (tmpvar_7 * 0.4)));\n  ret_2.x = texture (sampler_fc_main, uv1_1).x;\n  ret_2.x = (ret_2.x - ((\n    (((texture (sampler_blur1, uv1_1).xyz * scale1) + bias1).x - ret_2.x)\n   * 0.05) + 0.004));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_5.x;\n  tmpvar_8.y = tmpvar_6.x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_5.z;\n  tmpvar_9.y = tmpvar_6.z;\n  ret_2.z = (max ((\n    sqrt(dot (tmpvar_8, tmpvar_8))\n   * 1.4), texture (sampler_main, (\n    clamp (mix (uv_orig, tmpvar_3, vec2(-1.0, -1.0)), 0.0, 1.0)\n   - \n    ((tmpvar_9 * texsize.zw) * 4.0)\n  )).z) - 0.004);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_2;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }"}