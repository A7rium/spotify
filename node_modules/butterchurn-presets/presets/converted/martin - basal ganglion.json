{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.002217,"wave_scale":0.092461,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":31.999998,"mv_y":24.000004,"mv_l":5,"mv_r":0.2999,"mv_g":0.4999,"mv_b":0.3999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"rad":0.084012,"tex_ang":0.5026,"tex_zoom":1.125188,"r":0.8,"b":0.8,"a":0.2,"g2":0,"a2":1,"border_r":0.7,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.2*Math.sin(div(a.time,12));a.y=.5+.2*Math.cos(div(a.time,17));a.r=.5+.2*Math.sin(div(a.time,31));a.g=.5+.2*Math.sin(div(a.time,41));a.b=.5+.2*Math.sin(div(a.time,17));a.x=.5;a.y=.5;a.rad=.05;a.a=.2;a.a2=0;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":14,"additive":1,"textured":1,"x":0.59,"y":0,"rad":1.215236,"ang":0.062832,"tex_ang":0.879646,"tex_zoom":0.514935,"r":0.6,"g":0.5,"b":0.7,"a":0.1,"r2":0.7,"g2":0.5,"b2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.3*Math.cos(div(a.time,78));a.y=.5+.3*Math.sin(div(a.time,78));a.tex_zoom=div(.2,Math.sin(div(a.time,31))+1.1);"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"textured":1,"x":0.76,"y":0.75,"rad":0.686364,"ang":0.439823,"tex_ang":0.502655,"tex_zoom":0.6159,"r":0.7,"g":0.7,"b":0.7,"a":0.15,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.3*Math.cos(div(a.time,59));a.y=.5+.3*Math.sin(div(a.time,59));"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.index2=0;a.index=0;a.q22=0;a.q21=0;a.movex=0;a.q1=0;a.dec_med=0;a.q9=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q10=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.p3=0;a.q3=0;a.t0=0;a.q32=0;a.q30=0;a.q20=0;a.p1=2E3;a.p2=200;a.p3=50;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),5);a.monitor=a.index2;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;\na.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*bnot(a.index)*bnot(a.index2);a.p1=a.index2-2;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott+=div(.06,a.fps)*a.p3;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.movex=a.movex*a.dec_slow+div(3*a.q1,a.fps);a.q9=a.movex;a.movez+=div(.3,a.fps)*(a.p3+3);a.q10=a.movez;a.q30=.3*(Math.sin(div(a.time,45))+1.5);a.mv_x=30;a.mv_y=20;a.mv_a=.08*pow(div(30,a.fps),1)*(1+a.q22);a.mv_l=0;a.q32=pow(.98,div(30,a.fps));\n","pixel_eqs_str":"a.zoom=1;a.warp=0*(1-a.rad);a.warp=.05;","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  float tmpvar_2;\n  tmpvar_2 = (dot (texture (sampler_noise_hq, (\n    (q30 * uv)\n   + \n    (0.001 * time)\n  )), vec4(0.32, 0.49, 0.29, 0.0)) * 3.14);\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = cos(tmpvar_2);\n  tmpvar_3[uint(0)].y = sin(tmpvar_2);\n  tmpvar_3[1u].x = -(sin(tmpvar_2));\n  tmpvar_3[1u].y = cos(tmpvar_2);\n  xlat_mutablemus = (abs(vec3((0.2 / \n    (sqrt(((\n      (uv - 0.5)\n     * aspect.xy) * tmpvar_3).y) + 0.2)\n  ))) * vec3(1.0, 0.96, 0.9));\n  xlat_mutablemus = (xlat_mutablemus * (vec3(1.0, 0.96, 0.9) + (0.1 * \n    (texture (sampler_noise_lq, uv) - 0.5)\n  .xyz)));\n  vec3 tmpvar_4;\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))) - texture (sampler_main, (uv - vec2(0.004, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))) - texture (sampler_main, (uv - vec2(0.0, 0.004)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.5 * texture (sampler_main, uv)).xyz);\n  crisp_1 = (crisp_1 * 0.667);\n  crisp_1 = (crisp_1 + (vec3(0.018, 0.018, 0.018) - (\n    sqrt(dot (tmpvar_5, tmpvar_5))\n   * tmpvar_4)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    (crisp_1 - (tmpvar_4 * 0.03))\n   + \n    (0.04 * xlat_mutablemus)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_6.xyz;\n }","comp":"float xlat_mutabledist;\nfloat xlat_mutabledist2;\nfloat xlat_mutableinten;\nfloat xlat_mutablem;\nfloat xlat_mutablemask;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qa.xy;\n  tmpvar_2[1u] = _qa.zw;\n  uv_1 = (uv_1 * tmpvar_2);\n  int tmpvar_3;\n  tmpvar_3 = int(q10);\n  xlat_mutablem = (1.0 - float(tmpvar_3));\n  float tmpvar_4;\n  tmpvar_4 = -(q10);\n  xlat_mutabledist = (1.0 - fract((0.25 - \n    (fract(tmpvar_4) / 4.0)\n  )));\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\n    (xlat_mutablem + 1.0)\n  , 2.0)))));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\n  xlat_mutableuv2 = (((\n    (4.0 * xlat_mutableuv2)\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\n  xlat_mutableret1 = (texture (sampler_main, xlat_mutableuv2).xyz * xlat_mutableinten);\n  xlat_mutablem = (2.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((0.5 - \n    (fract(tmpvar_4) / 4.0)\n  )));\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\n    (xlat_mutablem + 1.0)\n  , 2.0)))));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\n  xlat_mutableuv2 = (((\n    (4.0 * xlat_mutableuv2)\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, xlat_mutableuv2);\n  xlat_mutablemask = (1.0 - ((0.9 * \n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\n  ) * clamp (\n    (64.0 * tmpvar_5.xyz)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_5.xyz * xlat_mutableinten));\n  xlat_mutablem = (3.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((0.75 - \n    (fract(tmpvar_4) / 4.0)\n  )));\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\n    (xlat_mutablem + 1.0)\n  , 2.0)))));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\n  xlat_mutableuv2 = (((\n    (4.0 * xlat_mutableuv2)\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, xlat_mutableuv2);\n  xlat_mutablemask = (1.0 - ((0.9 * \n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\n  ) * clamp (\n    (64.0 * tmpvar_6.xyz)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_6.xyz * xlat_mutableinten));\n  xlat_mutablem = (4.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((1.0 - \n    (fract(tmpvar_4) / 4.0)\n  )));\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\n    (xlat_mutablem + 1.0)\n  , 2.0)))));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\n  xlat_mutableuv2 = (((\n    (4.0 * xlat_mutableuv2)\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, xlat_mutableuv2);\n  xlat_mutablemask = (1.0 - ((0.9 * \n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\n  ) * clamp (\n    (64.0 * tmpvar_7.xyz)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_7.xyz * xlat_mutableinten));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (1.8 * xlat_mutableret1);\n  ret = tmpvar_8.xyz;\n }"}