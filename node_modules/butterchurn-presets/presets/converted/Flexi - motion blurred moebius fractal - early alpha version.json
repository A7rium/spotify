{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":2.155,"warpscale":0.591,"zoomexp":1.00016,"dx":0.00001,"dy":0.00001,"warp":8.31106,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0.03,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.c_inv_i=0;a.translation_x=0;a.q12=0;a.a_i=0;a.a_r=0;a.q18=0;a.q13=0;a.scale=0;a.q15=0;a.c_inv_r=0;a.angle=0;a.q11=0;a.bcad_r=0;a.b_r=0;a.q16=0;a.bcad_i=0;a.q17=0;a.q14=0;a.translation_y=0;a.translation_v=0;a.b_i=0;a.translation_u=0;","frame_eqs_str":"a.scale=1;a.angle=.2*a.time;a.translation_x=0;a.translation_y=.12;a.a_r=Math.cos(a.angle)*a.scale;a.a_i=Math.sin(a.angle)*a.scale;a.b_r=a.translation_x;a.b_i=a.translation_y;a.scale=1;a.angle=.3*Math.sin(.1337*a.time);a.translation_u=0;a.translation_v=-.2;a.q15=Math.cos(a.angle)*a.scale;a.q16=Math.sin(a.angle)*a.scale;a.q17=a.translation_u;a.q18=a.translation_v;a.c_inv_r=div(a.q15,a.q15*a.q15+a.q16*a.q16);a.c_inv_i=div(a.q16,a.q15*a.q15+a.q16*a.q16);a.q11=a.a_r*a.c_inv_r-a.a_i*\na.c_inv_i;a.q12=a.a_r*a.c_inv_i-a.a_i*a.c_inv_r;a.bcad_r=a.b_r*a.q15-a.b_i*a.q16-(a.a_r*a.q17-a.a_i*a.q18);a.bcad_i=a.b_r*a.q16-a.b_i*a.q15-(a.a_r*a.q18-a.a_i*a.q17);a.q13=a.bcad_r*a.c_inv_r-a.bcad_i*a.c_inv_i;a.q14=a.bcad_r*a.c_inv_i-a.bcad_i*a.c_inv_r;","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = q11;\n  tmpvar_1.y = q12;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q17;\n  tmpvar_2.y = q18;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv_orig - 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((tmpvar_3.x * q15) - (tmpvar_3.y * q16));\n  tmpvar_4.y = ((tmpvar_3.x * q16) - (tmpvar_3.y * q15));\n  vec2 tmpvar_5;\n  tmpvar_5 = ((tmpvar_4 * aspect.yx) + tmpvar_2);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((q13 * tmpvar_5.x) + (q14 * tmpvar_5.y));\n  tmpvar_6.y = ((q14 * tmpvar_5.x) - (q13 * tmpvar_5.y));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = mix ((texture (sampler_fc_main, fract(\n    ((tmpvar_6 / ((tmpvar_5.x * tmpvar_5.x) + (tmpvar_5.y * tmpvar_5.y))) + tmpvar_1)\n  )) * 0.94).xyz, texture (sampler_main, uv_orig).xyz, vec3(0.75, 0.75, 0.75));\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }"}