{"baseVals":{"rating":0,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wrap":0,"brighten":1,"wave_a":0.004,"zoom":0.96,"rot":-18.84024,"warp":0.00052,"ob_r":0.9,"ob_g":0.5,"ob_b":0.4,"ob_a":0.2,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0.5,"mv_g":0.4,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q1=0;a.q9=0;a.sample1=0;a.difftime=0;a.diff=0;a.edge=0;a.volavg=0;a.bit2=0;a.vol=0;a.q2=0;a.q3=0;a.basssum=0;a.sample2=0;a.state=0;","frame_eqs_str":"a.basstime+=.06*a.bass;a.q1=a.basstime;a.q9=.000005*a.basstime;a.basstime=.00001<Math.abs(below(a.basstime,1E3))?1E3:a.basstime;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=\na.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime+=.03*a.diff;a.q2=a.difftime;a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;a.monitor=a.q1;a.ob_r=above(a.q3,2.5);a.ob_g=.5+.25*Math.sin(.478*a.basstime)+.25*Math.sin(.578*a.basstime);a.ob_b=\n.5+.25*Math.sin(.535*a.basstime)+.25*Math.sin(.635*a.basstime);","pixel_eqs_str":"a.zoom=.98;a.rot=0;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  tmpvar_1.xyz = (texture (sampler_main, ((\n    ((((\n      (tmpvar_2 * (0.97 + (rad * 0.02)))\n     + 0.5) + (\n      ((texture (sampler_blur1, ((tmpvar_2 * 0.9) + 0.5)).xyz * scale1) + bias1)\n     * 0.1).xy) - 0.01) - 0.5)\n   * \n    (1.0 + (rad * 0.01))\n  ) + 0.5)).xyz - 0.002);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  float tmpvar_2;\n  tmpvar_2 = (1.0/(texsize.x));\n  float tmpvar_3;\n  tmpvar_3 = (1.0/(texsize.y));\n  ret_1 = (0.7333334 * texture (sampler_main, uv)).xyz;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = tmpvar_3;\n  ret_1 = (ret_1 + (-0.1333333 * texture (sampler_main, (uv + tmpvar_4))).xyz);\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = -(tmpvar_3);\n  ret_1 = (ret_1 + (-0.1333333 * texture (sampler_main, (uv + tmpvar_5))).xyz);\n  vec2 tmpvar_6;\n  tmpvar_6.x = -(tmpvar_2);\n  tmpvar_6.y = 0.0;\n  ret_1 = (ret_1 + (-0.1333333 * texture (sampler_main, (uv + tmpvar_6))).xyz);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_2;\n  tmpvar_7.y = 0.0;\n  ret_1 = (ret_1 + (-0.1333333 * texture (sampler_main, (uv + tmpvar_7))).xyz);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }"}