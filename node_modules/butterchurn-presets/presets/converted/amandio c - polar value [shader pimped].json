{"baseVals":{"rating":3,"gammaadj":1.14,"decay":1,"echo_zoom":0.872,"echo_orient":2,"wave_mode":7,"wave_thick":1,"darken_center":1,"brighten":1,"wave_a":99.8,"wave_scale":0.007,"wave_smoothing":0.5,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"zoom":1.0099,"cy":0.86,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0.002,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":40,"textured":1,"rad":0.19978,"tex_zoom":3.20324,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":20,"additive":1,"num_inst":1024,"x":0.38,"y":0.28,"rad":0.01,"g":1,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a[\"in\"]=0;a.sa=0;a[\"in\"]=0;a.t=0;a.sa=0;a.d=0;a[\"in\"]=0;a.x1=0;a.t=0;a.y1=0;a.t=0;a.z=0;a.d=0;a.z=0;a.x1=0;a.q6=0;a.z=0;a.y1=0;a.d=0;a.d=0;a.d=0;a.d=0;a.d=0;a.t=0;","frame_eqs_str":"a[\"in\"]=a.instance;a.sa=div(a[\"in\"],1024);a.t=6.28*a.sa+a.time;a.d=6*a.gmegabuf[Math.floor(.5*a[\"in\"])];a.x1=Math.sin(a.t);a.y1=Math.cos(a.t);a.z=.1+a.d;a.x=.5+div(a.z*a.x1,a.q6);a.y=.5+a.z*a.y1;a.r=.05+5*a.d*a.d;a.g=.03+3*a.d*a.d*a.d;a.r2=a.r;a.g2=a.g;a.ang=a.t;"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"scaling":81.9543,"smoothing":0.8,"a":0},"init_eqs_str":"a.i=0;a.i1=0;a.c=0;a.q1=0;","frame_eqs_str":"","point_eqs_str":"a.i+=1;a.i1=mod(a.i,512);a.c=mod(.5*a.q1,2);a.gmegabuf[Math.floor(a.i1)]=.00001<Math.abs(a.c)?a.gmegabuf[Math.floor(a.i1)]:a.value1;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.q6=0;a.bt=0;a.q1=0;for(var b=a.i=0;1E4>b;b++)a.gmegabuf[Math.floor(a.i)]=0,a.i+=1;","frame_eqs_str":"a.wave_a=0;a.warp=0;a.decay=.5;a.zoom=1.02;a.q6=a.aspecty;a.bt+=div(a.bass,a.fps);a.q1=a.bt;","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutablec;\nvec2 xlat_mutabletmp;\nvec2 xlat_mutableuv6;\n shader_body { \n  vec2 uv_1;\n  vec2 zz_2;\n  xlat_mutablec = (((uv - 0.5) * 4.0) + vec2(-0.5, 0.0));\n  zz_2.x = ((xlat_mutablec.x * xlat_mutablec.x) - (xlat_mutablec.y * xlat_mutablec.y));\n  zz_2.y = ((2.0 * xlat_mutablec.x) * xlat_mutablec.y);\n  zz_2 = (zz_2 + xlat_mutablec);\n  xlat_mutabletmp = zz_2;\n  zz_2.x = ((zz_2.x * zz_2.x) - (zz_2.y * zz_2.y));\n  zz_2.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  zz_2 = (zz_2 + xlat_mutablec);\n  xlat_mutabletmp = zz_2;\n  zz_2.x = ((zz_2.x * zz_2.x) - (zz_2.y * zz_2.y));\n  zz_2.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  zz_2 = (zz_2 + xlat_mutablec);\n  xlat_mutabletmp = zz_2;\n  zz_2.x = ((zz_2.x * zz_2.x) - (zz_2.y * zz_2.y));\n  zz_2.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  zz_2 = (zz_2 + xlat_mutablec);\n  xlat_mutabletmp = zz_2;\n  zz_2.x = ((zz_2.x * zz_2.x) - (zz_2.y * zz_2.y));\n  zz_2.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  zz_2 = (zz_2 + xlat_mutablec);\n  xlat_mutabletmp = zz_2;\n  zz_2.x = ((zz_2.x * zz_2.x) - (zz_2.y * zz_2.y));\n  zz_2.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  zz_2 = (zz_2 + xlat_mutablec);\n  uv_1 = (uv + (0.01 / zz_2.yx));\n  xlat_mutableuv6 = (0.4 * sin((\n    (uv_1 * 12.0)\n   + time)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.2 * (vec3((0.05 / sqrt(\n      dot (xlat_mutableuv6, xlat_mutableuv6)\n    ))) * roam_sin.xyz))\n  ) * 0.96) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = abs((fract(\n    (uv + 0.5)\n  ) - 0.5));\n  uv2_1 = (tmpvar_3 + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (tmpvar_3 + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (tmpvar_3 + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_6;\n  tmpvar_6 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (tmpvar_3 + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.14;\n  tmpvar_7.x = (tmpvar_4 - tmpvar_5);\n  tmpvar_7.y = (tmpvar_6 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_7)));\n  vec2 x_8;\n  x_8 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_8, x_8))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3) - (((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1) * (treb_att * (treb_att - q20))))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  ret_2 = (1.0 - exp(-(ret_2)));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }"}