{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wrap":0,"wave_a":0.868,"wave_scale":1.22,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":1.34784,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0,"wave_b":0,"ob_size":0.005,"ob_r":0.51,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"num_inst":8,"rad":0.18167,"r":0,"b":1,"a":0.1,"g2":0,"b2":1,"border_r":0,"border_g":0},"init_eqs_str":"a.db=0;a.db=0;a.bb=0;a.bb=0;a.db=0;a.dt=0;a.db=0;a.tt=0;a.tt=0;a.dt=0;a.bt=0;a.bb=0;a.tt=0;a.vv=0;a.vv=0;a.db=0;a.bt=0;a.bb=0;a.tt=0;a.vv=0;","frame_eqs_str":"a.db=.5*a.db+.2*a.bass;a.bb+=.1*a.db;a.dt=.5*a.db+.2*a.treb;a.tt+=.1*a.dt;a.bt=a.bb-a.tt;a.vv=a.vv+.05*a.db+.05*a.bt;a.x=div(a.instance,a.num_inst-1);a.y=.5+.015*(a.bb-a.tt)*Math.sin(.01*a.vv);"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":8,"rad":0.18167,"a":0.3,"r2":1,"g2":0,"border_g":0,"border_b":0},"init_eqs_str":"a.db=0;a.db=0;a.bb=0;a.bb=0;a.db=0;a.dt=0;a.db=0;a.tt=0;a.tt=0;a.dt=0;a.bt=0;a.bb=0;a.tt=0;a.vv=0;a.vv=0;a.db=0;a.bt=0;a.tt=0;a.bb=0;a.vv=0;a.tt=0;a.bb=0;a.vv=0;","frame_eqs_str":"a.db=.5*a.db+.2*a.bass;a.bb+=.1*a.db;a.dt=.5*a.db+.2*a.treb;a.tt+=.1*a.dt;a.bt=a.bb-a.tt;a.vv=a.vv+.05*a.db+.05*a.bt;a.y=.5+.025*Math.cos(div(6.28*(a.instance+.5),a.num_inst-1))*(a.tt-a.bb)*Math.sin(.01*a.vv);a.x=.5+.025*Math.sin(div(6.28*(a.instance+.5),a.num_inst-1))*(a.tt-a.bb)*Math.sin(.01*a.vv);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.dt=0;a.q1=0;a.dm=0;a.mm=0;a.tt=0;a.db=0;a.bb=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.zoom=1;a.db=.75*a.db+.25*a.bass_att;a.bb+=.1*a.db;a.dt=.75*a.dt+.25*a.treb_att;a.tt+=.1*a.dt;a.dm=.75*a.dm+.25*a.mid_att;a.mm+=.1*a.dm;a.q2=Math.sin(.225*a.bb+a.time-.25*a.tt);a.q3=Math.cos(.25*a.bb+a.time-.235*a.tt);a.q1=.2+.9*Math.sin(.25*a.mm+a.time-.125*a.tt-.125*a.bb);","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n  ).x * 0.02));\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  ).y * 0.02));\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\n  ).z * 0.02));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.04));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 my_uv2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.47;\n  tmpvar_3.y = q1;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv_orig - 0.5) * vec2(1.6, 1.6));\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((tmpvar_4.x * tmpvar_4.x) - (tmpvar_4.y * tmpvar_4.y));\n  tmpvar_5.y = ((2.0 * tmpvar_4.x) * tmpvar_4.y);\n  my_uv2_1 = (tmpvar_5 + tmpvar_3);\n  ret_2 = (0.5 + (0.5 * sin(\n    (((vec3((\n      (texture (sampler_main, my_uv2_1).x + (256.0 * texture (sampler_main, my_uv2_1).y))\n     + \n      (65536.0 * texture (sampler_main, my_uv2_1).z)\n    )) / 256.0) / 48.0) + (vec3(2.52, 1.38, 0.8022) * time))\n  )));\n  float tmpvar_6;\n  tmpvar_6 = texture (sampler_main, my_uv2_1).y;\n  ret_2 = (ret_2 * (1.0 - (\n    (tmpvar_6 * tmpvar_6)\n   * 1.05)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }"}