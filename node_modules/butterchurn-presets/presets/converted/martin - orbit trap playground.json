{"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"rot":-0.02,"dy":0.02,"warp":0.11001,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":34,"num_inst":274,"x":0.6,"rad":0.02217,"tex_zoom":60.80383,"g":0.6,"b":1,"a":0.9,"g2":0,"border_g":0.59,"border_b":0,"border_a":1},"init_eqs_str":"a.aspect=0;a.q32=0;a.speed=0;a.trel=0;a.speed=0;a.speed=0;a.k1=0;a.dist=0;a.k1=0;a.dist=0;a.dist=0;a.dist=0;a.fov=0;a.arg=0;a.dist=0;a.posx=0;a.fov=0;a.dist=0;a.arg=0;a.dist=0;a.posy=0;a.fov=0;a.dist=0;a.arg=0;a.dist=0;a.posx=0;a.posy=0;a.aspect=0;a.radi=0;a.dist=0;a.z1=1;a.z2=23;a.rr1=0;a.rr2=0;","frame_eqs_str":"a.aspect=a.q32;a.speed=.02;a.trel=Math.floor(a.time*a.speed)-a.time*a.speed+1;a.k1=1-div(a.instance,a.num_inst);a.dist=a.k1;a.dist-=Math.floor(a.dist);a.fov=.03;a.arg=a.dist+.2*a.time;a.posx=div(a.fov,a.dist)*(Math.sin(13*a.arg)+0*Math.sin(332*a.dist));a.posy=div(a.fov,a.dist)*(Math.cos(36*a.arg)+0*Math.sin(332*a.dist));a.x=.5+a.posx;a.y=.5+a.posy*a.aspect;a.a=1;a.border_a=Math.min(4*a.radi,1);a.a2=1;a.rad=div(.01,a.dist);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"a.dy=0;a.dx=0;a.rot=0;a.zoom=1;","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.9);\n  ret = tmpvar_1.xyz;\n }","comp":"vec2 xlat_mutablec;\nvec2 xlat_mutablezz;\n shader_body { \n  int n_1;\n  vec2 p0_2;\n  float trap1_3;\n  trap1_3 = 100.0;\n  p0_2 = (vec2(0.5, 0.6) - (uv * 0.2));\n  xlat_mutablec = (((\n    (uv_orig - 0.5)\n   * aspect.xy) / 10.0) + vec2(-0.5017, 0.6102));\n  xlat_mutablezz = vec2(0.0, 0.0);\n  n_1 = 0;\n  while (true) {\n    if ((n_1 > 60)) {\n      break;\n    };\n    vec2 tmpvar_4;\n    tmpvar_4.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n    tmpvar_4.y = ((2.0 * xlat_mutablezz.x) * xlat_mutablezz.y);\n    xlat_mutablezz = (tmpvar_4 + xlat_mutablec);\n    float tmpvar_5;\n    tmpvar_5 = dot (xlat_mutablezz, xlat_mutablezz);\n    if ((tmpvar_5 > 4.0)) {\n      n_1 = 1000;\n    };\n    vec2 x_6;\n    x_6 = (xlat_mutablezz - p0_2);\n    trap1_3 = min (trap1_3, sqrt(dot (x_6, x_6)));\n    n_1++;\n  };\n  vec3 tmpvar_7;\n  tmpvar_7.x = trap1_3;\n  tmpvar_7.y = (1.0 - trap1_3);\n  tmpvar_7.z = (1.0 - ((2.0 * trap1_3) * trap1_3));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = pow (tmpvar_7, vec3(4.0, 4.0, 4.0));\n  ret = tmpvar_8.xyz;\n }"}