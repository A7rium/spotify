{"baseVals":{"rating":3,"decay":0.96,"echo_zoom":1.905,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":0.009,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-0.8,"fshader":1,"sx":0.9803,"wave_r":0,"wave_g":0,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":0.47,"mv_x":64,"mv_y":48,"mv_dx":-0.28,"mv_l":0,"mv_g":0,"mv_b":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"rad":0.01,"r":0,"b":1,"g2":0,"a2":0.1,"border_a":0.006},"init_eqs_str":"a.pigtemp=0;a.pigtemp=0;a.pigtemp=0;a.t1=0;a.t2=0;a.t3=0;a.size=0;a.nc=0;a.xs=0;a.nc=0;a.nc=0;a.nc=0;a.nc=0;a.ys=0;a.nc=0;a.nc=0;a.nc=0;a.nc=0;a.zs=0;a.nc=0;a.nc=0;a.y1=0;a.ys=0;a.t1=0;a.zs=0;a.t1=0;a.z1=0;a.ys=0;a.t1=0;a.zs=0;a.t1=0;a.x1=0;a.z1=0;a.t2=0;a.xs=0;a.t2=0;a.z2=0;a.z1=0;a.t2=0;a.xs=0;a.t2=0;a.x2=0;a.x1=0;a.t3=0;a.y1=0;a.t3=0;a.y2=0;a.y1=0;a.t3=0;a.x1=0;a.t3=0;a.x3=0;a.x2=0;a.y3=0;a.y2=0;a.z3=0;a.z2=0;a.size=0;a.x3=0;a.z3=0;a.size=0;a.size=0;a.y3=0;a.z3=0;a.size=\n0;a.z3=0;","frame_eqs_str":"a.pigtemp=Math.floor(pow(4,a.bass+a.treb+a.mid));a.num_inst=.00001<Math.abs(above(a.pigtemp,1024))?1024:a.pigtemp;a.t1=div(a.time,5);a.t2=div(a.time,6);a.rad=.005+div(a.bass,100);a.t3=div(a.bass_att,70);a.b2=.7*a.treb-div(a.bass,2);a.r=div(a.instance,a.num_inst);a.g=Math.abs(div(a.treb_att,5)-a.bass);a.size=.3+div(a.bass_att,300);a.nc=sqrt(a.num_inst);a.xs=Math.sin(div(6.28*mod(a.instance,a.nc),a.nc))*Math.sin(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.ys=Math.cos(div(6.28*\nmod(a.instance,a.nc),a.nc))*Math.sin(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.zs=Math.cos(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.y1=a.ys*Math.cos(a.t1)-a.zs*Math.sin(a.t1);a.z1=a.ys*Math.sin(a.t1)+a.zs*Math.cos(a.t1);a.x1=a.z1*Math.sin(a.t2)+a.xs*Math.cos(a.t2);a.z2=a.z1*Math.cos(a.t2)-a.xs*Math.sin(a.t2);a.x2=a.x1*Math.cos(a.t3)-a.y1*Math.sin(a.t3);a.y2=a.y1*Math.cos(a.t3)+a.x1*Math.sin(a.t3);a.x3=a.x2;a.y3=a.y2;a.z3=a.z2;a.x=.5+a.size*div(a.x3,1+a.z3*a.size);a.y=.5+a.size*\ndiv(a.y3,1+a.z3*a.size);a.a=below(a.z3,0);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.vol3=0;a.q21=0;a.q6=0;a.midrun=0;a.q1=0;a.q9=0;a.pi23=0;a.q4=0;a.q26=0;a.bassrun=0;a.vol=0;a.q2=0;a.trebrun=0;a.vol2=0;a.q3=0;a.q7=0;a.q20=0;a.q8=0;","frame_eqs_str":"a.bassrun=a.bass+a.bassrun;a.trebrun=a.treb+a.trebrun;a.midrun=a.mid+a.midrun;a.vol=.03*(a.bassrun+a.midrun+a.trebrun);a.vol2=.001*a.vol;a.warp=0;a.zoom=1.4+.15*Math.cos(.42*a.vol);a.rot=.01*Math.sin(1.34*a.vol);a.dx=.005*Math.sin(.646*a.vol);a.dy=.005*Math.sin(.314*a.vol);a.cx=.5+.05*Math.sin(.497*a.vol);a.cy=.5+.05*Math.sin(.413*a.vol);a.pi23=1.33333333333332*Math.asin(-1);a.q6=.5*(Math.sin(a.vol-0*a.pi23)+1);a.q7=.5*(Math.sin(a.vol-1*a.pi23)+1);a.q8=.5*(Math.sin(a.vol-2*\na.pi23)+1);a.mv_r=a.q6;a.mv_g=a.q7;a.mv_b=a.q8;a.q9=a.q6+1;a.vol3=.3*(a.bass+a.mid+a.treb);a.q21=.05*a.vol;a.q26=a.vol3;a.q20=a.vol3;a.q1=.3*a.q6;a.q2=.3*a.q7;a.q3=.3*a.q8;a.q4=2*div(a.q8,a.q6);","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutablec;\nvec2 xlat_mutabletmp;\nvec2 xlat_mutablezz;\n shader_body { \n  vec3 ret_1;\n  xlat_mutablec = (((uv_orig - 0.5) * 4.0) + vec2(-0.5, 0.0));\n  xlat_mutablezz.x = ((xlat_mutablec.x * xlat_mutablec.x) - (xlat_mutablec.y * xlat_mutablec.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutablec.x) * xlat_mutablec.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  ret_1 = (((texture (sampler_noise_lq, \n    (abs(xlat_mutablezz) / 12.0)\n  ) * 0.15) / (\n    dot (xlat_mutablezz, xlat_mutablezz)\n   + 2.0)).xyz + texture (sampler_fc_main, (uv + (xlat_mutablezz * q18))).xyz);\n  ret_1 = ((ret_1 * 0.99) - 0.01);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":"vec2 xlat_mutabledz;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv2_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.0;\n  tmpvar_3.y = texsize.w;\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\n  uv2_1 = (uv - 0.5);\n  xlat_mutableuv3 = ((0.2 * uv2_1) + 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (time / 2.0);\n  xlat_mutableuv3 = ((0.2 * cos(\n    ((42.0 * fract(xlat_mutableuv3)) + tmpvar_4)\n  )) + (99.0 * xlat_mutabledz));\n  float tmpvar_5;\n  tmpvar_5 = clamp ((0.01 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_5)) + (0.9 * dot (vec3(tmpvar_5), vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\n  xlat_mutableuv3 = ((0.2 * uv2_1) + 0.5);\n  xlat_mutableuv3 = ((0.2 * cos(\n    ((42.0 * fract(xlat_mutableuv3)) + tmpvar_4)\n  )) + (99.0 * xlat_mutabledz));\n  float tmpvar_6;\n  tmpvar_6 = clamp ((0.01 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_6)) + (0.9 * dot (vec3(tmpvar_6), vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (xlat_mutableret1 + clamp ((\n    (16.0 * ((0.5 * texture (sampler_main, (uv + \n      (0.1 * xlat_mutabledz)\n    )).xyz) + 0.01))\n   * \n    (0.1 + xlat_mutableret1)\n  ), 0.0, 1.0));\n  ret = tmpvar_7.xyz;\n }"}