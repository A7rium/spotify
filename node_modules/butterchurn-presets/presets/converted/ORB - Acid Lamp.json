{"baseVals":{"rating":0,"decay":0.5,"echo_zoom":0.999609,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"solarize":1,"wave_a":0.001,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.667177,"tex_zoom":0.374092,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"a2":0.4},"init_eqs_str":"a.basstime=0;a.basstime=0;a.ob_r=0;a.basstime=0;a.ob_g=0;a.basstime=0;a.ob_b=0;a.basstime=0;","frame_eqs_str":"a.ang=a.basstime;a.tex_ang=Math.sin(a.basstime);a.ob_r=.5*Math.sin(1.12*a.basstime);a.ob_g=.5*Math.sin(1.5*a.basstime);a.ob_b=.5*Math.sin(2.12*a.basstime);"},{"baseVals":{"enabled":1,"textured":1,"rad":2.667177,"tex_zoom":0.377131,"g":1,"b":1,"a":0.7,"r2":0.8,"b2":1,"a2":0.5},"init_eqs_str":"a.tex_capture=0;","frame_eqs_str":"a.tex_capture=above(a.bass,1);"},{"baseVals":{"enabled":1,"sides":100,"r2":1},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.basstime=0;a.q2=0;a.q1=0;a.q4=0;a.q5=0;","frame_eqs_str":"a.basstime+=.0003*a.bass;a.q2=a.basstime;a.q1=.00001*a.basstime;a.q4=Math.cos(a.basstime);a.q5=Math.sin(a.basstime);","pixel_eqs_str":"a.zoom=1;a.rot=0;","warp":" shader_body { \n  float final_noise_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)].x = q4;\n  tmpvar_2[uint(0)].y = -(q5);\n  tmpvar_2[1u].x = q5;\n  tmpvar_2[1u].y = q4;\n  vec3 tmpvar_3;\n  tmpvar_3.xy = uv;\n  tmpvar_3.z = (q2 * 10.0);\n  final_noise_1 = ((texture (sampler_noisevol_lq, tmpvar_3) * 2.0) - 1.0).x;\n  final_noise_1 = (final_noise_1 + (0.5 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * 2.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.25 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * 4.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.125 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * 8.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = ((final_noise_1 + 1.0) * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = texture (sampler_main, (((\n    ((uv - 0.5) * tmpvar_2)\n   * \n    (1.0 - (rad * 0.01))\n  ) * final_noise_1) + 0.5)).xyz;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 retp_1;\n  vec3 ret_2;\n  ret_2 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (1.0 - ((ret_2 * \n    (1.0 - ret_2)\n  ) * 2.0));\n  vec3 tmpvar_4;\n  tmpvar_4.x = tmpvar_3.x;\n  tmpvar_4.yz = (tmpvar_3.yz * vec2(1.2, 1.2));\n  retp_1 = (1.0 - (tmpvar_4 * 0.5));\n  retp_1 = (1.0 - (retp_1 * (1.0 - retp_1)));\n  vec3 tmpvar_5;\n  tmpvar_5.x = (retp_1.z * 5.0);\n  tmpvar_5.y = retp_1.y;\n  tmpvar_5.z = ret_2.x;\n  ret_2 = (1.0 - tmpvar_5);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }"}