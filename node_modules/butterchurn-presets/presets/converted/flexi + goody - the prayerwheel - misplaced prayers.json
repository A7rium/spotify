{"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.scale=0;a.q6=0;a.q1=0;a.q5=0;a.angle=0;a.q11=0;a.q4=0;a.q2=0;a.q3=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.scale=8;a.angle=.2*-a.time;a.q1=a.scale*Math.cos(a.angle);a.q2=a.scale*Math.sin(a.angle);a.q3=0;a.q4=.3;a.scale=.8;a.angle=.2*a.time;a.q5=a.scale*Math.cos(a.angle);a.q6=a.scale*Math.sin(a.angle);a.q7=-.25;a.q8=.2;a.q11=div(1,Math.asin(1));","pixel_eqs_str":"","pixel_eqs":"","warp":"uniform sampler2D sampler_prayerwheel;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = roam_sin.x;\n  tmpvar_2.y = roam_cos.y;\n  vec2 tmpvar_3;\n  float tmpvar_4;\n  tmpvar_4 = (0.12 * time);\n  tmpvar_3.x = (tmpvar_4 + (0.18 * roam_sin.x));\n  tmpvar_3.y = (tmpvar_4 + (0.18 * roam_cos.y));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_prayerwheel, ((uv * (1.0 + \n    (0.3 * tmpvar_2)\n  )) + tmpvar_3));\n  ret_1.x = (tmpvar_5.x * sin((\n    (ang * 8.0)\n   + \n    (0.31 * time)\n  )));\n  ret_1.y = (tmpvar_5.y * (0.5 + sin(\n    ((ang * 4.0) + (0.21 * time))\n  )));\n  ret_1.z = (tmpvar_5.z * (0.5 + sin(\n    ((rad * 2.0) + (0.4 * time))\n  )));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":"vec2 xlat_mutabledenominator;\nvec2 xlat_mutablenumerator;\n shader_body { \n  vec2 uv_1;\n  vec2 spiral_2;\n  uv_1 = (((uv - 0.5) * aspect.xy) * 2.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((uv_1.x * q1) - (uv_1.y * q2));\n  tmpvar_3.y = ((uv_1.x * q2) + (uv_1.y * q1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = q3;\n  tmpvar_4.y = q4;\n  xlat_mutablenumerator = (tmpvar_3 + tmpvar_4);\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((uv_1.x * q5) - (uv_1.y * q6));\n  tmpvar_5.y = ((uv_1.x * q6) + (uv_1.y * q5));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q7;\n  tmpvar_6.y = q8;\n  xlat_mutabledenominator = (tmpvar_5 + tmpvar_6);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_7.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  uv_1 = ((tmpvar_7 / (\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\n   + \n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\n  )) * 0.5);\n  float tmpvar_8;\n  tmpvar_8 = (-(time) * 0.5);\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv_1 - 0.5);\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0) / max (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((tmpvar_9.x / tmpvar_9.y)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_9.x / tmpvar_9.y)));\n  if ((abs(tmpvar_9.y) > (1e-08 * abs(tmpvar_9.x)))) {\n    if ((tmpvar_9.y < 0.0)) {\n      if ((tmpvar_9.x >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(tmpvar_9.x) * 1.570796);\n  };\n  float tmpvar_13;\n  tmpvar_13 = -(tmpvar_10);\n  vec2 tmpvar_14;\n  tmpvar_14.x = (((tmpvar_13 * q11) * 3.0) + tmpvar_8);\n  tmpvar_14.y = (((aspect.w * \n    log(sqrt(dot (tmpvar_9, tmpvar_9)))\n  ) + (tmpvar_13 * q11)) - tmpvar_8);\n  spiral_2 = (0.5 + ((0.5 - \n    abs(((fract(\n      (tmpvar_14 * 0.5)\n    ) * 2.0) - 1.0))\n  ) * 0.95));\n  uv_1 = spiral_2;\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = texture (sampler_main, spiral_2).xyz;\n  ret = tmpvar_15.xyz;\n }"}