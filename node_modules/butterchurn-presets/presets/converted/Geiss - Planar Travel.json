{"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":7,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.303,"wave_scale":1.719,"wave_smoothing":0.522,"modwavealphastart":0.95,"modwavealphaend":1.47,"warpscale":3.138,"zoom":1.063,"warp":0.00054,"wave_r":0.6,"wave_g":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r=.5+.65*Math.sin(10.437*a.time+1);a.wave_g=.5+.65*Math.sin(18.344*a.time+2);a.wave_b=1;a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.21*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.21*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.003*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.003*(.6*Math.sin(.284*a.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=a.dx_residual;a.dy+=a.dy_residual;\na.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual;a.dy_residual=.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual;a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec2 uv_1;\n  uv_1.y = uv.y;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = roam_cos.x;\n  tmpvar_3.y = roam_sin.x;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize_noise_lq.zw * texsize.xy);\n  uv_1.x = (uv.x + ((0.02 * \n    ((texture (sampler_noise_lq, ((\n      (0.1 * tmpvar_4)\n     * uv) + (tmpvar_3 * 0.1))).y * 2.0) - 1.0)\n  ) * aspect.x));\n  vec2 tmpvar_5;\n  tmpvar_5.x = roam_sin.y;\n  tmpvar_5.y = -(roam_cos.y);\n  uv_1.x = (uv_1.x + ((0.04 * \n    ((texture (sampler_noise_lq, ((\n      (0.0125 * tmpvar_4)\n     * uv_1) + (tmpvar_5 * 0.03))).z * 2.0) - 1.0)\n  ) * aspect.x));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, uv_1);\n  ret_2.xy = tmpvar_6.xy;\n  ret_2.z = (tmpvar_6.z * 0.97);\n  ret_2.z = (ret_2.z + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  ).x - 0.5) / 256.0));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","comp":"uniform sampler2D sampler_seaweed;\n shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec2 tmpvar_3;\n  tmpvar_3.x = slow_roam_cos.x;\n  tmpvar_3.y = slow_roam_sin.y;\n  ret_1 = ((pow (tmpvar_2.z, 0.5) * (1.0 - texture (sampler_seaweed, \n    (tmpvar_3 + (vec2(0.1, 0.0) * tmpvar_2.z))\n  ))).xyz + (fract(\n    (tmpvar_2.z * 126.0)\n  ) * 0.07));\n  ret_1 = (ret_1 * (abs(\n    (uv.y - 0.5)\n  ) * 6.0));\n  ret_1 = (ret_1 * 0.8);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }"}