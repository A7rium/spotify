{"baseVals":{"rating":5,"gammaadj":1,"wave_mode":1,"modwavealphabyvolume":1,"wave_a":1.2,"wave_scale":3.587,"wave_smoothing":0.9,"wave_mystery":-0.28,"modwavealphastart":1.052,"modwavealphaend":1.61,"zoom":1.065,"warp":0.01459,"wave_r":0.7,"wave_g":0.65,"wave_b":0.7,"mv_x":31.2,"mv_y":2.28,"mv_l":2.5,"mv_b":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.2*(.9*Math.sin(2.753*a.time)+.4*Math.sin(2.315*a.time+1));a.wave_g+=.1*(.9*Math.sin(3.183*a.time+3)+.4*Math.sin(2.006*a.time+4));a.wave_b+=.1*(.9*Math.sin(2.393*a.time+5)+.4*Math.sin(2.733*a.time+2));a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.02*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.003*(.6*Math.sin(.471*a.time)+.4*Math.sin(.297*a.time));a.cy+=.003*(.6*Math.sin(.379*a.time)+.4*Math.sin(.351*a.time));a.dx+=.002*(.6*\nMath.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.rot+=.02*(Math.sin(2.134*a.time)+Math.sin(1.7134*a.time)+Math.sin(2.834*a.time));a.dx+=.0025*(Math.sin(1.134*a.time)+Math.sin(.7134*a.time)+Math.sin(2.334*a.time));a.dy+=.0025*(Math.sin(1.8834*a.time)+Math.sin(1.0144*a.time)+Math.sin(1.334*a.time));","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \n    ((tmpvar_3 * (1.0 - (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\n   + 0.5)).xyz) - 0.034);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = cos((13.5 * (uv.y / 0.9)));\n  tmpvar_1.y = sin((19.5 * (uv.x / 0.9)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_fc_main, (uv + (0.045 * tmpvar_1))).zyx);\n  ret = tmpvar_2.xyz;\n }"}