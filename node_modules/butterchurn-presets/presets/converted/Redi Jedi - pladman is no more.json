{"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.006596,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":0.06,"zoom":0.999514,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.4317,"ang":2.953098,"tex_zoom":0.707206,"a":0.5,"r2":1,"b2":1,"a2":0.5,"border_a":0},"init_eqs_str":"a.bb=0;a.bb=0;a.q10=0;a.q11=0;a.q7=0;a.q6=0;a.q10=0;a.q11=0;a.bb=0;a.q4=0;a.q5=0;a.q3=0;","frame_eqs_str":"a.bb+=.0001*(a.q10+a.q11);a.tex_ang=a.q7-a.q6;a.rad=.1+.1*(a.q10-a.q11);a.tex_zoom=div(.7-.4*Math.sin(20*(a.bb-a.q4+a.q5)+.5*mod(a.q3,8)),a.rad);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"sep":20,"spectrum":1,"thick":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=pow(a.sample,.5);a.y=Math.max(a.value2*mod(a.frame,2),.5*a.bass_att-.3*a.treb_att)-Math.min(.5*a.bass_att-.3*a.treb_att,a.value1*(1-mod(a.frame,2)));a.r=a.value1-a.bass;a.g=a.value2-a.treb;a.b=1-(a.value1+a.value2+a.mid);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.lbbtime=0;a.lbbtime2=0;a.avgbbeatrate=0;a.mtime2=0;a.beatb=0;a.q12=0;a.q13=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.avgvol=0;a.q9=0;a.lavgdt=0;a.beatbhard=0;a.avgdt=0;a.q11=0;a.beatb2=0;a.q10=0;a.bool=0;a.ph=0;a[\"const\"]=0;a.q4=0;a.lbass=0;a.rawbeatb=0;a.db=0;a.vol=0;a.bc=0;a.q2=0;a.ltreb=0;a.phase=0;a.q3=0;a.q7=0;a.lavgdb=0;a.mtime=0;a.q8=0;a.avgdb=0;a.db=.001;a.dt=.001;a.avgdb=a.bass-a.bass_att;a.avgdt=a.treb-a.treb_att;a.lbass=0;a.ltreb=0;a.avgbbeatrate=.5;a.beatb=0;a.beatb2=0;\na.lbbtime2=a.time;a.rawbeatb=0;a.lbbtime=a.time;a.avgdb=.01;a.vol=0;a.avgvol=1;a.ph=0;a.phase=0;a.bool=0;a[\"const\"]=.01;a.mtime=100+1E3*a.bass_att;a.mtime2=100+1E3*a.treb_att;","frame_eqs_str":"a.db=(a.bass-a.lbass)*a.fps;a.dt=(a.treb-a.ltreb)*a.fps;a.ltreb=a.treb;a.lbass=a.bass;a.avgdb=.9*a.avgdb+.1*Math.abs(a.db);a.avgdt=.9*a.avgdt+.1*Math.abs(a.dt);a.lavgdb=.99*a.lavgdb+.01*Math.abs(a.db);a.lavgdt=.99*a.lavgdt+.01*Math.abs(a.dt);a.rawbeatb=above(Math.abs(a.db),a.avgdt);a.beatb=a.rawbeatb*above(a.time-a.lbbtime,.75*a.avgbbeatrate);a.beatb2=a.beatb*above(Math.abs(a.dt),a.avgdb);a.beatbhard=a.beatb2*(Math.abs(a.db)-3*a.avgdb);a.avgbbeatrate=a.beatb*(.99*a.avgbbeatrate+\n.01*(a.time-a.lbbtime))+(1-a.beatb)*(a.avgbbeatrate+.00001*(3-a.avgbbeatrate));a.lbbtime2=a.time*a.beatb2+(1-a.beatb2)*a.lbbtime2;a.lbbtime=a.time*a.beatb+(1-a.beatb)*a.lbbtime;a.ph=(a.time-a.lbbtime2)*div(60,a.avgbbeatrate)*a[\"const\"];a.phase=Math.max(Math.min(a.ph,1),0);a[\"const\"]=a[\"const\"]*(1-a.beatb2)+a.beatb2*(a[\"const\"]+.001*a.bool);a.bool=below(a.phase,.98)*(.99-a.ph)-.5*above(a.phase,.98)*a.ph;a.bc+=a.beatb;a.vol=a.rawbeatb*Math.abs(a.db)*.001;a.avgvol=.999*a.avgvol+.01*a.vol;a.mtime+=(Math.min(.01*\na.avgdt,.25)-.01*a.beatbhard*a.dt)*div(1,a.fps);a.mtime2+=(Math.min(.01*a.avgdb,.25)+.01*a.beatbhard*a.db)*div(1,a.fps);a.q1=a.phase;a.q2=div(60,a.avgbbeatrate);a.q3=a.bc;a.q4=a.mtime;a.q5=a.mtime2;a.q6=.5*Math.sin(2*a.mtime)+.5;a.q7=.5*Math.sin(2*a.mtime2)+.5;a.q8=.5*Math.sin(10*a.mtime)+.5;a.q9=.5*Math.sin(10*a.mtime2)+.5;a.q10=a.avgdb;a.q11=a.avgdt;a.q12=a.lavgdb;a.q13=a.lavgdt;a.monitor=a.q7;a.decay=1;a.warp=0;a.wrap=1;a.zoom=1;a.ob_r=a.q8;a.ob_g=a.q7;a.ob_b=a.q6;","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec2 newuv_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv_orig);\n  float tmpvar_3;\n  tmpvar_3 = ((tmpvar_2.y - tmpvar_2.z) * 0.1);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.5 + (q7 * 0.3));\n  tmpvar_4.y = (0.5 + (q6 * 0.3));\n  float tmpvar_5;\n  tmpvar_5 = sin(tmpvar_3);\n  float tmpvar_6;\n  tmpvar_6 = cos(tmpvar_3);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((uv_orig.x - tmpvar_4.x) * tmpvar_6) - ((uv_orig.y - tmpvar_4.y) * tmpvar_5));\n  tmpvar_7.y = (((uv_orig.x - tmpvar_4.x) * tmpvar_5) + ((uv_orig.y - tmpvar_4.y) * tmpvar_6));\n  newuv_1 = (tmpvar_7 + tmpvar_4);\n  newuv_1 = (newuv_1 - vec2(0.5, 0.5));\n  newuv_1 = (newuv_1 * (1.0 + (tmpvar_2.x * 0.1)));\n  newuv_1 = (newuv_1 + vec2(0.5, 0.5));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (0.9996 * texture (sampler_main, newuv_1).xyz);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.98);\n  ret = tmpvar_1.xyz;\n }"}