{"baseVals":{"rating":1,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.498,"warpscale":9.738,"zoom":1.0003,"warp":7.52389,"sy":1.1046,"ob_size":0.5,"ob_a":1,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":1.28,"mv_y":1.248,"mv_l":0,"mv_b":0,"b1x":0.5,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.w=0;a.q25=0;a.q22=0;a.q21=0;a.q1=0;a.dm=0;a.mm=0;a.tt=0;a.q23=0;a.q24=0;a.initframes=0;a.q26=0;a.initializing=0;a.framecount=0;a.stages=0;a.db=0;a.ddt=0;a.bb=0;a.q27=0;a.q28=0;a.stage=0;a.initialized=0;a.framecount=0;a.stage=1;a.initframes=128;a.stages=16;","frame_eqs_str":"a.initializing=below(a.framecount,a.initframes);a.ib_a=1-a.framecount;a.ob_a=a.ib_a;a.mv_a=1;a.wave_a=0;a.zoom=1;a.framecount+=1;a.stage+=equal(mod(a.framecount*a.stages,a.initframes),0);a.stage=.00001<Math.abs(a.initializing)?a.stage:1;a.q1=a.stage;a.db=.98*a.db+.2*a.bass;a.bb+=.1*a.db;a.ddt=.98*a.ddt+.2*a.treb;a.tt+=.1*a.ddt;a.dm=.98*a.dm+.2*a.mid;a.mm+=.1*a.dm;a.q23=.5+.25*Math.sin(.1*(a.bb-a.mm));a.q24=.5+.25*Math.sin(.1*(a.tt-a.mm));a.w=.1*(a.bb-a.tt);a.q26=.25-.025*(a.db-\na.ddt);a.q21=Math.sin(a.w);a.q22=Math.cos(a.w);a.q27=Math.sin(-a.w);a.q28=Math.cos(-a.w);a.q25=div(1,a.q26);","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  int i_1;\n  vec2 m_2;\n  vec2 d_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = mix (uv_orig, uv, vec2(0.33, 0.33));\n  d_3 = texsize.zw;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig + ((vec2(0.0, 1.0) * texsize.zw) * q1));\n  vec3 tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_7 = vec3(greaterThan (texture (sampler_fw_main, (tmpvar_6 - tmpvar_8)).yyy, vec3(0.5, 0.5, 0.5)));\n  vec3 tmpvar_9;\n  tmpvar_9 = vec3(greaterThan (texture (sampler_fw_main, (tmpvar_6 + tmpvar_8)).yyy, vec3(0.5, 0.5, 0.5)));\n  ret_4.y = ((tmpvar_7 * (1.0 - tmpvar_9)) + ((1.0 - tmpvar_7) * tmpvar_9)).x;\n  m_2 = (vec2(0.0, 0.7) + ((\n    (0.5 + ((tmpvar_5 - 0.5) * aspect.wz))\n   - 0.5) * 0.6));\n  i_1 = 0;\n  while (true) {\n    bool tmpvar_10;\n    if ((i_1 < 30)) {\n      tmpvar_10 = (dot (m_2, m_2) < 5.0);\n    } else {\n      tmpvar_10 = bool(0);\n    };\n    if (!(tmpvar_10)) {\n      break;\n    };\n    vec2 tmpvar_11;\n    tmpvar_11.x = ((m_2.x * m_2.x) - (m_2.y * m_2.y));\n    tmpvar_11.y = ((m_2.x * m_2.y) * 2.0);\n    m_2 = (tmpvar_11 + vec2(0.3, 0.47));\n    i_1++;\n  };\n  ret_4.x = ((dot (m_2, m_2) * 0.04) + ((0.18 - \n    (m_2.x * 0.08)\n  ) - (m_2.y * 0.1)));\n  vec2 tmpvar_12;\n  tmpvar_12 = mix (uv_orig, tmpvar_5, vec2(0.02, 0.02));\n  d_3 = (texsize.zw * 8.0);\n  vec2 tmpvar_13;\n  tmpvar_13.x = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_12 + (vec2(1.0, 0.0) * d_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (tmpvar_12 - (vec2(1.0, 0.0) * d_3))).xyz * scale1) + bias1)\n  )) * 0.5).z;\n  tmpvar_13.y = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_12 + (vec2(0.0, 1.0) * d_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (tmpvar_12 - (vec2(0.0, 1.0) * d_3))).xyz * scale1) + bias1)\n  )) * 0.5).z;\n  ret_4.z = texture (sampler_fc_main, (tmpvar_12 + (tmpvar_13 * texsize.zw))).z;\n  ret_4.z = (ret_4.z + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)).xyz - 0.5)\n   * 0.04) - 0.002).x);\n  ret_4.z = (ret_4.z + ((\n    (-(ret_4.y) * 0.008)\n   - \n    (ret_4.x * 0.009)\n  ) + 0.004));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_4;\n  ret = tmpvar_14.xyz;\n }","comp":"vec2 xlat_mutablefactorA;\n shader_body { \n  vec2 uv_1;\n  vec2 uv_rr_2;\n  vec2 uv_r_3;\n  xlat_mutablefactorA = (uv - vec2(0.5, 0.5));\n  vec2 tmpvar_4;\n  tmpvar_4.x = -((xlat_mutablefactorA.y * -1024.0));\n  tmpvar_4.y = (xlat_mutablefactorA.x * -1024.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_4.x;\n  tmpvar_5.y = -(tmpvar_4.y);\n  uv_1 = (vec2(-100.0, 100.0) * (tmpvar_5 / (\n    (tmpvar_4.x * tmpvar_4.x)\n   + \n    (tmpvar_4.y * tmpvar_4.y)\n  )).yx);\n  uv_1 = (0.5 + ((\n    (1.0 - abs(((\n      fract((mix ((0.5 + \n        (((0.5 + (\n          (uv - 0.5)\n         * vec2(1.1, 0.81))) - 0.5) * 2.0)\n      ), (uv_1 + 0.5), vec2(0.5, 0.5)) * 0.5))\n     * 2.0) - 1.0)))\n   - 0.5) * 0.98));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q23;\n  tmpvar_6.y = q24;\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv_1 - tmpvar_6) * aspect.xy);\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((q22 * tmpvar_7.x) - (q21 * tmpvar_7.y));\n  tmpvar_8.y = ((q21 * tmpvar_7.x) + (q22 * tmpvar_7.y));\n  uv_r_3 = (q25 * tmpvar_8);\n  uv_r_3 = (tmpvar_6 + (uv_r_3 * aspect.zw));\n  uv_r_3 = (1.0 - abs((\n    (fract((uv_r_3 * 0.5)) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_9;\n  tmpvar_9 = ((uv_r_3 - tmpvar_6) * aspect.xy);\n  vec2 tmpvar_10;\n  tmpvar_10.x = ((q28 * tmpvar_9.x) - (q27 * tmpvar_9.y));\n  tmpvar_10.y = ((q27 * tmpvar_9.x) + (q28 * tmpvar_9.y));\n  uv_rr_2 = (q26 * tmpvar_10);\n  uv_rr_2 = (tmpvar_6 + (uv_rr_2 * aspect.zw));\n  uv_1 = uv_rr_2;\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = (((\n    pow (hue_shader, vec3(4.0, 4.0, 4.0))\n   * vec3(\n    (((-(\n      (((2.0 * texture (sampler_main, (uv_rr_2 + \n        (vec2(1.0, 0.0) * texsize.zw)\n      )).xyz) - (2.0 * texture (sampler_main, (uv_rr_2 + \n        (vec2(-1.0, 0.0) * texsize.zw)\n      )).xyz)) * 0.5)\n    .z) + (\n      ((2.0 * texture (sampler_main, (uv_rr_2 + (vec2(0.0, 1.0) * texsize.zw))).xyz) - (2.0 * texture (sampler_main, (uv_rr_2 + (vec2(0.0, -1.0) * texsize.zw))).xyz))\n     * 0.5).z) * 8.0) + 0.1)\n  )) + (texture (sampler_main, uv_rr_2).z * 0.85)) - 0.08);\n  ret = tmpvar_11.xyz;\n }"}