{"baseVals":{"rating":4,"gammaadj":2.7,"decay":0.99,"echo_zoom":1.216,"echo_alpha":0.8,"invert":1,"wave_a":0.001,"dx":0.00001,"dy":0.00001,"warp":0.01,"ob_size":0.005,"ob_g":1,"ob_a":1,"ib_size":0.1,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"num_inst":13,"r":0,"b":1,"a":0.6,"g2":0,"b2":0.5,"a2":0.5,"border_a":0.6},"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.x=a.q1+Math.floor(randint(15))*a.bass_att*.02;a.y=a.q2+Math.floor(randint(15))*a.mid_att*.02;a.rad=.076+.004*Math.floor(randint(11));a.b=.35+.2*Math.sin(.73*a.time)+.001*Math.floor(randint(100));a.b2=.35+.2*Math.sin(.73*a.time)+.001*Math.floor(randint(100));a.g=.55+.125*Math.sin(.43*a.time)+.001*Math.floor(randint(100));a.g2=.55+.125*Math.sin(.43*a.time)+.001*Math.floor(randint(100));"},{"baseVals":{"enabled":1,"thickoutline":1,"num_inst":14,"rad":0.0999,"r":0,"a":0.6,"g2":0,"a2":0.5,"border_a":0.6},"init_eqs_str":"a.q2=0;a.q1=0;","frame_eqs_str":"a.x=a.q2+Math.floor(randint(15))*a.mid_att*.02;a.y=1-a.q1+Math.floor(randint(15))*a.treb_att*.02;a.rad=.076+.004*Math.floor(randint(11));a.r=.4+.2*Math.sin(.53*a.time)+.001*Math.floor(randint(100));a.r2=.4+.2*Math.sin(.53*a.time)+.001*Math.floor(randint(100));a.b=.55+.12*Math.sin(.63*a.time)+.001*Math.floor(randint(100));a.b2=.55+.12*Math.sin(.63*a.time)+.001*Math.floor(randint(100));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"a.wave_r-=.4*a.bass;a.wave_b-=.4*a.treb;a.wave_g-=.4*a.mid;a.mv_l+=.2*a.bass;a.mv_r+=.7*a.wave_r;a.mv_b+=.7*a.wave_b;a.mv_g+=.7*a.wave_g;a.rot+=.8*a.bass*Math.min(.07*sqr(div(a.zoom,a.treb_att)),.07*sqr(div(a.zoom,a.bass_att)));","pixel_eqs_str":"a.zoom=a.zoom+.019+.3*Math.min((.55-a.rad)*Math.max(a.bass_att,a.bass),.3*(.55-a.rad)*Math.sin(a.bass));","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 3.0));\n  vec3 tmpvar_2;\n  tmpvar_2 = fract((ret_1 - 0.005));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv).xxx;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((pow (\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)), tmpvar_1, pow (tmpvar_1, vec3(0.5, 0.5, 0.5)))\n  , vec3(0.5, 1.2, 8.0)) * 1.25) - 0.25);\n  ret = tmpvar_2.xyz;\n }"}