{"baseVals":{"rating":5,"gammaadj":1,"wave_mode":2,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":8.2,"wave_scale":0.665,"wave_smoothing":0.9,"modwavealphastart":0.87,"modwavealphaend":1.25,"zoom":1.035,"warp":0.01605,"wave_r":0.8,"wave_g":0.8,"wave_b":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.3*(.9*Math.sin(1.753*a.time)+.4*Math.sin(1.315*a.time+1));a.wave_g+=.3*(.9*Math.sin(2.883*a.time+3)+.4*Math.sin(1.006*a.time+4));a.wave_b+=.3*(.9*Math.sin(1.393*a.time+5)+.4*Math.sin(2.733*a.time+2));a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.001*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.003*(.6*Math.sin(.471*a.time)+.4*Math.sin(.297*a.time));a.cy+=.003*(.6*Math.sin(.379*a.time)+.4*Math.sin(.351*a.time));a.dx+=.001*(.6*\nMath.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.rot+=.01*(Math.sin(2.134*a.time)+Math.sin(1.7134*a.time)+Math.sin(2.834*a.time));a.dx+=.001*(Math.sin(1.134*a.time)+Math.sin(.7134*a.time)+Math.sin(2.334*a.time));a.dy+=.001*(Math.sin(1.8834*a.time)+Math.sin(1.0144*a.time)+Math.sin(1.334*a.time));","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.98)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.98)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.95)).xyz;\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \n    (uv - (tmpvar_2 * 2.0))\n  ) * 0.95)).xyz * 0.99);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv2_1).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv2_1).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = texture (sampler_main, uv2_1).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_5;\n  tmpvar_5.z = 0.1;\n  tmpvar_5.x = (tmpvar_2 - tmpvar_3);\n  tmpvar_5.y = (tmpvar_4 - texture (sampler_main, uv2_1).x);\n  vec3 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_5);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((\n    (vec3(1.32, 1.164, 1.44) * clamp (dot (tmpvar_6, vec3(0.9070111, -0.3930381, 0.1511685)), 0.0, 1.0))\n   + \n    (vec3(1.44, 0.64, 1.2) * clamp (dot (tmpvar_6, vec3(-0.554487, 0.8317305, 0.02772435)), 0.0, 1.0))\n  ) * 2.0) - 0.4);\n  ret = tmpvar_7.xyz;\n }"}