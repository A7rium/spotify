{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"wave_thick":1,"darken_center":1,"wave_a":1,"wave_scale":0.797,"wave_smoothing":0,"wave_mystery":-0.5,"warpscale":1.331,"zoom":0.9995,"rot":0.04,"cx":0.56,"cy":0.8,"warp":0.01,"sx":0.97237,"wave_g":0.7,"wave_b":0.5,"ob_size":0.005,"ob_a":0.2,"ib_size":0.005,"ib_r":0,"ib_g":1,"ib_b":0,"ib_a":0.31,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.xdecay=0;a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(.825*a.time)+.4*Math.sin(.915*a.time));a.wave_g+=.35*(.6*Math.sin(.9*a.time)+.4*Math.sin(1.025*a.time));a.wave_b+=.35*(.6*Math.sin(.81*a.time)+.4*Math.sin(.95*a.time));a.cx+=.225*(.6*Math.sin(.35*a.time)+.4*Math.sin(.35*a.time));a.cy+=.225*(.6*Math.sin(.35*a.time)+.4*Math.sin(.35*a.time));a.xdecay=a.zoom;a.wave_y+=.2*Math.sin(1.85*a.time);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*\n(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,2)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2))*a.dx_residual;a.dy_residual=.012*equal(a.bass_thresh,2)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2))*a.dy_residual;a.ib_r=Math.max(Math.min(.5+a.wave_r,.99),0);a.ib_b=Math.max(Math.min(.5+a.wave_b,.99),0);a.ib_g=Math.max(Math.min(.5+a.wave_g,.99),0);a.monitor=5*a.dx_residual;a.mv_l=200;a.mv_x=1.7-10*a.dx_residual*a.bass_thresh;a.mv_y=60-100*a.dy_residual;a.mv_g=.5+30*a.dx_residual;\na.mv_b=.5+30*a.dy_residual;a.mv_r=Math.min(.5+.25*Math.sin(.415*a.time)+.25*(a.bass-1),.999);a.mv_a=.41;a.wave_mystery=2*a.bass_thresh+.3*a.time;a.monitor=a.wave_mystery;","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \n    ((tmpvar_3 * (1.0 - (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\n   + 0.5)).xyz) - 0.034);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    -(((uv - 0.5) * 0.993))\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 1.5);\n  ret = tmpvar_1.xyz;\n }"}