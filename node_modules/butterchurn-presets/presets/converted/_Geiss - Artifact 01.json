{"baseVals":{"rating":5,"gammaadj":1.998,"echo_zoom":1.421,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":1.193,"wave_scale":1.489,"wave_smoothing":0,"modwavealphastart":0.87,"modwavealphaend":1.09,"warpscale":3.138,"zoom":1.003,"warp":0.09218,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.6,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.t2=0;","frame_eqs_str":"a.wave_r+=.365*(.6*Math.sin(4.437*a.time)+.4*Math.sin(3.97*a.time));a.wave_g+=.365*(.6*Math.sin(4.344*a.time)+.4*Math.sin(3.841*a.time));a.wave_b+=.365*(.6*Math.sin(4.251*a.time)+.4*Math.sin(3.055*a.time));a.rot+=.02*(.6*Math.sin(.181*a.time)+.09*Math.sin(-.279*a.time));a.zoom+=.025*(.6*Math.sin(.3131*a.time+2)+.4*Math.sin(-.479*a.time+4));a.decay-=.01*equal(mod(a.frame,6),0);a.t2=6*a.time;a.wave_x=.5+.2*(.6*Math.sin(.374*a.t2)+.4*Math.sin(.294*a.t2));a.wave_y=.5+.2*(.6*Math.sin(.393*\na.t2)+.4*Math.sin(.223*a.t2));","pixel_eqs_str":"a.dx=0;a.dy=0;a.dx+=2*div(Math.cos(29.37*a.y-1.9*a.time),a.pixelsx);a.dy+=2*div(Math.cos(33.21*a.x-1.7*a.time),a.pixelsy);a.dx+=1.5*div(Math.cos(77.55*a.y-2.1*a.time),a.pixelsx);a.dy+=1.5*div(Math.cos(78.32*a.x-2.4*a.time),a.pixelsy);","warp":" shader_body { \n  vec2 dxy_1;\n  dxy_1.x = cos(((154.56 * uv_orig.y) - time));\n  dxy_1.y = cos(((154.56 * uv_orig.x) - time));\n  float tmpvar_2;\n  tmpvar_2 = (time * 5.0);\n  dxy_1.x = (dxy_1.x + cos((\n    (412.16 * uv_orig.y)\n   - tmpvar_2)));\n  dxy_1.y = (dxy_1.y + cos((\n    (412.16 * uv_orig.x)\n   - tmpvar_2)));\n  dxy_1.y = (dxy_1.y + 0.15);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (max (texture (sampler_fw_main, (uv + \n    (dxy_1 * texsize.zw)\n  )).xyz, (texture (sampler_main, uv_orig).xyz * 0.8)) - 0.004);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 0.8) + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.7));\n  ret = tmpvar_1.xyz;\n }"}