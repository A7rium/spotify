{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":3.749209,"wave_scale":2.466119,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.11,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"textured":1,"rad":0.72072,"tex_zoom":1.242906,"g":0.4,"b":0.89,"a":0.8,"r2":1,"g2":0,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.tex_ang=.7+.3*Math.sin(a.time);"},{"baseVals":{"enabled":1,"sides":63,"textured":1,"x":0.81,"y":0.3,"rad":0.397104,"tex_ang":2.513274,"tex_zoom":0.907991,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.47,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":63,"x":0.323,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"a":0.7,"r2":1,"b2":1,"border_r":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=div(randint(100),100);a.y=div(randint(100),100);a.a=.8;a.r=0;a.b=1;a.g=1;a.a2=1;a.r2=0;a.b2=0;a.g2=0;a.rad=.02;"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.index2=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.movex=0;a.q1=0;a.dec_med=0;a.index3=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.crawl=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q32=0;a.q28=0;a.q30=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb+1;a.q27=a.index+1;a.q28=a.index2+1;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.movex+=div(.03*30,a.fps);a.q29=a.movex;a.movez+=div(2.1,a.fps);a.q30=a.movez;a.crawl+=div(.03*(2+a.q22),a.fps);a.q31=a.crawl;a.q32=2+Math.sin(div(a.time,7));a.monitor=a.index2;","pixel_eqs_str":"a.zoom=1;","warp":" shader_body { \n  float rota_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  rota_1 = (dot (texture (sampler_noise_hq, (\n    (tmpvar_3 / 5.0)\n   + q31)), vec4(0.32, 0.49, 0.29, 0.0)) * 2.0);\n  float tmpvar_4;\n  tmpvar_4 = sin(rota_1);\n  float tmpvar_5;\n  tmpvar_5 = cos(rota_1);\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)].x = tmpvar_5;\n  tmpvar_6[uint(0)].y = -(tmpvar_4);\n  tmpvar_6[1u].x = tmpvar_4;\n  tmpvar_6[1u].y = tmpvar_5;\n  uv6_2 = (tmpvar_3 * tmpvar_6);\n  float tmpvar_7;\n  tmpvar_7 = (4.0 * sqrt(dot (uv6_2, uv6_2)));\n  vec2 tmpvar_8;\n  tmpvar_8 = normalize((uv6_2 * tmpvar_7));\n  vec2 tmpvar_9;\n  tmpvar_9 = (((20.0 * \n    (sin(tmpvar_7) / cos(tmpvar_7))\n  ) * tmpvar_8) * tmpvar_8);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = (((\n    (vec3(clamp ((1.0 - abs(\n      (tmpvar_9.y * tmpvar_9.x)\n    )), 0.0, 1.0)) * vec3(1.0, 0.0, 0.0))\n   * \n    (1.0 - (2.0 * rad))\n  ) + (\n    (texture (sampler_main, uv).xyz * (1.0 - (0.1 * pow (rad, 3.0))))\n   * vec3(0.0, 1.0, 1.0))) - 0.004);\n  ret = tmpvar_10.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers2;\nvec2 xlat_mutabletmp;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec3 dots_1;\n  vec3 inten_3;\n  float dist_4;\n  dist_4 = 1.0;\n  inten_3 = vec3(1.0, 1.0, 1.0);\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  xlat_mutabletmp = ((uv - 0.5) * aspect.xy);\n  for (int n_2 = 0; n_2 <= 4; n_2++) {\n    dist_4 = (1.0 - fract((\n      (0.25 * float(n_2))\n     + q29)));\n    float tmpvar_5;\n    tmpvar_5 = (float(mod (float(n_2), 2.0)));\n    float tmpvar_6;\n    tmpvar_6 = (float(mod (float((n_2 + 1)), 2.0)));\n    xlat_mutableuv2.x = ((xlat_mutabletmp.x * tmpvar_5) - (xlat_mutabletmp.y * tmpvar_6));\n    xlat_mutableuv2.y = ((xlat_mutabletmp.x * tmpvar_6) + (xlat_mutabletmp.y * tmpvar_5));\n    xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n    inten_3.x = ((sqrt(dist_4) * (1.0 - \n      (dist_4 * dist_4)\n    )) * 2.0);\n    inten_3.y = 1.0;\n    inten_3.z = 1.0;\n    xlat_mutableuv3 = (((\n      (4.0 * xlat_mutableuv2)\n     * dist_4) + (0.7 * \n      float(n_2)\n    )) + ((0.2 * q29) * tmpvar_5));\n    xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_3));\n  };\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_8;\n  tmpvar_8 = (1.0/(((6.0 * \n    sqrt(dot (tmpvar_7, tmpvar_7))\n  ) + 0.1)));\n  vec2 tmpvar_9;\n  tmpvar_9.x = (ang / 2.0);\n  tmpvar_9.y = tmpvar_8;\n  xlat_mutableuv2.x = tmpvar_9.x;\n  xlat_mutableuv2.y = (tmpvar_8 + q30);\n  xlat_mutablers2 = (cos((xlat_mutableuv2 * 4.0)) + (xlat_mutableret1 * 12.0).xy);\n  dots_1 = (clamp ((vec3(0.0, 0.05, 0.45) * tmpvar_8), 0.0, 1.0) + ((\n    (0.5 + q22)\n   * \n    (1.0 - rad)\n  ) * clamp (\n    (0.05 / sqrt(dot (xlat_mutablers2, xlat_mutablers2)))\n  , 0.0, 1.0)));\n  vec3 tmpvar_10;\n  tmpvar_10.yz = vec2(0.6, 0.3);\n  tmpvar_10.x = (q26 / 2.0);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = (((xlat_mutableret1 * tmpvar_10) - (\n    (2.0 * xlat_mutableret1.x)\n   * \n    (1.0 - dots_1)\n  )) + ((\n    (0.4 * q32)\n   * dots_1) * clamp (\n    (1.0 - (2.0 * xlat_mutableret1.x))\n  , 0.0, 1.0)));\n  ret = tmpvar_11.xyz;\n }"}