{"baseVals":{"rating":4,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":0.653,"wave_smoothing":0,"wave_mystery":-0.5,"warpscale":0.107,"zoomexp":0.34421,"fshader":1,"zoom":2.78167,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":25.6,"mv_y":9.6,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.midif=0;a.trebif=0;a.trebfix=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.bassfix=0;a.q23=0;a.q24=0;a.q16=0;a.q26=0;a.midfix=0;a.q17=0;a.q27=0;a.q14=0;a.bassif=0;a.q21=div(1,Math.asin(1));","frame_eqs_str":"a.q21=.5;a.q22=-Math.sin(.5*a.time);a.q23=0;a.q24=1;a.q25=div(.5,Math.asin(1));a.q26=.3*a.time;a.q27=.6*-a.time;a.bassfix=.05+.01*a.bass;a.midfix=.05+.01*a.mid;a.trebfix=.05+.01*a.treb;a.bassif=.00001<Math.abs(above(a.bass_att,1))?a.bassif+a.bassfix:.00001<Math.abs(above(a.bassif,85))?0:.96*a.bassif;a.midif=.00001<Math.abs(above(a.mid_att,1))?a.midif+a.midfix:.00001<Math.abs(above(a.midif,.85))?0:.96*a.midif;a.trebif=.00001<Math.abs(above(a.treb_att,1))?a.trebif+a.trebfix:.00001<\nMath.abs(above(a.trebif,.85))?0:.96*a.trebif;a.q12=a.bassif;a.q13=a.midif;a.q14=a.trebif;a.q15=Math.abs(Math.cos(a.bassif-a.time));a.q16=Math.abs(Math.cos(a.midif-a.time));a.q17=Math.abs(Math.cos(a.trebif-a.time));","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec3 mret_1;\n  vec3 ret_2;\n  mret_1.xz = (texture (sampler_noise_hq, fract((uv_orig * texsize.zw))).xyz - texture (sampler_noise_lq, (uv / (uv_orig - texsize_noise_lq.zw))).xyz).xz;\n  mret_1.y = texture (sampler_noise_hq, fract(uv)).y;\n  mret_1.x = (mret_1.x * (0.5 + (\n    (0.2 * sin(((rad * 5.0) + (time * 6.0))))\n   * q12)));\n  mret_1.y = (mret_1.y * ((0.5 + \n    (0.2 * sin(((rad * 40.0) + (time * 8.4))))\n  ) + (0.1 * q13)));\n  mret_1.z = (mret_1.z * ((0.5 + \n    (0.2 * sin(((rad * 10.0) - (time * 4.3))))\n  ) + (0.1 * q14)));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (0.95 + (0.2 * q17));\n  tmpvar_3.y = (0.95 + (0.2 * q15));\n  tmpvar_3.z = (0.95 + (0.2 * q16));\n  ret_2 = (texture (sampler_noise_hq, uv).xxx * tmpvar_3);\n  ret_2 = mix (ret_2, mret_1, vec3(0.45, 0.45, 0.45)).zxy;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","comp":"vec2 xlat_mutabledenominator;\nvec2 xlat_mutablenumerator;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 xy1_2;\n  vec2 uvm_3;\n  vec2 spiral_4;\n  vec2 c_5;\n  vec3 ret_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (((uv - 0.5) * 2.0) * aspect.wz);\n  vec2 tmpvar_8;\n  tmpvar_8.x = q21;\n  tmpvar_8.y = q22;\n  xlat_mutablenumerator = ((tmpvar_7 + tmpvar_8) * -10.0);\n  vec2 tmpvar_9;\n  tmpvar_9.x = q23;\n  tmpvar_9.y = q24;\n  xlat_mutabledenominator = (tmpvar_7 + tmpvar_9);\n  vec2 tmpvar_10;\n  tmpvar_10.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_10.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  c_5 = ((tmpvar_10 / (\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\n   + \n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\n  )) - 0.5);\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = (min (abs(\n    (c_5.x / c_5.y)\n  ), 1.0) / max (abs(\n    (c_5.x / c_5.y)\n  ), 1.0));\n  float tmpvar_13;\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\n  tmpvar_13 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\n  tmpvar_13 = (tmpvar_13 + (float(\n    (abs((c_5.x / c_5.y)) > 1.0)\n  ) * (\n    (tmpvar_13 * -2.0)\n   + 1.570796)));\n  tmpvar_11 = (tmpvar_13 * sign((c_5.x / c_5.y)));\n  if ((abs(c_5.y) > (1e-08 * abs(c_5.x)))) {\n    if ((c_5.y < 0.0)) {\n      if ((c_5.x >= 0.0)) {\n        tmpvar_11 += 3.141593;\n      } else {\n        tmpvar_11 = (tmpvar_11 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_11 = (sign(c_5.x) * 1.570796);\n  };\n  float tmpvar_14;\n  tmpvar_14 = (3.0 * tmpvar_11);\n  vec2 tmpvar_15;\n  tmpvar_15.x = ((tmpvar_14 * q25) + q26);\n  tmpvar_15.y = (((\n    (-2.0 * aspect.w)\n   * \n    log(sqrt(dot (c_5, c_5)))\n  ) + (tmpvar_14 * q25)) + q27);\n  spiral_4 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_15 * 0.5)) * 2.0) - 1.0)\n  )));\n  uvm_3.x = (spiral_4.x - (0.07 * texture (sampler_noise_hq, vec2((spiral_4.x * 0.8))).x));\n  uvm_3.y = (spiral_4.y - (0.07 * texture (sampler_noise_hq, vec2((spiral_4.y * 0.8))).x));\n  uv_1 = (spiral_4 - 0.5);\n  float tmpvar_16;\n  float tmpvar_17;\n  tmpvar_17 = (min (abs(\n    (uv_1.x / uv_1.y)\n  ), 1.0) / max (abs(\n    (uv_1.x / uv_1.y)\n  ), 1.0));\n  float tmpvar_18;\n  tmpvar_18 = (tmpvar_17 * tmpvar_17);\n  tmpvar_18 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_18) + 0.05368138) * tmpvar_18) - 0.1173503)\n     * tmpvar_18) + 0.1938925) * tmpvar_18) - 0.3326756)\n   * tmpvar_18) + 0.9999793) * tmpvar_17);\n  tmpvar_18 = (tmpvar_18 + (float(\n    (abs((uv_1.x / uv_1.y)) > 1.0)\n  ) * (\n    (tmpvar_18 * -2.0)\n   + 1.570796)));\n  tmpvar_16 = (tmpvar_18 * sign((uv_1.x / uv_1.y)));\n  if ((abs(uv_1.y) > (1e-08 * abs(uv_1.x)))) {\n    if ((uv_1.y < 0.0)) {\n      if ((uv_1.x >= 0.0)) {\n        tmpvar_16 += 3.141593;\n      } else {\n        tmpvar_16 = (tmpvar_16 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_16 = (sign(uv_1.x) * 1.570796);\n  };\n  vec2 tmpvar_19;\n  tmpvar_19.x = tmpvar_16;\n  tmpvar_19.y = inversesqrt(dot (uv_1, uv_1));\n  uv_1 = (uv_1 + 0.5);\n  vec2 tmpvar_20;\n  tmpvar_20 = (uv_1 - vec2(0.5, 0.5));\n  float tmpvar_21;\n  tmpvar_21 = (time * 0.1);\n  xy1_2.x = ((sin(tmpvar_21) * tmpvar_20.x) - (cos(tmpvar_21) * tmpvar_20.y));\n  xy1_2.y = ((cos(tmpvar_21) * tmpvar_20.x) + (sin(tmpvar_21) * tmpvar_20.y));\n  vec2 tmpvar_22;\n  tmpvar_22 = (xy1_2 - 0.5);\n  uv_1 = tmpvar_22;\n  vec4 tmpvar_23;\n  tmpvar_23 = texture (sampler_main, fract(uvm_3));\n  vec2 tmpvar_24;\n  tmpvar_24.x = (tmpvar_23.x + cos((\n    (uvm_3.x - (roam_sin.y * 2.0))\n   - \n    (2.0 * q31)\n  )));\n  tmpvar_24.y = (tmpvar_23.x - sin((\n    (uvm_3.y + (roam_cos.x * 2.0))\n   - \n    (2.0 * q32)\n  )));\n  vec3 tmpvar_25;\n  tmpvar_25 = (((10.0 * tmpvar_23.xyz) - (\n    ((texture (sampler_blur1, uvm_3).xyz * scale1) + bias1)\n   * rad)) - (4.0 * tmpvar_24).xxx);\n  vec3 tmpvar_26;\n  tmpvar_26 = (1.0 - tmpvar_25);\n  ret_6 = ((texture (sampler_main, tmpvar_22).xyz * tmpvar_26) + (0.55 * tmpvar_25));\n  vec3 tmpvar_27;\n  tmpvar_27 = mix (texture (sampler_main, tmpvar_19).xyz, mix (ret_6, tmpvar_26, vec3((1.5 * \n    clamp (dot (tmpvar_25, tmpvar_26), 0.0, 1.0)\n  ))), vec3(0.75, 0.75, 0.75));\n  ret_6 = tmpvar_27;\n  vec4 tmpvar_28;\n  tmpvar_28.w = 1.0;\n  tmpvar_28.xyz = tmpvar_27;\n  ret = tmpvar_28.xyz;\n }"}