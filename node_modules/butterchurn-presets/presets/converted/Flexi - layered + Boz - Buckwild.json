{"baseVals":{"rating":0,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.136,"wave_smoothing":0.9,"modwavealphastart":1.6,"modwavealphaend":1.6,"zoomexp":100,"zoom":1.01604,"rot":1,"cx":2,"cy":-1,"warp":0.01445,"wave_r":0,"wave_g":0.04,"wave_b":0,"ob_size":0.005,"ob_r":1,"ob_a":0.1,"ib_size":0.003,"ib_r":0,"ib_g":0,"ib_b":1,"ib_a":0.6,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.86644,"r":0.5,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"a.rot+=.1*Math.sin(div(a.time,20));a.ob_r+=a.time*Math.sin(2*a.bass);a.ob_b+=a.time*Math.sin(a.treb+1);a.ob_g+=a.time*Math.sin(div(a.mid,1.5));a.cx=2*Math.sin(.25*a.time);a.ib_r=Math.sin(a.time+a.ib_r*a.bass);a.ib_b=Math.sin(a.time+a.ib_r*a.treb);a.ib_g=Math.sin(a.time+a.ib_g*a.mid_att);","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = texture (sampler_fc_main, tmpvar_3).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 6.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\n  .z) * 0.02));\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(1.0004, 1.0004))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\n  ret_2.z = (ret_2.z * (1.0 + (ret_2.y * 0.024)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":"float xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  xlat_mutabled = (texsize.zw * 2.0).x;\n  xlat_mutabledx = ((texture (sampler_main, (uv + \n    (vec2(1.0, 0.0) * xlat_mutabled)\n  )).xyz - texture (sampler_main, (uv - \n    (vec2(1.0, 0.0) * xlat_mutabled)\n  )).xyz) * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((xlat_mutabledx.x + 0.5) * (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3).x) * vec3(1.0, 0.8, -0.4));\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.z;\n  tmpvar_4.y = xlat_mutabledy.z;\n  vec2 tmpvar_5;\n  tmpvar_5.x = xlat_mutabledx.x;\n  tmpvar_5.y = xlat_mutabledy.x;\n  uv_1 = ((uv - (\n    (tmpvar_4 * texsize.zw)\n   * 128.0)) + tmpvar_5);\n  ret_2 = (((1.0 - \n    (abs(((\n      (texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1)\n     + bias1) - (\n      (texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1)\n     + bias1))).z * 4.0)\n  ) * texture (sampler_main, uv_1).z) * vec3(0.5, 0.5, 1.0));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_2, vec3(2.0, 2.0, 2.0), (tmpvar_3 * 0.5));\n  ret_2 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = tmpvar_6;\n  ret = tmpvar_7.xyz;\n }"}