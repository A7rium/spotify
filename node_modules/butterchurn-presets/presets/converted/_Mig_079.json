{"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.207,"wave_scale":1.074,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpanimspeed":0.335,"warpscale":3.521,"zoomexp":2.1,"zoom":1.00002,"warp":0.92753,"ob_size":0,"ob_a":0.5,"ib_size":0.029,"ib_r":0.34,"ib_g":0.34,"ib_b":0.34,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.blah=0;","frame_eqs_str":"a.wave_x+=.29*(.6*Math.sin(2.121*a.time)+.4*Math.sin(1.621*a.time));a.wave_y+=.29*(.6*Math.sin(1.742*a.time)+.4*Math.sin(2.322*a.time));a.wave_r+=.35*(.6*Math.sin(.823*a.time)+.4*Math.sin(.916*a.time));a.wave_g+=.35*(.6*Math.sin(.9*a.time)+.4*Math.sin(1.023*a.time));a.wave_b+=.35*(.6*Math.sin(.808*a.time)+.4*Math.sin(.949*a.time));a.blah=div(.5,a.wave_r+a.wave_g+a.wave_b);a.wave_r*=a.blah;a.wave_g*=a.blah;a.wave_b*=a.blah;a.rot+=.035*(.6*Math.sin(.21*a.time)+.3*Math.sin(.339*\na.time));a.cx+=.3*(.6*Math.sin(.374*a.time)+.14*Math.sin(.194*a.time));a.cy+=.37*(.6*Math.sin(.274*a.time)+.1*Math.sin(.394*a.time));a.dx+=.01*(.6*Math.sin(.324*a.time)+.4*Math.sin(.234*a.time));a.dy+=.01*(.6*Math.sin(.244*a.time)+.4*Math.sin(.264*a.time));a.ib_r+=.2*Math.sin(.5413*a.time);a.ib_g+=.2*Math.sin(.6459*a.time);a.ib_b+=.2*Math.sin(.7354*a.time);a.blah=3*div(12.4,a.ib_r+a.ib_g+a.ib_b);a.ib_r*=a.blah;a.ib_g*=a.blah;a.ib_b*=a.blah;","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.03))).xyz - 0.004);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }"}