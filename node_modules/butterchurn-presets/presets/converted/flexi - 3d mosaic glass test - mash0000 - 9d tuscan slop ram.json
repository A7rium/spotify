{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.401,"wave_scale":3.177,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":2.289,"warpscale":5.472,"zoomexp":0.01,"zoom":0.9901,"warp":1.8566,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":1024,"y":0.55,"rad":0.024,"tex_zoom":0.7345,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_str":"a.d=0;a.zoom=0;a.w1=0;a.q3=0;a.w2=0;a.q4=0;a.w3=0;a.q5=0;a.i=0;a.my_x=0;a.i=0;a.my_y=0;a.i=0;a.my_z=0;a.x1=0;a.w1=0;a.my_x=0;a.w1=0;a.my_y=0;a.y1=0;a.w1=0;a.my_x=0;a.w1=0;a.my_y=0;a.z1=0;a.my_z=0;a.x2=0;a.w2=0;a.x1=0;a.w2=0;a.z1=0;a.z2=0;a.w2=0;a.x1=0;a.w2=0;a.z1=0;a.y2=0;a.y1=0;a.y3=0;a.w3=0;a.y2=0;a.w3=0;a.z2=0;a.z3=0;a.w3=0;a.y2=0;a.w3=0;a.z2=0;a.x3=0;a.x2=0;a.l=0;a.x3=0;a.x3=0;a.y3=0;a.y3=0;a.w=0;a.x3=0;a.y3=0;a.p=0;a.d=0;a.z3=0;a.l=0;a.d=0;a.x3=0;a.x3=0;a.y3=0;a.y3=0;a.z3=\n0;a.d=0;a.z3=0;a.d=0;a.d=0;a.my_x=0;a.zoom=0;a.w=0;a.p=0;a.my_y=0;a.zoom=0;a.w=0;a.p=0;a.my_x=0;a.my_y=0;a.q2=0;a.q1=0;","frame_eqs_str":"a.d=1.1;a.zoom=.7;a.w1=a.q3;a.w2=a.q4;a.w3=a.q5;a.i=a.instance+.001;a.my_x=div(mod(div(a.i,32),32),32)-.5;a.my_y=div(mod(a.i,32),32)-.5;a.my_z=0;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*\na.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.rad=div(a.rad,a.d);a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+a.my_x;a.y=.5+a.my_y;a.x=.5+div(a.x-.5,a.q2);a.y=.5+div(a.y-.5,a.q1);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.q1=0;a.q2=0;a.b=0;a.m=0;a.t=0;a.q3=0;a.q4=0;a.q5=0;","frame_eqs_str":"a.wave_a=0;a.q1=a.aspectx;a.q2=a.aspecty;a.b+=a.bass*a.bass*.5;a.m+=a.mid*a.mid*.5;a.t+=a.treb*a.treb*.5;a.q3=.012*a.b;a.q4=.012*a.m;a.q5=.012*a.t;","pixel_eqs_str":"","pixel_eqs":"","warp":"","comp":"uniform sampler2D sampler_manyfish;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 4.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_2.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = mix (texture (sampler_manyfish, (uv - (tmpvar_2 * 0.4))), vec4(0.0, 0.0, 0.4, 0.0), vec4((texture (sampler_main, uv).y * 0.7))).xyz;\n  ret = tmpvar_3.xyz;\n }"}