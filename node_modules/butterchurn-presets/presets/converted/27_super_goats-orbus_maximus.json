{"baseVals":{"rating":5,"gammaadj":2.7,"decay":0.715,"wrap":0,"solarize":1,"wave_a":0.001,"rot":0.004,"dx":-0.012,"dy":-0.004,"warp":0.80322,"sx":1.8167,"sy":1.79871,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":410,"rad":0.01,"r":0,"b":1,"g2":0,"a2":0.1,"border_a":0.006},"init_eqs_str":"a.q1=0;a.q2=0;a.q5=0;a.size=0;a.nc=0;a.xs=0;a.nc=0;a.nc=0;a.nc=0;a.nc=0;a.ys=0;a.nc=0;a.nc=0;a.nc=0;a.nc=0;a.zs=0;a.nc=0;a.nc=0;a.y1=0;a.ys=0;a.q1=0;a.zs=0;a.q1=0;a.z1=0;a.ys=0;a.q1=0;a.zs=0;a.q1=0;a.x1=0;a.z1=0;a.q2=0;a.xs=0;a.q2=0;a.z2=0;a.z1=0;a.q2=0;a.xs=0;a.q2=0;a.x2=0;a.x1=0;a.q3=0;a.y1=0;a.q3=0;a.y2=0;a.y1=0;a.q3=0;a.x1=0;a.q3=0;a.x3=0;a.x2=0;a.q4=0;a.y3=0;a.y2=0;a.z3=0;a.z2=0;a.q5=0;a.size=0;a.x3=0;a.z3=0;a.size=0;a.size=0;a.y3=0;a.z3=0;a.size=0;a.z3=0;","frame_eqs_str":"a.q1=div(a.time,5);a.q2=div(a.time,6);a.rad=.005+div(a.bass,100);a.q5=div(a.bass_att,70);a.b2=.7*a.treb-div(a.bass,2);a.r=div(a.instance,a.num_inst);a.g=Math.abs(div(a.treb_att,5)-a.bass);a.size=.3+div(a.bass_att,300);a.nc=sqrt(a.num_inst);a.xs=Math.sin(div(6.28*mod(a.instance,a.nc),a.nc))*Math.sin(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.ys=Math.cos(div(6.28*mod(a.instance,a.nc),a.nc))*Math.sin(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.zs=Math.cos(div(3.14*\nMath.floor(div(a.instance,a.nc)),a.nc));a.y1=a.ys*Math.cos(a.q1)-a.zs*Math.sin(a.q1);a.z1=a.ys*Math.sin(a.q1)+a.zs*Math.cos(a.q1);a.x1=a.z1*Math.sin(a.q2)+a.xs*Math.cos(a.q2);a.z2=a.z1*Math.cos(a.q2)-a.xs*Math.sin(a.q2);a.x2=a.x1*Math.cos(a.q3)-a.y1*Math.sin(a.q3);a.y2=a.y1*Math.cos(a.q3)+a.x1*Math.sin(a.q3);a.x3=a.x2+a.q4;a.y3=a.y2;a.z3=a.z2+a.q5;a.x=.5+a.size*div(a.x3,1+a.z3*a.size);a.y=.5+a.size*div(a.y3,1+a.z3*a.size);a.a=below(a.z3,0);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.4));\n  ret_1 = (ret_1 * 0.41);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\n  ret_1 = (ret_1 * 2.7);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }"}