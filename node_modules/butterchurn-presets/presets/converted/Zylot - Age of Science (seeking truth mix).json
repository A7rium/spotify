{"baseVals":{"rating":5,"wave_mode":1,"wrap":0,"wave_a":0.001,"wave_scale":0.132666,"wave_mystery":-0.38,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"","frame_eqs_str":"a.r=.8+.2*Math.sin(1.444*a.time);a.g=.8+.2*Math.sin(1.2233*a.time);a.b=.8+.2*Math.sin(1.332211*a.time);","point_eqs_str":"a.x=.5+3*Math.sin(20*a.sample)*a.value1;a.y=.5+3*Math.cos(20*a.sample)*a.value2;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.tme=0;a.tme=0;","frame_eqs_str":"","point_eqs_str":"a.tme+=.5*a.bass;a.x=.5+.24*Math.sin(6.2831852*a.sample);a.y=.5+.24*Math.cos(6.2831852*a.sample);a.r=Math.sin(20*a.sample+.0002*a.tme);a.g=0;a.b=0;a.a=.5+Math.sin(20*a.sample+.0002*a.tme);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.tme=0;a.tme=0;","frame_eqs_str":"","point_eqs_str":"a.tme+=.5*a.treb;a.x=.5+.241*Math.sin(6.2831852*a.sample);a.y=.5+.241*Math.cos(6.2831852*a.sample);a.r=0;a.g=Math.sin(20*a.sample+.0002*a.tme);a.b=0;a.a=.5+Math.sin(20*a.sample+.0002*a.tme);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.tme=0;","frame_eqs_str":"","point_eqs_str":"a.tme+=.5*a.mid;a.x=.5+.242*Math.sin(6.2831852*a.sample);a.y=.5+.242*Math.cos(6.2831852*a.sample);a.r=0;a.g=0;a.b=Math.sin(20*a.sample+.0002*a.tme);a.a=.5+Math.sin(20*a.sample+.0002*a.tme);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;"}],"init_eqs_str":"a.frbassc=0;a.frtrebc=0;a.q1=0;a.q2=0;a.frbassc=0;a.frtrebc=0;","frame_eqs_str":"a.warp=0;a.wave_r=a.wave_r+.4*Math.sin(.333*a.time)+.2*a.bass_att;a.wave_g=a.wave_g+.4*Math.sin(.555*a.time)+.2*a.treb_att;a.wave_b=a.wave_b+.4*Math.sin(.444*a.time)+.2*a.mid_att;a.frbassc+=.5*a.bass;a.frtrebc+=.5*a.treb;a.q1=Math.sin(.01*a.frbassc);a.q2=Math.sin(.01*a.frtrebc);","pixel_eqs_str":"a.zoom=1+.1*Math.abs(a.rad-(.8-.2*a.bass));","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, uv);\n  ret_1 = tmpvar_2.xyz;\n  if ((((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) < ((\n    ((mid + bass) + treb)\n   / 3.0) * 0.3))) {\n    ret_1 = (tmpvar_2.xyz + vec3(0.6, 0.6, 0.6));\n  } else {\n    ret_1 = ((ret_1 - 0.005) * 0.99);\n  };\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":"uniform sampler2D sampler_smalltiled_electric_nebula;\n shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec2 tmpvar_2;\n  tmpvar_2.x = ((uv.x + 0.5) + q1);\n  tmpvar_2.y = ((uv.y + 0.5) + q2);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = mix ((texture (sampler_smalltiled_electric_nebula, (\n    (tmpvar_2 * texsize.xy)\n   * texsize_smalltiled_electric_nebula.zw)).xyz * (\n    ((bass + mid) + treb)\n   * 0.5)), tmpvar_1.xyz, (tmpvar_1.xyz * 2.5));\n  ret = tmpvar_3.xyz;\n }"}