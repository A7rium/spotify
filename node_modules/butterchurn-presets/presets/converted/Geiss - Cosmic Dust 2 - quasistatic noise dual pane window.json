{"baseVals":{"rating":0,"gammaadj":1.7,"echo_zoom":1.16936,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.3029,"wave_scale":3.234464,"wave_smoothing":0.9,"warpscale":3.138,"zoom":1.053,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r+=.65*(.6*Math.sin(1.437*a.time)+.4*Math.sin(.97*a.time));a.wave_g+=.65*(.6*Math.sin(1.344*a.time)+.4*Math.sin(.841*a.time));a.wave_b+=.65*(.6*Math.sin(1.251*a.time)+.4*Math.sin(1.055*a.time));a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.21*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.21*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.01*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.01*(.6*Math.sin(.284*\na.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.9*(.016*equal(a.bass_thresh,2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual);a.dy_residual=.9*(.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual);a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;\n","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = roam_cos.y;\n  tmpvar_2.y = roam_sin.y;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv * texsize.xy);\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_noise_lq, ((tmpvar_3 * texsize_noise_lq.zw) + tmpvar_2)).x * 2.0)\n   - 1.0) * 0.14));\n  vec2 tmpvar_4;\n  tmpvar_4.x = roam_cos.z;\n  tmpvar_4.y = roam_sin.z;\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (0.29 * ((tmpvar_3 * texsize_noise_lq.zw) + tmpvar_4))).x * 2.0)\n   - 1.0) * 0.05));\n  ret_1 = (ret_1 - 0.008);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (0.5 * (texture (sampler_main, uv).xyz + texture (sampler_main, (\n    ((uv - 0.5) * 0.9)\n   + 0.5)).xyz));\n  ret_1 = (ret_1 * 1.333);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }"}