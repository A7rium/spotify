{"baseVals":{"rating":0,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.335,"warpscale":3.928,"zoomexp":2.1,"zoom":0.961,"rot":0.22,"warp":1.77101,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_a":0.5,"ib_size":0.029,"ib_r":0.34,"ib_g":0.34,"ib_b":0.34,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"additive":1,"r":0.1,"g":0.28,"a":0.2},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.cc_ad_a=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.cc_int=0;a.q1=0;a.cc_ramp=0;a.cc_b=0;a.xq=0;a.sang=0;a.t3=0;a.bias_i=0;a.ys=0;a.pi=0;a.ang2=0;a.zq=0;a.phs=0;a.cc_ad_b=0;a.ang=0;a.cc_a=0;a.t2=0;a.zp=0;a.bias=0;a.q2=0;a.t4=0;a.cc=0;a.pi2=0;a.t2=0;","frame_eqs_str":"a.t1=13*a.time;a.t2=.5*Math.sin(3*a.time)+.5;a.t2=.3*a.t2+.1;a.t2=.003*a.q2+.06;a.t3=a.q1;a.t4=div(a.time,8);a.t5=.5*Math.sin(div(a.time,4))+.5;a.t5=17*a.t5+1.3;","point_eqs_str":"a.n=6.283*a.sample;a.pi=3.1415;a.pi2=6.283;a.phs=a.t1+9*a.sample;a.bias=a.t5;a.bias_i=a.bias-1;a.cc=div(a.phs,3);a.cc_int=Math.floor(a.cc);a.cc_ramp=a.cc-a.cc_int;a.cc_ad_a=div(a.cc_ramp*a.bias-1,a.bias_i);a.cc_ad_a=.00001<Math.abs(below(a.cc_ad_a,0))?0:a.cc_ad_a;a.cc_ad_b=a.cc_ramp*a.bias;a.cc_ad_b=.00001<Math.abs(above(a.cc_ad_b,1))?1:a.cc_ad_b;a.cc_a=a.cc_ad_a+a.cc_int;a.cc_b=a.cc_ad_b+a.cc_int;a.xp=a.t2*above(a.cc_ad_a,0);a.yp=1;a.zp=0;a.ang=100.528*a.cc_a;a.sang=Math.sin(a.ang);\na.cang=Math.cos(a.ang);a.xq=a.sang*a.xp+a.cang*a.zp;a.yq=a.yp;a.zq=a.cang*a.xp-a.sang*a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang2=a.cc_b+a.t4;a.sang=Math.sin(a.ang2);a.cang=Math.cos(a.ang2);a.xq=a.xp;a.yq=a.sang*a.yp+a.cang*a.zp;a.zq=a.cang*a.yp-a.sang*a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang2=3.13*a.cc_b+a.t4;a.sang=Math.sin(a.ang2);a.cang=Math.cos(a.ang2);a.xq=a.sang*a.xp+a.cang*a.yp;a.yq=a.cang*a.xp-a.sang*a.yp;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang2=1.43*a.cc_b+a.t4;a.sang=Math.sin(a.ang2);\na.cang=Math.cos(a.ang2);a.xq=a.sang*a.xp+a.cang*a.zp;a.yq=a.yp;a.zq=a.cang*a.xp-a.sang*a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=3.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.blah=0;","frame_eqs_str":"a.wave_x+=.29*(.6*Math.sin(2.121*a.time)+.4*Math.sin(1.621*a.time));a.wave_y+=.29*(.6*Math.sin(1.742*a.time)+.4*Math.sin(2.322*a.time));a.wave_r+=.35*(.6*Math.sin(.823*a.time)+.4*Math.sin(.916*a.time));a.wave_g+=.35*(.6*Math.sin(.9*a.time)+.4*Math.sin(1.023*a.time));a.wave_b+=.35*(.6*Math.sin(.808*a.time)+.4*Math.sin(.949*a.time));a.blah=div(.5,a.wave_r+a.wave_g+a.wave_b);a.wave_r*=a.blah;a.wave_g*=a.blah;a.wave_b*=a.blah;a.rot+=.12*(.6*Math.sin(.21*a.time)+.4*Math.sin(.339*\na.time));a.cx+=.3*(.6*Math.sin(.374*a.time)+.14*Math.sin(.194*a.time));a.cy+=.37*(.6*Math.sin(.274*a.time)+.1*Math.sin(.394*a.time));a.ib_r+=.2*Math.sin(.5413*a.time);a.ib_g+=.2*Math.sin(.6459*a.time);a.ib_b+=.2*Math.sin(.7354*a.time);a.blah=3*div(.4,a.ib_r+a.ib_g+a.ib_b);a.ib_r*=a.blah;a.ib_g*=a.blah;a.ib_b*=a.blah;a.dx=.01*Math.cos(.27934*a.time+5);a.dy=.01*Math.sin(.23142*a.time+2);","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 0.65);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }"}