{"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"modwavealphabyvolume":1,"wrap":0,"brighten":1,"invert":1,"wave_a":100,"wave_scale":0.466,"wave_smoothing":0.9,"warpscale":0.01,"zoomexp":1.001,"fshader":0.6,"warp":0,"wave_y":0.71,"ob_size":0.005,"ob_r":1,"ob_g":0.37,"ob_b":0.49,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"y":0.04,"rad":0.01,"ang":1.31947,"tex_zoom":0.67165,"r":0,"r2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.q5=0;a.q6=0;","frame_eqs_str":"a.rad=.25+.03*(.2*a.q5+.8*a.q6+2*a.bass_att);"},{"baseVals":{"enabled":1,"textured":1,"x":0.42,"y":0,"rad":0.10721,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1,"scaling":0.16217,"smoothing":1,"r":0,"g":0,"b":0},"init_eqs_str":"a.q2=0;","frame_eqs_str":"","point_eqs_str":"a.x=a.sample;a.y=.5+.05*Math.tan(6.28*a.x)+.1*Math.tan(6.28*a.q2*a.x);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"thick":1,"scaling":0.01,"smoothing":1,"r":0,"g":0.01,"b":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.05*a.sample;a.y=.19+.03*Math.cos(23.5*a.x);a.x+=.003*Math.sin(a.time);a.y+=.11*Math.sin(a.time)*Math.sin(6.28*a.x);a.y+=.02*Math.sin(.4*a.time);"},{"baseVals":{"enabled":1,"thick":1,"b":0},"init_eqs_str":"a.q7=0;","frame_eqs_str":"","point_eqs_str":"a.x=.52+.01*a.sample;a.y=.2+.04*a.sample;a.x+=.001*a.q7*Math.sin(15*a.q7);a.y+=.001*a.q7*Math.cos(15*a.q7);a.b=a.sample;a.g=a.sample;a.r=a.sample;"}],"init_eqs_str":"a.q25=0;a.t1=0;a.q22=0;a.q21=0;a.q6=0;a.q1=0;a.q5=0;a.q9=0;a.v=0;a.mm=0;a.tt=0;a.t3=0;a.bm=0;a.q23=0;a.q24=0;a.q4=0;a.q26=0;a.mt=0;a.mx=0;a.mn=0;a.t2=0;a.bb=0;a.q2=0;a.q27=0;a.q3=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.q1=Math.sin(a.time);a.q2=Math.sin(.3*a.time);a.q3=Math.sin(.2*a.time);a.q4=Math.sin(.1*a.time);a.q5=Math.sin(20*a.time);a.q6=Math.sin(25*a.time);a.ib_g=.9+.1*a.q4;a.ib_r=.7+.15*a.q2;a.ib_b=.8+.2*a.q3;a.ob_g=.6+.1*a.q4;a.ob_r=.4+.15*a.q2;a.ob_b=.5+.2*a.q3;a.t1=.008+a.t1;a.t1*=above(15,a.t1);a.t2=.004+a.t2;a.t2*=above(20,a.t2);a.t3=.006+a.t3;a.t3*=above(15,a.t3);a.q7=a.t1;a.q8=a.t2;a.q9=a.t3;a.monitor=a.q7;a.bb=.99*a.bb+.02*a.bass;a.mm=.99*a.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;\na.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.t1=div(a.bb-a.mn,a.mx-a.mn);a.t2=div(a.mm-a.mn,a.mx-a.mn);a.t3=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.3,a.fps);a.bm+=(a.t1-a.t2)*a.v;a.mt+=(a.t2-a.t3)*a.v;a.q21=0;a.q22=.5;a.q23=0;a.q24=-.5;a.q25=div(.5,Math.asin(1));a.q26=a.bm;a.q27=a.mt;","pixel_eqs_str":"a.dx=.006*Math.sin(a.y)+.003*Math.tan(10+20*a.y);a.dy=.005*Math.sin(a.x)+.02*Math.tan(30*a.x);","warp":" shader_body { \n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).y * 0.65);\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 6.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\n  .z) * 0.02));\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(1.0004, 1.0004))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\n  ret_2.z = (ret_2.z * (1.0 + (ret_2.y * 0.024)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":"vec2 xlat_mutablers;\n shader_body { \n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\n  xlat_mutablers.x = ((ang / 3.14) + q28);\n  xlat_mutablers.y = ((0.1 / (0.05 + \n    sqrt(dot (tmpvar_2, tmpvar_2))\n  )) + (time * 0.5));\n  vec2 tmpvar_3;\n  tmpvar_3 = fract(xlat_mutablers);\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  tmpvar_4.x = texsize.z;\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6.x = (texture (sampler_main, (tmpvar_3 - tmpvar_4)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_4)).xyz).x;\n  tmpvar_6.y = (texture (sampler_main, (tmpvar_3 - tmpvar_5)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_5)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (fract(xlat_mutablers) * 16.0)\n  )) - (4.0 * tmpvar_6));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((1.0 + bass_att) * ((3.2 * vec3(\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * (0.6 - \n    (texture (sampler_main, tmpvar_3).xyz + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1))\n  )));\n  ret = tmpvar_7.xyz;\n }"}