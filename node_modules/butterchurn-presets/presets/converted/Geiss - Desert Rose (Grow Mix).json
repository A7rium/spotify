{"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.827,"wave_scale":3.878,"wave_smoothing":0.09,"wave_mystery":0.98,"modwavealphastart":1.03,"modwavealphaend":1.27,"warpscale":3.138,"zoom":1.007,"warp":0.02936,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.72,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r=.6+.4*Math.sin(14.437*a.time+1);a.wave_g=.6+.4*Math.sin(17.344*a.time+2);a.wave_b=.6+.4*Math.sin(22.751*a.time+3);a.rot+=.004*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.21*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.21*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.003*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.003*(.6*Math.sin(.284*a.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=\na.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual;a.dy_residual=.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual;a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;a.warp*=1+.3*Math.cos(.284*a.time+4);a.zoom+=.007*Math.cos(.317*a.time+2);","pixel_eqs_str":"","pixel_eqs":"","warp":" shader_body { \n  vec4 lums_1;\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = texsize.zw;\n  vec3 tmpvar_3;\n  tmpvar_3 = (tmpvar_2 * 2.0);\n  lums_1.x = dot (texture (sampler_main, (uv + (texsize.zw * tmpvar_3.xz))).xyz, vec3(0.32, 0.49, 0.29));\n  lums_1.y = dot (texture (sampler_main, (uv - (texsize.zw * tmpvar_3.xz))).xyz, vec3(0.32, 0.49, 0.29));\n  lums_1.z = dot (texture (sampler_main, (uv + (texsize.zw * tmpvar_3.zy))).xyz, vec3(0.32, 0.49, 0.29));\n  lums_1.w = dot (texture (sampler_main, (uv - (texsize.zw * tmpvar_3.zy))).xyz, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_4;\n  tmpvar_4.x = (lums_1.x - lums_1.y);\n  tmpvar_4.y = (lums_1.z - lums_1.w);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (texture (sampler_fc_main, (uv + (\n    (((clamp (\n      ((((1300.0 * tmpvar_4) / 2.0) * 0.5) + 0.5)\n    , 0.0, 1.0) * 2.0) - 1.0) * 1.4)\n   * texsize.zw))).xyz * 0.965);\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  float tmpvar_2;\n  tmpvar_2 = dot (tmpvar_1.xyz, vec3(0.3, 0.5, 0.2));\n  vec3 x_3;\n  x_3 = (tmpvar_1.xyz - vec3(tmpvar_2));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = mix (vec3(tmpvar_2), tmpvar_1.xyz, vec3((sqrt(\n    dot (x_3, x_3)\n  ) * 60.0)));\n  ret = tmpvar_4.xyz;\n }"}