{"baseVals":{"rating":4,"wave_mode":5,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.136,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.02705,"ang":1.5708,"tex_ang":1.25664,"tex_zoom":3.07268,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.t1=0;a.sample=0;a.t_abs=0;a.sample=0;a.t_rel=0;a.sample=0;a.ampl=0;a.t_abs=0;a.k1=0;a.k2=0;a.ox=0;a.ampl=0;a.t_abs=0;a.k1=0;a.t_abs=0;a.oy=0;a.ampl=0;a.t_abs=0;a.k2=0;a.oz=0;a.t_rel=0;a.t_rel=0;a.t_rel=0;a.xang=0;a.yang=0;a.zang=0;a.fov=0;a.mx=0;a.ox=0;a.zang=0;a.oy=0;a.zang=0;a.my=0;a.ox=0;a.zang=0;a.oy=0;a.zang=0;a.ox=0;a.mx=0;a.oy=0;a.my=0;a.mx=0;a.ox=0;a.yang=0;a.oz=0;a.yang=0;a.mz=0;a.ox=0;a.yang=0;a.oz=0;a.yang=0;a.ox=0;a.mx=0;a.oz=0;a.mz=0;a.my=0;a.oy=0;a.xang=0;a.oz=\n0;a.xang=0;a.mz=0;a.oy=0;a.xang=0;a.oz=0;a.xang=0;a.oy=0;a.my=0;a.oz=0;a.mz=0;a.oz=0;a.oz=0;a.ox=0;a.fov=0;a.oz=0;a.oy=0;a.fov=0;a.oz=0;a.mz=0;a.mz=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.ampl=div(2*a.t_abs,2);a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);a.yang=div(0*a.time,7);a.zang=div(-a.time,\n22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.a=.5*div(1,a.mz);a.rad=.005*div(1,a.mz);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"a.du=0;a.q1=0;a.dv=0;a.q2=0;a.dist=0;a.ang2=0;a.mult=0;","frame_eqs_str":"a.mv_g+=.2*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.mv_b+=.2*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.q1=2*a.cx-1+.6*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.q2=2*a.cy-1+.6*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.ob_r=1-.4*Math.abs(a.q1);a.ob_g=.3*Math.abs(a.q2);a.ob_b=.4*Math.abs(a.q1);a.wave_x=1-Math.abs(a.q2)-.05;a.wave_y=1-Math.abs(a.q1)-.06;a.wave_r+=.4*(.6*Math.sin(.514*a.time)+.4*Math.sin(1.211*a.time));a.wave_b+=\n.4*(.6*Math.sin(.714*a.time)+.4*Math.sin(a.q2));a.wave_g+=.4*(.6*Math.sin(10*a.q1)+.4*Math.sin(10*a.q2));","pixel_eqs_str":"a.du=2*a.x-1-a.q1;a.dv=2*a.y-1-a.q2;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv)+.15*a.time;a.mult=.6*Math.sin(.05*a.dist);","warp":" shader_body { \n  vec2 my_uv_1;\n  float dy_2;\n  float dx_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 12.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (((texture (sampler_blur2, \n    ((uv + (vec2(1.0, 0.0) * tmpvar_5)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_5))))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    ((uv - (vec2(1.0, 0.0) * tmpvar_5)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_5))))\n  ).xyz * scale2) + bias2)).y;\n  tmpvar_6.y = (((texture (sampler_blur2, \n    ((uv + (vec2(0.0, 1.0) * tmpvar_5)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_5))))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    ((uv - (vec2(0.0, 1.0) * tmpvar_5)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_5))))\n  ).xyz * scale2) + bias2)).y;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - (tmpvar_6 * 0.08));\n  ret_4.y = texture (sampler_fc_main, (tmpvar_7 - floor(tmpvar_7))).y;\n  ret_4.y = (ret_4.y + ((\n    (ret_4.y - ((texture (sampler_blur1, (tmpvar_7 - \n      floor(tmpvar_7)\n    )).xyz * scale1) + bias1).y)\n   * 0.125) + 0.02));\n  dx_3 = (((\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\n  ).x * 1280.0) * texsize.z);\n  dy_2 = (((\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\n  ).x * 1024.0) * texsize.w);\n  vec2 tmpvar_8;\n  tmpvar_8.x = dx_3;\n  tmpvar_8.y = dy_2;\n  my_uv_1 = (uv + (tmpvar_8 * 0.01));\n  ret_4.x = texture (sampler_fw_main, my_uv_1).x;\n  ret_4.x = (ret_4.x + ((\n    (ret_4.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\n   - 0.02) * 0.2));\n  vec2 tmpvar_9;\n  tmpvar_9.x = dy_2;\n  tmpvar_9.y = -(dx_3);\n  my_uv_1 = (uv - (tmpvar_9 * 0.04));\n  ret_4.z = texture (sampler_fw_main, my_uv_1).z;\n  ret_4.z = (ret_4.z + (ret_4.z - (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1).z));\n  ret_4.z = (ret_4.z * (0.9 * (\n    (ret_4.x + (ret_4.y * 0.64))\n   - 1.0)));\n  ret_4.z = (ret_4.z + 0.02);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_4;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q1;\n  tmpvar_2.y = q2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - tmpvar_2);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q2;\n  tmpvar_4.y = q1;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - tmpvar_4);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0) / max (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((tmpvar_5.x / tmpvar_5.y)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((tmpvar_5.x / tmpvar_5.y)));\n  if ((abs(tmpvar_5.y) > (1e-08 * abs(tmpvar_5.x)))) {\n    if ((tmpvar_5.y < 0.0)) {\n      if ((tmpvar_5.x >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(tmpvar_5.x) * 1.570796);\n  };\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, fract(uv));\n  vec3 tmpvar_10;\n  tmpvar_10 = (((tmpvar_9.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) - sin(time)) * (tmpvar_9.xyz / (1.0 - \n    cos(((tmpvar_6 - (12.0 * \n      sqrt(dot (tmpvar_3, tmpvar_3))\n    )) - ((0.2 * q11) - time)))\n  )).x);\n  vec3 tmpvar_11;\n  tmpvar_11 = (1.0 - tmpvar_10);\n  vec2 tmpvar_12;\n  tmpvar_12.x = uv.x;\n  tmpvar_12.y = (uv.y * 0.75);\n  ret_1 = ((texture (sampler_main, tmpvar_12).xyz * tmpvar_11) + (0.55 * tmpvar_10));\n  vec3 tmpvar_13;\n  tmpvar_13 = mix (ret_1, tmpvar_11, vec3((1.5 * clamp (\n    dot (tmpvar_10, tmpvar_11)\n  , 0.0, 1.0))));\n  ret_1 = tmpvar_13;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = tmpvar_13;\n  ret = tmpvar_14.xyz;\n }"}